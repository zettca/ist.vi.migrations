{"version":3,"sources":["../node_modules/d3-dsv/src/dsv.js","../node_modules/d3-dsv/src/csv.js","../node_modules/d3-dsv/src/tsv.js","../node_modules/d3-dsv/src/index.js","../node_modules/d3-fetch/src/buffer.js","../node_modules/d3-fetch/src/text.js","../node_modules/d3-fetch/src/dsv.js","../node_modules/d3-fetch/src/json.js","../node_modules/d3-fetch/src/xml.js","../node_modules/d3-fetch/src/index.js","../node_modules/d3/dist/package.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/cross.js","../node_modules/d3-array/src/array.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-axis/src/array.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-selection/src/namespaces.js","../node_modules/d3-selection/src/namespace.js","../node_modules/d3-selection/src/creator.js","../node_modules/d3-selection/src/selector.js","../node_modules/d3-selection/src/selectorAll.js","../node_modules/d3-selection/src/matcher.js","../node_modules/d3-selection/src/selection/sparse.js","../node_modules/d3-selection/src/selection/enter.js","../node_modules/d3-selection/src/constant.js","../node_modules/d3-selection/src/selection/data.js","../node_modules/d3-selection/src/selection/sort.js","../node_modules/d3-selection/src/selection/attr.js","../node_modules/d3-selection/src/window.js","../node_modules/d3-selection/src/selection/style.js","../node_modules/d3-selection/src/selection/classed.js","../node_modules/d3-selection/src/selection/text.js","../node_modules/d3-selection/src/selection/html.js","../node_modules/d3-selection/src/selection/raise.js","../node_modules/d3-selection/src/selection/lower.js","../node_modules/d3-selection/src/selection/insert.js","../node_modules/d3-selection/src/selection/remove.js","../node_modules/d3-selection/src/selection/clone.js","../node_modules/d3-selection/src/selection/on.js","../node_modules/d3-selection/src/selection/dispatch.js","../node_modules/d3-selection/src/selection/index.js","../node_modules/d3-selection/src/selection/select.js","../node_modules/d3-selection/src/selection/selectAll.js","../node_modules/d3-selection/src/selection/filter.js","../node_modules/d3-selection/src/selection/exit.js","../node_modules/d3-selection/src/selection/merge.js","../node_modules/d3-selection/src/selection/order.js","../node_modules/d3-selection/src/selection/call.js","../node_modules/d3-selection/src/selection/nodes.js","../node_modules/d3-selection/src/selection/node.js","../node_modules/d3-selection/src/selection/size.js","../node_modules/d3-selection/src/selection/empty.js","../node_modules/d3-selection/src/selection/each.js","../node_modules/d3-selection/src/selection/property.js","../node_modules/d3-selection/src/selection/append.js","../node_modules/d3-selection/src/selection/datum.js","../node_modules/d3-selection/src/local.js","../node_modules/d3-selection/src/sourceEvent.js","../node_modules/d3-selection/src/selectAll.js","../node_modules/d3-drag/src/event.js","../node_modules/d3-drag/src/drag.js","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-color/src/math.js","../node_modules/d3-color/src/lab.js","../node_modules/d3-color/src/cubehelix.js","../node_modules/d3-interpolate/src/basis.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/basisClosed.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-interpolate/src/transform/parse.js","../node_modules/d3-interpolate/src/transform/decompose.js","../node_modules/d3-interpolate/src/transform/index.js","../node_modules/d3-interpolate/src/zoom.js","../node_modules/d3-interpolate/src/hsl.js","../node_modules/d3-interpolate/src/hcl.js","../node_modules/d3-interpolate/src/cubehelix.js","../node_modules/d3-interpolate/src/quantize.js","../node_modules/d3-timer/src/timer.js","../node_modules/d3-timer/src/timeout.js","../node_modules/d3-transition/src/transition/schedule.js","../node_modules/d3-transition/src/interrupt.js","../node_modules/d3-transition/src/transition/tween.js","../node_modules/d3-transition/src/transition/interpolate.js","../node_modules/d3-transition/src/transition/remove.js","../node_modules/d3-transition/src/transition/selection.js","../node_modules/d3-transition/src/transition/text.js","../node_modules/d3-transition/src/transition/index.js","../node_modules/d3-transition/src/transition/select.js","../node_modules/d3-transition/src/transition/selectAll.js","../node_modules/d3-transition/src/transition/filter.js","../node_modules/d3-transition/src/transition/merge.js","../node_modules/d3-transition/src/transition/transition.js","../node_modules/d3-transition/src/transition/on.js","../node_modules/d3-transition/src/transition/attr.js","../node_modules/d3-transition/src/transition/attrTween.js","../node_modules/d3-transition/src/transition/style.js","../node_modules/d3-transition/src/transition/styleTween.js","../node_modules/d3-transition/src/transition/delay.js","../node_modules/d3-transition/src/transition/duration.js","../node_modules/d3-transition/src/transition/ease.js","../node_modules/d3-ease/src/poly.js","../node_modules/d3-ease/src/sin.js","../node_modules/d3-ease/src/back.js","../node_modules/d3-ease/src/elastic.js","../node_modules/d3-transition/src/selection/transition.js","../node_modules/d3-ease/src/cubic.js","../node_modules/d3-transition/src/selection/index.js","../node_modules/d3-transition/src/selection/interrupt.js","../node_modules/d3-brush/src/brush.js","../node_modules/d3-chord/src/math.js","../node_modules/d3-chord/src/array.js","../node_modules/d3-chord/src/chord.js","../node_modules/d3-path/src/path.js","../node_modules/d3-collection/src/map.js","../node_modules/d3-collection/src/set.js","../node_modules/d3-contour/src/array.js","../node_modules/d3-quadtree/src/add.js","../node_modules/d3-quadtree/src/cover.js","../node_modules/d3-quadtree/src/quad.js","../node_modules/d3-quadtree/src/x.js","../node_modules/d3-quadtree/src/y.js","../node_modules/d3-quadtree/src/quadtree.js","../node_modules/d3-quadtree/src/data.js","../node_modules/d3-quadtree/src/extent.js","../node_modules/d3-quadtree/src/find.js","../node_modules/d3-quadtree/src/remove.js","../node_modules/d3-quadtree/src/root.js","../node_modules/d3-quadtree/src/size.js","../node_modules/d3-quadtree/src/visit.js","../node_modules/d3-quadtree/src/visitAfter.js","../node_modules/d3-force/src/simulation.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-geo/src/adder.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/equalEarth.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/naturalEarth1.js","../node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo/src/projection/stereographic.js","../node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/d3-hierarchy/src/hierarchy/count.js","../node_modules/d3-hierarchy/src/hierarchy/index.js","../node_modules/d3-hierarchy/src/hierarchy/each.js","../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../node_modules/d3-hierarchy/src/hierarchy/sum.js","../node_modules/d3-hierarchy/src/hierarchy/sort.js","../node_modules/d3-hierarchy/src/hierarchy/path.js","../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../node_modules/d3-hierarchy/src/hierarchy/links.js","../node_modules/d3-hierarchy/src/array.js","../node_modules/d3-hierarchy/src/treemap/round.js","../node_modules/d3-hierarchy/src/treemap/dice.js","../node_modules/d3-hierarchy/src/tree.js","../node_modules/d3-hierarchy/src/treemap/slice.js","../node_modules/d3-hierarchy/src/treemap/squarify.js","../node_modules/d3-hierarchy/src/treemap/resquarify.js","../node_modules/d3-polygon/src/hull.js","../node_modules/d3-random/src/defaultSource.js","../node_modules/d3-random/src/normal.js","../node_modules/d3-random/src/uniform.js","../node_modules/d3-random/src/irwinHall.js","../node_modules/d3-random/src/logNormal.js","../node_modules/d3-scale/src/array.js","../node_modules/d3-random/src/bates.js","../node_modules/d3-random/src/exponential.js","../node_modules/d3-scale/src/threshold.js","../node_modules/d3-time/src/interval.js","../node_modules/d3-time/src/millisecond.js","../node_modules/d3-time/src/duration.js","../node_modules/d3-time/src/second.js","../node_modules/d3-time/src/minute.js","../node_modules/d3-time/src/hour.js","../node_modules/d3-time/src/day.js","../node_modules/d3-time/src/week.js","../node_modules/d3-time/src/month.js","../node_modules/d3-time/src/year.js","../node_modules/d3-time/src/utcMinute.js","../node_modules/d3-time/src/utcHour.js","../node_modules/d3-time/src/utcDay.js","../node_modules/d3-time/src/utcWeek.js","../node_modules/d3-time/src/utcMonth.js","../node_modules/d3-time/src/utcYear.js","../node_modules/d3-time-format/src/locale.js","../node_modules/d3-time-format/src/defaultLocale.js","../node_modules/d3-time-format/src/isoFormat.js","../node_modules/d3-time-format/src/isoParse.js","../node_modules/d3-scale-chromatic/src/colors.js","../node_modules/d3-scale-chromatic/src/ramp.js","../node_modules/d3-scale-chromatic/src/categorical/category10.js","../node_modules/d3-scale-chromatic/src/categorical/Accent.js","../node_modules/d3-scale-chromatic/src/categorical/Dark2.js","../node_modules/d3-scale-chromatic/src/categorical/Paired.js","../node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","../node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","../node_modules/d3-scale-chromatic/src/categorical/Set1.js","../node_modules/d3-scale-chromatic/src/categorical/Set2.js","../node_modules/d3-scale-chromatic/src/categorical/Set3.js","../node_modules/d3-scale-chromatic/src/diverging/BrBG.js","../node_modules/d3-scale-chromatic/src/diverging/PRGn.js","../node_modules/d3-scale-chromatic/src/diverging/PiYG.js","../node_modules/d3-scale-chromatic/src/diverging/PuOr.js","../node_modules/d3-scale-chromatic/src/diverging/RdBu.js","../node_modules/d3-scale-chromatic/src/diverging/RdGy.js","../node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","../node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","../node_modules/d3-scale-chromatic/src/diverging/Spectral.js","../node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","../node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","../node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","../node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","../node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","../node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","../node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","../node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","../node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","../node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","../node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","../node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","../node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","../node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","../node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","../node_modules/d3-shape/src/math.js","../node_modules/d3-shape/src/curve/linear.js","../node_modules/d3-shape/src/curve/radial.js","../node_modules/d3-shape/src/array.js","../node_modules/d3-shape/src/symbol/diamond.js","../node_modules/d3-shape/src/symbol/circle.js","../node_modules/d3-shape/src/symbol/star.js","../node_modules/d3-shape/src/noop.js","../node_modules/d3-shape/src/symbol/triangle.js","../node_modules/d3-shape/src/symbol/wye.js","../node_modules/d3-shape/src/curve/basis.js","../node_modules/d3-shape/src/curve/basisClosed.js","../node_modules/d3-shape/src/curve/basisOpen.js","../node_modules/d3-shape/src/curve/bundle.js","../node_modules/d3-shape/src/curve/cardinal.js","../node_modules/d3-shape/src/curve/cardinalClosed.js","../node_modules/d3-shape/src/curve/cardinalOpen.js","../node_modules/d3-shape/src/curve/catmullRom.js","../node_modules/d3-shape/src/curve/catmullRomClosed.js","../node_modules/d3-shape/src/curve/catmullRomOpen.js","../node_modules/d3-shape/src/curve/linearClosed.js","../node_modules/d3-shape/src/curve/monotone.js","../node_modules/d3-shape/src/curve/natural.js","../node_modules/d3-shape/src/curve/step.js","../node_modules/d3-voronoi/src/RedBlackTree.js","../node_modules/d3-voronoi/src/Edge.js","../node_modules/d3-voronoi/src/Cell.js","../node_modules/d3-voronoi/src/Circle.js","../node_modules/d3-voronoi/src/Beach.js","../node_modules/d3-voronoi/src/Diagram.js","../node_modules/d3-zoom/src/transform.js","../node_modules/d3/index.js","../node_modules/topojson/node_modules/topojson-client/src/identity.js","../node_modules/topojson/node_modules/topojson-client/src/transform.js","../node_modules/topojson/node_modules/topojson-client/src/reverse.js","../node_modules/topojson/node_modules/topojson-client/src/feature.js","../node_modules/topojson/node_modules/topojson-client/src/stitch.js","../node_modules/topojson/node_modules/topojson-client/src/mesh.js","../node_modules/topojson/node_modules/topojson-client/src/bisect.js","../node_modules/topojson/node_modules/topojson-server/src/hash/point-hash.js","../node_modules/topojson/node_modules/topojson-simplify/src/spherical.js","../node_modules/topojson/index.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","name","i","JSON","stringify","join","dsv","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","text","f","t","rows","N","length","I","n","eof","eol","token","c","j","slice","replace","row","push","formatRow","formatValue","test","parse","convert","object","customConverter","format","columnSet","Object","create","forEach","column","inferColumns","concat","formatRows","csv","csvParse","tsv","tsvParse","__webpack_require__","d","__webpack_exports__","responseText","response","ok","Error","status","statusText","src_text","input","init","fetch","then","dsvParse","arguments","undefined","src","responseJson","json","parser","type","DOMParser","parseFromString","ascending","a","b","NaN","bisector","compare","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisect","array_array","Array","prototype","Math","sqrt","src_merge","arrays","m","merged","array","noop","value","dispatch","_","Dispatch","this","get","set","callback","constructor","on","typename","types","T","trim","split","indexOf","hasOwnProperty","copy","call","that","args","apply","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","appendChild","child","insertBefore","next","keyPrefix","bindIndex","group","enter","exit","data","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","add","classedRemove","remove","setAttribute","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","parentNode","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","o","removeEventListener","capture","onAdd","wrap","addEventListener","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","select","subgroups","subnode","subgroup","selectAll","filter","match","size","each","bind","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","merge","selection","groups0","groups1","m0","m1","min","merges","group0","group1","order","sort","compareNode","sortgroups","sortgroup","nodes","empty","attr","getAttributeNS","removeAttributeNS","removeAttribute","v","setAttributeNS","priority","removeProperty","setProperty","property","classed","html","append","insert","before","clone","deep","typenames","on_parseTypenames","src_selection","nextId","Local","toString","id","src_selectAll","DragEvent","target","subject","active","y","dx","dy","identifier","define","factory","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","r","g","rgbConvert","rgb","opacity","color_rgb","_hex","max","round","h","s","l","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","hex","brighter","k","pow","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","color","start","end","rgbSpline","spline","colors","rgbBasis","values","floor","src_number","reA","reB","source","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","degrees","decompose_identity","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","scale","interpolateTransformCss","transform","interpolateTransformSvg","baseVal","consolidate","matrix","SQRT2","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","cubehelixLong","taskHead","taskTail","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","requestAnimationFrame","setTimeout","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","timerFlush","t0","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","tick","duration","ease","schedule_create","schedule","schedule_get","schedule_set","interrupt","tweenValue","transition","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","newId","selection_prototype","children","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","interpolate","value00","value10","interpolate0","value0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","tween0","tween1","easeConstant","custom","polyIn","exponent","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","defaultTiming","p","asin","elasticIn","amplitude","period","elasticOut","elasticInOut","transition_inherit","brush_type","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","x0","y0","x21","y21","x01","y01","l01_2","abs","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cw","da","rect","w","Map","map_map","isArray","has","clear","keys","entries","src_map","Set","proto","set_set","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","cover","xz","yz","visit","extent","find","radius","x3","y3","quads","d2","retainer","removeAll","root","visitAfter","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","width","comma","precision","prefixExponent","defaultLocale_locale","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","_p","X","toUpperCase","d3_format_src_identity","prefixes","locale","grouping","thousands","substring","reverse","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","src_locale","adder","Adder","reset","_add","temp","valueOf","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","exp","ceil","log","math_sin","noop_noop","streamGeometry","geometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","src_stream","cartesian_spherical","cartesian","cartesian_cartesian","spherical","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","delta","direction","cosRadius","sinRadius","step","circleRadius","clip_buffer","line","lines","rejoin","shift","result","pointEqual","Intersection","points","other","entry","segments","compareIntersection","startInside","clip","segment","p0","p1","rejoin_link","current","isSubject","polygonContains_sum","polygonContains","polygon","sinPhi","normal","angle","winding","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","clip_antimeridian","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","uu","polar","q1","code","c0","v00","point2","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","b0","b1","polygonInside","cleanInside","area_x00","area_y00","area_x0","area_y0","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","context","_context","_radius","pointRadius","_line","_point","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","d3_geo_src_path","projection","projectionStream","contextStream","path","transformer","methods","TransformStream","fit","fitBounds","clipExtent","fit_fitExtent","fit_fitSize","fit_fitWidth","fit_fitHeight","height","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","recenter","center","transformRotate","clipAngle","fitExtent","fitSize","fitWidth","fitHeight","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercator","mercatorProjection","reclip","equirectangularRaw","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","count_count","sum","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","count","eachAfter","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","links","dice","TreeNode","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","resquarify","_squarify","src_defaultSource","random","src_normal","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","irwinHall","sourceRandomLogNormal","randomLogNormal","sourceRandomIrwinHall","randomIrwinHall","d3_scale_src_array_array","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","d3_scale_src_array_slice","threshold_threshold","domain","range","invertExtent","interval_t0","interval_t1","newInterval","floori","offseti","field","interval","date","d0","d1","offset","setTime","isFinite","millisecond_millisecond","durationMinute","durationWeek","second_second","getUTCSeconds","minute_minute","getMinutes","hour_hour","getTimezoneOffset","getHours","day_day","setHours","setDate","getDate","src_day","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","setMonth","getMonth","getFullYear","year_year","setFullYear","src_year","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","src_utcDay","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","src_utcYear","localDate","H","S","L","utcDate","UTC","newYear","src_defaultLocale_locale","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","pad","requote","formatRe","formatLookup","parseWeekdayNumberSunday","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","getMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","getSeconds","formatWeekdayNumberMonday","day","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","B","Y","utcFormats","parses","parseSpecifier","charAt","newParse","newDate","week","formatLocale","defaultLocale_defaultLocale","toISOString","src_colors","ramp","scheme","viridis_ramp","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_tau","Linear","areaStart","areaEnd","curve_linear","curveRadial","Radial","curve","_curve","radial","kr","d3_shape_src_noop","basis_point","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","_basis","_beta","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","monotone_sign","slope3","h0","h1","s0","s1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","Diagram_epsilon2","ha","hc","circle","Diagram_circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","edges","polygons","triangles","e1","_found","vx","vy","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","identity","src_transform","kx","ky","output","feature_object","topology","transformPoint","arcs","stitch","stitchedArcs","fragmentByStart","fragmentByEnd","fragments","emptyIndex","flush","dp","ends","fg","gf","mesh","geom","geomsByArc","extract0","extract1","extract2","geoms","extractArcs","buffer","ArrayBuffer","Float64Array","Uint32Array","_slicedToArray","arr","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","done","err","_iterableToArrayLimit","_nonIterableRest"],"mappings":"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","file":"static/js/1.b9e426d0.chunk.js","sourcesContent":["var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function (name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function (row, i) {\n    return f(object(row), i, columns);\n  };\n} // Compute unique columns in order of discovery.\n\n\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n  rows.forEach(function (row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n  return columns;\n}\n\nexport default function (delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert,\n        columns,\n        rows = parseRows(text, function (row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [],\n        // output rows\n    N = text.length,\n        I = 0,\n        // current character index\n    n = 0,\n        // current line number\n    t,\n        // current token\n    eof = N <= 0,\n        // current token followed by EOF?\n    eol = false; // current token followed by EOL?\n    // Strip the trailing newline.\n\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL; // Unescape quotes.\n\n      var i,\n          j = I,\n          c;\n\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE) {\n          ;\n        }\n\n        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      } // Find next delimiter or newline.\n\n\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        } else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      } // Return last token before EOF.\n\n\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n\n      while (t !== EOL && t !== EOF) {\n        row.push(t), t = token();\n      }\n\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n      return columns.map(function (column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\" : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\" : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}","import dsv from \"./dsv\";\nvar csv = dsv(\",\");\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;","import dsv from \"./dsv\";\nvar tsv = dsv(\"\\t\");\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;","export { default as dsvFormat } from \"./dsv\";\nexport { csvParse, csvParseRows, csvFormat, csvFormatRows } from \"./csv\";\nexport { tsvParse, tsvParseRows, tsvFormat, tsvFormatRows } from \"./tsv\";","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function (input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function (input, init) {\n  return fetch(input, init).then(responseText);\n}","import { csvParse, dsvFormat, tsvParse } from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function (input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function (response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function (response) {\n    return format.parse(response, row);\n  });\n}\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function (input, init) {\n  return fetch(input, init).then(responseJson);\n}","import text from \"./text\";\n\nfunction parser(type) {\n  return function (input, init) {\n    return text(input, init).then(function (text) {\n      return new DOMParser().parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\nexport var html = parser(\"text/html\");\nexport var svg = parser(\"image/svg+xml\");","export { default as blob } from \"./blob\";\nexport { default as buffer } from \"./buffer\";\nexport { default as dsv, csv, tsv } from \"./dsv\";\nexport { default as image } from \"./image\";\nexport { default as json } from \"./json\";\nexport { default as text } from \"./text\";\nexport { default as xml, html, svg } from \"./xml\";","export var name = \"d3\";\nexport var version = \"5.7.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\", \"visualization\", \"svg\", \"animation\", \"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\n  \"name\": \"Mike Bostock\",\n  \"url\": \"https://bost.ocks.org/mike\"\n};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\n  \"type\": \"git\",\n  \"url\": \"https://github.com/d3/d3.git\"\n};\nexport var scripts = {\n  \"pretest\": \"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\n  \"test\": \"tape 'test/**/*-test.js'\",\n  \"prepublishOnly\": \"yarn test && rollup -c\",\n  \"postpublish\": \"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"\n};\nexport var devDependencies = {\n  \"json2module\": \"0.0\",\n  \"rimraf\": \"2\",\n  \"rollup\": \"0.64\",\n  \"rollup-plugin-ascii\": \"0.0\",\n  \"rollup-plugin-node-resolve\": \"3\",\n  \"rollup-plugin-terser\": \"1\",\n  \"tape\": \"4\"\n};\nexport var dependencies = {\n  \"d3-array\": \"1\",\n  \"d3-axis\": \"1\",\n  \"d3-brush\": \"1\",\n  \"d3-chord\": \"1\",\n  \"d3-collection\": \"1\",\n  \"d3-color\": \"1\",\n  \"d3-contour\": \"1\",\n  \"d3-dispatch\": \"1\",\n  \"d3-drag\": \"1\",\n  \"d3-dsv\": \"1\",\n  \"d3-ease\": \"1\",\n  \"d3-fetch\": \"1\",\n  \"d3-force\": \"1\",\n  \"d3-format\": \"1\",\n  \"d3-geo\": \"1\",\n  \"d3-hierarchy\": \"1\",\n  \"d3-interpolate\": \"1\",\n  \"d3-path\": \"1\",\n  \"d3-polygon\": \"1\",\n  \"d3-quadtree\": \"1\",\n  \"d3-random\": \"1\",\n  \"d3-scale\": \"2\",\n  \"d3-scale-chromatic\": \"1\",\n  \"d3-selection\": \"1\",\n  \"d3-shape\": \"1\",\n  \"d3-time\": \"1\",\n  \"d3-time-format\": \"2\",\n  \"d3-timer\": \"1\",\n  \"d3-transition\": \"1\",\n  \"d3-voronoi\": \"1\",\n  \"d3-zoom\": \"1\"\n};","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","export var slice = Array.prototype.slice;","var noop = {\n  value: function value() {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function on(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) {\n        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      }\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n        _[t] = set(_[t], typename.name, null);\n      }\n    }\n\n    return this;\n  },\n  copy: function copy() {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) {\n      copy[t] = _[t].slice();\n    }\n\n    return new Dispatch(copy);\n  },\n  call: function call(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n      args[i] = arguments[i + 2];\n    }\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  },\n  apply: function apply(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\nexport default dispatch;","export var xhtml = \"http://www.w3.org/1999/xhtml\";\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};","import namespaces from \"./namespaces\";\nexport default function (name) {\n  var prefix = name += \"\",\n      i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {\n    space: namespaces[prefix],\n    local: name\n  } : name;\n}","import namespace from \"./namespace\";\nimport { xhtml } from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function () {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml ? document.createElement(name) : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function () {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function (name) {\n  var fullname = namespace(name);\n  return (fullname.local ? creatorFixed : creatorInherit)(fullname);\n}","function none() {}\n\nexport default function (selector) {\n  return selector == null ? none : function () {\n    return this.querySelector(selector);\n  };\n}","function empty() {\n  return [];\n}\n\nexport default function (selector) {\n  return selector == null ? empty : function () {\n    return this.querySelectorAll(selector);\n  };\n}","var matcher = function matcher(selector) {\n  return function () {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector;\n\n    matcher = function matcher(selector) {\n      return function () {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;","export default function (update) {\n  return new Array(update.length);\n}","import sparse from \"./sparse\";\nimport { Selection } from \"./index\";\nexport default function () {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function appendChild(child) {\n    return this._parent.insertBefore(child, this._next);\n  },\n  insertBefore: function insertBefore(child, next) {\n    return this._parent.insertBefore(child, next);\n  },\n  querySelector: function querySelector(selector) {\n    return this._parent.querySelector(selector);\n  },\n  querySelectorAll: function querySelectorAll(selector) {\n    return this._parent.querySelectorAll(selector);\n  }\n};","export default function (x) {\n  return function () {\n    return x;\n  };\n}","import { Selection } from \"./index\";\nimport { EnterNode } from \"./enter\";\nimport constant from \"../constant\";\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length; // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  } // Put any non-null nodes that don’t fit into exit.\n\n\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue; // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  } // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n\n\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  } // Add any remaining nodes that were not bound to data to exit.\n\n\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function (value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function (d) {\n      data[++j] = d;\n    });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength) {\n          ;\n        }\n\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}","import { Selection } from \"./index\";\nexport default function (compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function () {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function () {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function (name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === \"function\" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));\n}","export default function (node) {\n  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node\n  node.document && node // node is a Window\n  || node.defaultView; // node is a Document\n}","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function () {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function (name, value, priority) {\n  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === \"function\" ? styleFunction : styleConstant)(name, value, priority == null ? \"\" : priority)) : styleValue(this.node(), name);\n}\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name) || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function add(name) {\n    var i = this._names.indexOf(name);\n\n    if (i < 0) {\n      this._names.push(name);\n\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function remove(name) {\n    var i = this._names.indexOf(name);\n\n    if (i >= 0) {\n      this._names.splice(i, 1);\n\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function contains(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    list.add(names[i]);\n  }\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    list.remove(names[i]);\n  }\n}\n\nfunction classedTrue(names) {\n  return function () {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function () {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function () {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function (name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      if (!list.contains(names[i])) return false;\n    }\n\n    return true;\n  }\n\n  return this.each((typeof value === \"function\" ? classedFunction : value ? classedTrue : classedFalse)(names, value));\n}","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function (value) {\n  return arguments.length ? this.each(value == null ? textRemove : (typeof value === \"function\" ? textFunction : textConstant)(value)) : this.node().textContent;\n}","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function () {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function (value) {\n  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === \"function\" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;\n}","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function () {\n  return this.each(raise);\n}","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function () {\n  return this.each(lower);\n}","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function (name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function () {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function () {\n  return this.each(remove);\n}","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function (deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}","var filterEvents = {};\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {\n      mouseenter: \"mouseover\",\n      mouseleave: \"mouseout\"\n    };\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function (event) {\n    var related = event.relatedTarget;\n\n    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function (event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n\n    event = event1;\n\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nfunction onRemove(typename) {\n  return function () {\n    var on = this.__on;\n    if (!on) return;\n\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n\n    if (++i) on.length = i;else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function (d, i, group) {\n    var on = this.__on,\n        o,\n        listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {\n      type: typename.type,\n      name: typename.name,\n      value: value,\n      listener: listener,\n      capture: capture\n    };\n    if (!on) this.__on = [o];else on.push(o);\n  };\n}\n\nexport default function (typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"),\n      i,\n      n = typenames.length,\n      t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n\n  for (i = 0; i < n; ++i) {\n    this.each(on(typenames[i], value, capture));\n  }\n\n  return this;\n}\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function (type, params) {\n  return this.each((typeof params === \"function\" ? dispatchFunction : dispatchConstant)(type, params));\n}","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\nexport var root = [null];\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\nexport default selection;","import { Selection } from \"./index\";\nimport selector from \"../selector\";\nexport default function (select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}","import { Selection } from \"./index\";\nimport selectorAll from \"../selectorAll\";\nexport default function (select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}","import { Selection } from \"./index\";\nimport matcher from \"../matcher\";\nexport default function (match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}","import sparse from \"./sparse\";\nimport { Selection } from \"./index\";\nexport default function () {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}","import { Selection } from \"./index\";\nexport default function (selection) {\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}","export default function () {\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}","export default function () {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}","export default function () {\n  var nodes = new Array(this.size()),\n      i = -1;\n  this.each(function () {\n    nodes[++i] = this;\n  });\n  return nodes;\n}","export default function () {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}","export default function () {\n  var size = 0;\n  this.each(function () {\n    ++size;\n  });\n  return size;\n}","export default function () {\n  return !this.node();\n}","export default function (callback) {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}","function propertyRemove(name) {\n  return function () {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function () {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];else this[name] = v;\n  };\n}\n\nexport default function (name, value) {\n  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === \"function\" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];\n}","import creator from \"../creator\";\nexport default function (name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function () {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}","export default function (value) {\n  return arguments.length ? this.property(\"__data__\", value) : this.node().__data__;\n}","var nextId = 0;\nexport default function local() {\n  return new Local();\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function get(node) {\n    var id = this._;\n\n    while (!(id in node)) {\n      if (!(node = node.parentNode)) return;\n    }\n\n    return node[id];\n  },\n  set: function set(node, value) {\n    return node[this._] = value;\n  },\n  remove: function remove(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function toString() {\n    return this._;\n  }\n};","import { event } from \"./selection/on\";\nexport default function () {\n  var current = event,\n      source;\n\n  while (source = current.sourceEvent) {\n    current = source;\n  }\n\n  return current;\n}","import { Selection, root } from \"./selection/index\";\nexport default function (selector) {\n  return typeof selector === \"string\" ? new Selection([document.querySelectorAll(selector)], [document.documentElement]) : new Selection([selector == null ? [] : selector], root);\n}","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function () {\n  var value = this._.on.apply(this._, arguments);\n\n  return value === this._ ? this : value;\n};","import { dispatch } from \"d3-dispatch\";\nimport { event, customEvent, select, mouse, touch } from \"d3-selection\";\nimport nodrag, { yesdrag } from \"./nodrag\";\nimport noevent, { nopropagation } from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\"; // Ignore right-click, since that should open the context menu.\n\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {\n    x: event.x,\n    y: event.y\n  } : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function () {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection.on(\"mousedown.drag\", mousedowned).filter(touchable).on(\"touchstart.drag\", touchstarted).on(\"touchmove.drag\", touchmoved).on(\"touchend.drag touchcancel.drag\", touchended).style(\"touch-action\", \"none\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx,\n          dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length,\n        i,\n        gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length,\n        i,\n        gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length,\n        i,\n        gesture;\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function () {\n      touchending = null;\n    }, 500); // Ghost clicks are delayed!\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id),\n        s,\n        dx,\n        dy,\n        sublisteners = listeners.copy();\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function () {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n    return function gesture(type) {\n      var p0 = p,\n          n;\n\n      switch (type) {\n        case \"start\":\n          gestures[id] = gesture, n = active++;\n          break;\n\n        case \"end\":\n          delete gestures[id], --active;\n        // nobreak\n\n        case \"drag\":\n          p = point(container, id), n = active;\n          break;\n      }\n\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function (_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function (_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function (_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function (_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}","export default function (constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n\n  for (var key in definition) {\n    prototype[key] = definition[key];\n  }\n\n  return prototype;\n}","import define, { extend } from \"./define\";\nexport function Color() {}\nvar _darker = 0.7;\nexport { _darker as darker };\n\nvar _brighter = 1 / _darker;\n\nexport { _brighter as brighter };\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\ndefine(Color, color, {\n  displayable: function displayable() {\n    return this.rgb().displayable();\n  },\n  hex: function hex() {\n    return this.rgb().hex();\n  },\n  toString: function toString() {\n    return this.rgb() + \"\";\n  }\n});\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb(m >> 8 & 0xf | m >> 4 & 0x0f0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n  ) : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n  : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n  : named.hasOwnProperty(format) ? rgbn(named[format]) : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0) : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb();\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function rgb() {\n    return this;\n  },\n  displayable: function displayable() {\n    return 0 <= this.r && this.r <= 255 && 0 <= this.g && this.g <= 255 && 0 <= this.b && this.b <= 255 && 0 <= this.opacity && this.opacity <= 1;\n  },\n  hex: function hex() {\n    return \"#\" + _hex(this.r) + _hex(this.g) + _hex(this.b);\n  },\n  toString: function toString() {\n    var a = this.opacity;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction _hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl();\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n\n  return new Hsl(h, s, l, o.opacity);\n}\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n  },\n  displayable: function displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n  }\n}));\n/* From FvD 13.37, CSS Color Module Level 3 */\n\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n}","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;","import define, { extend } from \"./define\";\nimport { Color, rgbConvert, Rgb } from \"./color\";\nimport { deg2rad, rad2deg } from \"./math\"; // https://beta.observablehq.com/@mbostock/lab-and-rgb\n\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),\n      x,\n      z;\n  if (r === g && g === b) x = z = y;else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\ndefine(Lab, lab, extend(Color, {\n  brighter: function brighter(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function darker(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function rgb() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function brighter(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function darker(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function rgb() {\n    return labConvert(this).rgb();\n  }\n}));","import define, { extend } from \"./define\";\nimport { Color, rgbConvert, Rgb, darker as _darker, brighter as _brighter } from \"./color\";\nimport { deg2rad, rad2deg } from \"./math\";\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),\n      // NaN if l=0 or l=1\n  h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);\n  }\n}));","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1,\n      t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;\n}\nexport default function (values) {\n  var n = values.length - 1;\n  return function (t) {\n    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function (t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function (a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}","import { rgb as colorRgb } from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, { gamma } from \"./color\";\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function (t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function (colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i,\n        color;\n\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function (t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);","export default function (a, b) {\n  return a = +a, b -= a, function (t) {\n    return a + b * t;\n  };\n}","import { basis } from \"./basis\";\nexport default function (values) {\n  var n = values.length;\n  return function (t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}","import number from \"./number\";\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function () {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function (t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function (a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0,\n      // scan index for next number in b\n  am,\n      // current match in a\n  bm,\n      // current match in b\n  bs,\n      // string preceding current number in b, if any\n  i = -1,\n      // index in s\n  s = [],\n      // string constants and placeholders\n  q = []; // number interpolators\n  // Coerce inputs to strings.\n\n  a = a + \"\", b = b + \"\"; // Interpolate pairs of numbers in a & b.\n\n  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) {\n      // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    if ((am = am[0]) === (bm = bm[0])) {\n      // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else {\n      // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({\n        i: i,\n        x: number(am, bm)\n      });\n    }\n\n    bi = reB.lastIndex;\n  } // Add remains of b.\n\n\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  } // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n\n\n  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {\n    for (var i = 0, o; i < b; ++i) {\n      s[(o = q[i]).i] = o.x(t);\n    }\n\n    return s.join(\"\");\n  });\n}","import decompose, { identity } from \"./decompose\";\nvar cssNode, cssRoot, cssView, svgNode;\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}","var degrees = 180 / Math.PI;\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\nexport default function (a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}","import number from \"../number\";\nimport { parseCss, parseSvg } from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({\n        i: i - 4,\n        x: number(xa, xb)\n      }, {\n        i: i - 2,\n        x: number(ya, yb)\n      });\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path\n\n      q.push({\n        i: s.push(pop(s) + \"rotate(\", null, degParen) - 2,\n        x: number(a, b)\n      });\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({\n        i: s.push(pop(s) + \"skewX(\", null, degParen) - 2,\n        x: number(a, b)\n      });\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: number(xa, xb)\n      }, {\n        i: i - 2,\n        x: number(ya, yb)\n      });\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function (a, b) {\n    var s = [],\n        // string constants and placeholders\n    q = []; // number interpolators\n\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n} // p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\n\n\nexport default function (p0, p1) {\n  var ux0 = p0[0],\n      uy0 = p0[1],\n      w0 = p0[2],\n      ux1 = p1[0],\n      uy1 = p1[1],\n      w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S; // Special case for u0 ≅ u1.\n\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n\n    i = function i(t) {\n      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];\n    };\n  } // General case.\n  else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n\n      i = function i(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];\n      };\n    }\n\n  i.duration = S * 1000;\n  return i;\n}","import { hsl as colorHsl } from \"d3-color\";\nimport color, { hue } from \"./color\";\n\nfunction hsl(hue) {\n  return function (start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function (t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  };\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);","import { hcl as colorHcl } from \"d3-color\";\nimport color, { hue } from \"./color\";\n\nfunction hcl(hue) {\n  return function (start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function (t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  };\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);","import { cubehelix as colorCubehelix } from \"d3-color\";\nimport color, { hue } from \"./color\";\n\nfunction cubehelix(hue) {\n  return function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function (t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n    return cubehelix;\n  }(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);","export default function (interpolator, n) {\n  var samples = new Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    samples[i] = interpolator(i / (n - 1));\n  }\n\n  return samples;\n}","var frame = 0,\n    // is an animation frame pending?\ntimeout = 0,\n    // is a timeout pending?\ninterval = 0,\n    // are any timers active?\npokeDelay = 1000,\n    // how frequently we check for clock skew\ntaskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n  setTimeout(f, 17);\n};\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call = this._time = this._next = null;\n}\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function restart(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;else taskHead = this;\n      taskTail = this;\n    }\n\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function stop() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\nexport function timer(callback, delay, time) {\n  var t = new Timer();\n  t.restart(callback, delay, time);\n  return t;\n}\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n  var t = taskHead,\n      e;\n\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(),\n      delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0,\n      t1 = taskHead,\n      t2,\n      time = Infinity;\n\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}","import { Timer } from \"./timer\";\nexport default function (callback, delay, time) {\n  var t = new Timer();\n  delay = delay == null ? 0 : +delay;\n  t.restart(function (elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}","import { dispatch } from \"d3-dispatch\";\nimport { timer, timeout } from \"d3-timer\";\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\nexport default function (node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index,\n    // For context during callback.\n    group: group,\n    // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween; // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.\n\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.\n\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n\n      if (o.state === STARTED) return timeout(start); // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      } // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n          o.state = ENDED;\n          o.timer.stop();\n          delete schedules[i];\n        }\n    } // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n\n\n    timeout(function () {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    }); // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n\n    self.state = STARTED; // Initialize the tween, deleting null tween.\n\n    tween = new Array(n = self.tween.length);\n\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    } // Dispatch the end event.\n\n\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n\n    for (var i in schedules) {\n      return;\n    } // eslint-disable-line no-unused-vars\n\n\n    delete node.__transition;\n  }\n}","import { STARTING, ENDING, ENDED } from \"./transition/schedule\";\nexport default function (node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n  if (!schedules) return;\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) {\n      empty = false;\n      continue;\n    }\n\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}","import { get, set } from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function () {\n    var schedule = set(this, id),\n        tween = schedule.tween; // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error();\n  return function () {\n    var schedule = set(this, id),\n        tween = schedule.tween; // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n\n      for (var t = {\n        name: name,\n        value: value\n      }, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function (name, value) {\n  var id = this._id;\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n  transition.each(function () {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n  return function (node) {\n    return get(node, id).value[name];\n  };\n}","import { color } from \"d3-color\";\nimport { interpolateNumber, interpolateRgb, interpolateString } from \"d3-interpolate\";\nexport default function (a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber : b instanceof color ? interpolateRgb : (c = color(b)) ? (b = c, interpolateRgb) : interpolateString)(a, b);\n}","function removeFunction(id) {\n  return function () {\n    var parent = this.parentNode;\n\n    for (var i in this.__transition) {\n      if (+i !== id) return;\n    }\n\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function () {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}","import { selection } from \"d3-selection\";\nvar Selection = selection.prototype.constructor;\nexport default function () {\n  return new Selection(this._groups, this._parents);\n}","import { tweenValue } from \"./tween\";\n\nfunction textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function () {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function (value) {\n  return this.tween(\"text\", typeof value === \"function\" ? textFunction(tweenValue(this, \"text\", value)) : textConstant(value == null ? \"\" : value + \"\"));\n}","import { selection } from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nvar id = 0;\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\nexport default function transition(name) {\n  return selection().transition(name);\n}\nexport function newId() {\n  return ++id;\n}\nvar selection_prototype = selection.prototype;\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};","import { selector } from \"d3-selection\";\nimport { Transition } from \"./index\";\nimport schedule, { get } from \"./schedule\";\nexport default function (select) {\n  var name = this._name,\n      id = this._id;\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}","import { selectorAll } from \"d3-selection\";\nimport { Transition } from \"./index\";\nimport schedule, { get } from \"./schedule\";\nexport default function (select) {\n  var name = this._name,\n      id = this._id;\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}","import { matcher } from \"d3-selection\";\nimport { Transition } from \"./index\";\nexport default function (match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}","import { Transition } from \"./index\";\nexport default function (transition) {\n  if (transition._id !== this._id) throw new Error();\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}","import { Transition, newId } from \"./index\";\nimport schedule, { get } from \"./schedule\";\nexport default function () {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}","import { get, set, init } from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function (t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0,\n      on1,\n      sit = start(name) ? init : set;\n  return function () {\n    var schedule = sit(this, id),\n        on = schedule.on; // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n    schedule.on = on1;\n  };\n}\n\nexport default function (name, listener) {\n  var id = this._id;\n  return arguments.length < 2 ? get(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));\n}","import { interpolateTransformSvg as interpolateTransform } from \"d3-interpolate\";\nimport { namespace } from \"d3-selection\";\nimport { tweenValue } from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00, interpolate0;\n  return function () {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00, interpolate0;\n  return function () {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0,\n        value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0,\n        value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function (name, value) {\n  var fullname = namespace(name),\n      i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}","import { namespace } from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this,\n        i = value.apply(node, arguments);\n    return i && function (t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this,\n        i = value.apply(node, arguments);\n    return i && function (t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n\n  tween._value = value;\n  return tween;\n}\n\nexport default function (name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error();\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}","import { interpolateTransformCss as interpolateTransform } from \"d3-interpolate\";\nimport { style } from \"d3-selection\";\nimport { tweenValue } from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00, interpolate0;\n  return function () {\n    var value0 = style(this, name);\n    return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function (name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this.styleTween(name, styleRemove(name, i)).on(\"end.style.\" + name, styleRemoveEnd(name)) : this.styleTween(name, typeof value === \"function\" ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value)) : styleConstant(name, i, value + \"\"), priority);\n}","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this,\n        i = value.apply(node, arguments);\n    return i && function (t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n\n  tween._value = value;\n  return tween;\n}\n\nexport default function (name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error();\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}","import { get, init } from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function () {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function () {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function (value) {\n  var id = this._id;\n  return arguments.length ? this.each((typeof value === \"function\" ? delayFunction : delayConstant)(id, value)) : get(this.node(), id).delay;\n}","import { get, set } from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function () {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function () {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function (value) {\n  var id = this._id;\n  return arguments.length ? this.each((typeof value === \"function\" ? durationFunction : durationConstant)(id, value)) : get(this.node(), id).duration;\n}","import { get, set } from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error();\n  return function () {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function (value) {\n  var id = this._id;\n  return arguments.length ? this.each(easeConstant(id, value)) : get(this.node(), id).ease;\n}","var exponent = 3;\nexport var polyIn = function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n  return polyIn;\n}(exponent);\nexport var polyOut = function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n  return polyOut;\n}(exponent);\nexport var polyInOut = function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n  return polyInOut;\n}(exponent);","var pi = Math.PI,\n    halfPi = pi / 2;\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}","var overshoot = 1.70158;\nexport var backIn = function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n  return backIn;\n}(overshoot);\nexport var backOut = function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n  return backOut;\n}(overshoot);\nexport var backInOut = function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n  return backInOut;\n}(overshoot);","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\nexport var elasticIn = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function (a) {\n    return custom(a, p * tau);\n  };\n\n  elasticIn.period = function (p) {\n    return custom(a, p);\n  };\n\n  return elasticIn;\n}(amplitude, period);\nexport var elasticOut = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function (a) {\n    return custom(a, p * tau);\n  };\n\n  elasticOut.period = function (p) {\n    return custom(a, p);\n  };\n\n  return elasticOut;\n}(amplitude, period);\nexport var elasticInOut = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function (a) {\n    return custom(a, p * tau);\n  };\n\n  elasticInOut.period = function (p) {\n    return custom(a, p);\n  };\n\n  return elasticInOut;\n}(amplitude, period);","import { Transition, newId } from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport { easeCubicInOut } from \"d3-ease\";\nimport { now } from \"d3-timer\";\nvar defaultTiming = {\n  time: null,\n  // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n\n  return timing;\n}\n\nexport default function (name) {\n  var id, timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}","export function cubicIn(t) {\n  return t * t * t;\n}\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}","import { selection } from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;","import interrupt from \"../interrupt\";\nexport default function (name) {\n  return this.each(function () {\n    interrupt(this, name);\n  });\n}","import { dispatch } from \"d3-dispatch\";\nimport { dragDisable, dragEnable } from \"d3-drag\";\nimport { interpolate } from \"d3-interpolate\";\nimport { customEvent, event, mouse, select } from \"d3-selection\";\nimport { interrupt } from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, { nopropagation } from \"./noevent\";\nvar MODE_DRAG = {\n  name: \"drag\"\n},\n    MODE_SPACE = {\n  name: \"space\"\n},\n    MODE_HANDLE = {\n  name: \"handle\"\n},\n    MODE_CENTER = {\n  name: \"center\"\n};\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function input(x, e) {\n    return x && [[x[0], e[0][1]], [x[1], e[1][1]]];\n  },\n  output: function output(xy) {\n    return xy && [xy[0][0], xy[1][0]];\n  }\n};\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function input(y, e) {\n    return y && [[e[0][0], y[0]], [e[1][0], y[1]]];\n  },\n  output: function output(xy) {\n    return xy && [xy[0][1], xy[1][1]];\n  }\n};\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function input(xy) {\n    return xy;\n  },\n  output: function output(xy) {\n    return xy;\n  }\n};\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {\n    type: t\n  };\n} // Ignore right-click, since that should open the context menu.\n\n\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n} // Like d3.local, but with the name “__brush” rather than auto-generated.\n\n\nfunction local(node) {\n  while (!node.__brush) {\n    if (!(node = node.parentNode)) return;\n  }\n\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\nexport function brushX() {\n  return brush(X);\n}\nexport function brushY() {\n  return brush(Y);\n}\nexport default function () {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group.property(\"__brush\", initialize).selectAll(\".overlay\").data([type(\"overlay\")]);\n    overlay.enter().append(\"rect\").attr(\"class\", \"overlay\").attr(\"pointer-events\", \"all\").attr(\"cursor\", cursors.overlay).merge(overlay).each(function () {\n      var extent = local(this).extent;\n      select(this).attr(\"x\", extent[0][0]).attr(\"y\", extent[0][1]).attr(\"width\", extent[1][0] - extent[0][0]).attr(\"height\", extent[1][1] - extent[0][1]);\n    });\n    group.selectAll(\".selection\").data([type(\"selection\")]).enter().append(\"rect\").attr(\"class\", \"selection\").attr(\"cursor\", cursors.selection).attr(\"fill\", \"#777\").attr(\"fill-opacity\", 0.3).attr(\"stroke\", \"#fff\").attr(\"shape-rendering\", \"crispEdges\");\n    var handle = group.selectAll(\".handle\").data(dim.handles, function (d) {\n      return d.type;\n    });\n    handle.exit().remove();\n    handle.enter().append(\"rect\").attr(\"class\", function (d) {\n      return \"handle handle--\" + d.type;\n    }).attr(\"cursor\", function (d) {\n      return cursors[d.type];\n    });\n    group.each(redraw).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function (group, selection) {\n    if (group.selection) {\n      group.on(\"start.brush\", function () {\n        emitter(this, arguments).beforestart().start();\n      }).on(\"interrupt.brush end.brush\", function () {\n        emitter(this, arguments).end();\n      }).tween(\"brush\", function () {\n        var that = this,\n            state = that.__brush,\n            emit = emitter(that, arguments),\n            selection0 = state.selection,\n            selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n            i = interpolate(selection0, selection1);\n\n        function tween(t) {\n          state.selection = t === 1 && empty(selection1) ? null : i(t);\n          redraw.call(that);\n          emit.brush();\n        }\n\n        return selection0 && selection1 ? tween : tween(1);\n      });\n    } else {\n      group.each(function () {\n        var that = this,\n            args = arguments,\n            state = that.__brush,\n            selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n            emit = emitter(that, args).beforestart();\n        interrupt(that);\n        state.selection = selection1 == null || empty(selection1) ? null : selection1;\n        redraw.call(that);\n        emit.start().brush().end();\n      });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\").style(\"display\", null).attr(\"x\", selection[0][0]).attr(\"y\", selection[0][1]).attr(\"width\", selection[1][0] - selection[0][0]).attr(\"height\", selection[1][1] - selection[0][1]);\n      group.selectAll(\".handle\").style(\"display\", null).attr(\"x\", function (d) {\n        return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;\n      }).attr(\"y\", function (d) {\n        return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;\n      }).attr(\"width\", function (d) {\n        return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize;\n      }).attr(\"height\", function (d) {\n        return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize;\n      });\n    } else {\n      group.selectAll(\".selection,.handle\").style(\"display\", \"none\").attr(\"x\", null).attr(\"y\", null).attr(\"width\", null).attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function beforestart() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function start() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function brush() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function end() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function emit(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) {\n      if (event.changedTouches.length < event.touches.length) return noevent();\n    } else if (touchending) return;\n\n    if (!filter.apply(this, arguments)) return;\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : event.altKey ? MODE_CENTER : MODE_HANDLE,\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0],\n        w0,\n        w1,\n        N = extent[0][1],\n        n0,\n        n1,\n        E = extent[1][0],\n        e0,\n        e1,\n        S = extent[1][1],\n        s0,\n        s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n    var group = select(that).attr(\"pointer-events\", \"none\");\n    var overlay = group.selectAll(\".overlay\").attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group.on(\"touchmove.brush\", moved, true).on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view).on(\"keydown.brush\", keydowned, true).on(\"keyup.brush\", keyupped, true).on(\"mousemove.brush\", moved, true).on(\"mouseup.brush\", ended, true);\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;else lockX = true;\n      }\n\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG:\n          {\n            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n            break;\n          }\n\n        case MODE_HANDLE:\n          {\n            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n            break;\n          }\n\n        case MODE_CENTER:\n          {\n            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n            break;\n          }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function () {\n          touchending = null;\n        }, 500); // Ghost clicks are delayed!\n\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            shifting = signX && signY;\n            break;\n          }\n\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_HANDLE) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n              move();\n            }\n\n            break;\n          }\n\n        case 32:\n          {\n            // SPACE; takes priority over ALT\n            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;\n              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;\n              mode = MODE_SPACE;\n              overlay.attr(\"cursor\", cursors.selection);\n              move();\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            if (shifting) {\n              lockX = lockY = shifting = false;\n              move();\n            }\n\n            break;\n          }\n\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n              move();\n            }\n\n            break;\n          }\n\n        case 32:\n          {\n            // SPACE\n            if (mode === MODE_SPACE) {\n              if (event.altKey) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n              } else {\n                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n              }\n\n              overlay.attr(\"cursor\", cursors[type]);\n              move();\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {\n      selection: null\n    };\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function (_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function (_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;","export var slice = Array.prototype.slice;","import { range } from \"d3-array\";\nimport { max, tau } from \"./math\";\n\nfunction compareValue(compare) {\n  return function (a, b) {\n    return compare(a.source.value + a.target.value, b.source.value + b.target.value);\n  };\n}\n\nexport default function () {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j; // Compute the sum.\n\n    k = 0, i = -1;\n\n    while (++i < n) {\n      x = 0, j = -1;\n\n      while (++j < n) {\n        x += matrix[i][j];\n      }\n\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    } // Sort groups…\n\n\n    if (sortGroups) groupIndex.sort(function (a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    }); // Sort subgroups…\n\n    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {\n      d.sort(function (a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    }); // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n; // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n\n    x = 0, i = -1;\n\n    while (++i < n) {\n      x0 = x, j = -1;\n\n      while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    } // Generate chords for each (non-empty) subgroup-subgroup link.\n\n\n    i = -1;\n\n    while (++i < n) {\n      j = i - 1;\n\n      while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n\n        if (source.value || target.value) {\n          chords.push(source.value < target.value ? {\n            source: target,\n            target: source\n          } : {\n            source: source,\n            target: target\n          });\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function (_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function (_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function (_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function (_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n      // Equivalently, is (x1,y1) coincident with (x2,y2)?\n      // Or, is the radius zero? Line to (x1,y1).\n      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n          this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n        } // Otherwise, draw an arc!\n        else {\n            var x20 = x2 - x0,\n                y20 = y2 - y0,\n                l21_2 = x21 * x21 + y21 * y21,\n                l20_2 = x20 * x20 + y20 * y20,\n                l21 = Math.sqrt(l21_2),\n                l01 = Math.sqrt(l01_2),\n                l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n                t01 = l / l01,\n                t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n            if (Math.abs(t01 - 1) > epsilon) {\n              this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n            }\n\n            this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n          }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n        this._ += \"L\" + x0 + \",\" + y0;\n      } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n        this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n      }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function has(key) {\n    return prefix + key in this;\n  },\n  get: function get(key) {\n    return this[prefix + key];\n  },\n  set: function set(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function remove(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function clear() {\n    for (var property in this) {\n      if (property[0] === prefix) delete this[property];\n    }\n  },\n  keys: function keys() {\n    var keys = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) keys.push(property.slice(1));\n    }\n\n    return keys;\n  },\n  values: function values() {\n    var values = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) values.push(this[property]);\n    }\n\n    return values;\n  },\n  entries: function entries() {\n    var entries = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) entries.push({\n        key: property.slice(1),\n        value: this[property]\n      });\n    }\n\n    return entries;\n  },\n  size: function size() {\n    var size = 0;\n\n    for (var property in this) {\n      if (property[0] === prefix) ++size;\n    }\n\n    return size;\n  },\n  empty: function empty() {\n    for (var property in this) {\n      if (property[0] === prefix) return false;\n    }\n\n    return true;\n  },\n  each: function each(f) {\n    for (var property in this) {\n      if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map(); // Copy constructor.\n\n  if (object instanceof Map) object.each(function (value, key) {\n    map.set(key, value);\n  }); // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (f == null) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f(o = object[i], i, object), o);\n      }\n    } // Convert object to map.\n    else if (object) for (var key in object) {\n        map.set(key, object[key]);\n      }\n  return map;\n}\n\nexport default map;","import { default as map, prefix } from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function add(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set(); // Copy constructor.\n\n  if (object instanceof Set) object.each(function (value) {\n    set.add(value);\n  }); // Otherwise, assume it’s an array.\n  else if (object) {\n      var i = -1,\n          n = object.length;\n      if (f == null) while (++i < n) {\n        set.add(object[i]);\n      } else while (++i < n) {\n        set.add(f(object[i], i, object));\n      }\n    }\n  return set;\n}\n\nexport default set;","var array = Array.prototype;\nexport var slice = array.slice;","export default function (d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {\n    data: d\n  },\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.\n\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  } // Is the new point is exactly coincident with the existing point?\n\n\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.\n\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d,\n      i,\n      n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity; // Compute the points and their extent.\n\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  } // If there were no (valid) points, inherit the existing extent.\n\n\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1; // Expand the tree to cover the new points.\n\n  this.cover(x0, y0).cover(x1, y1); // Add the new points.\n\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}","export default function (x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1; // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  } // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n      var z = x1 - x0,\n          node = this._root,\n          parent,\n          i;\n\n      switch (i = (y < (y0 + y1) / 2) << 1 | x < (x0 + x1) / 2) {\n        case 0:\n          {\n            do {\n              parent = new Array(4), parent[i] = node, node = parent;\n            } while ((z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1));\n\n            break;\n          }\n\n        case 1:\n          {\n            do {\n              parent = new Array(4), parent[i] = node, node = parent;\n            } while ((z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1));\n\n            break;\n          }\n\n        case 2:\n          {\n            do {\n              parent = new Array(4), parent[i] = node, node = parent;\n            } while ((z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y));\n\n            break;\n          }\n\n        case 3:\n          {\n            do {\n              parent = new Array(4), parent[i] = node, node = parent;\n            } while ((z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y));\n\n            break;\n          }\n      }\n\n      if (this._root && this._root.length) this._root = node;\n    } // If the quadtree covers the point already, just return.\n    else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}","export default function (node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}","export function defaultX(d) {\n  return d[0];\n}\nexport default function (_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}","export function defaultY(d) {\n  return d[1];\n}\nexport default function (_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}","import tree_add, { addAll as tree_addAll } from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, { removeAll as tree_removeAll } from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, { defaultX } from \"./x\";\nimport tree_y, { defaultY } from \"./y\";\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {\n    data: leaf.data\n  },\n      next = copy;\n\n  while (leaf = leaf.next) {\n    next = next.next = {\n      data: leaf.data\n    };\n  }\n\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function () {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n  if (!node) return copy;\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n  nodes = [{\n    source: node,\n    target: copy._root = new Array(4)\n  }];\n\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({\n          source: child,\n          target: node.target[i] = new Array(4)\n        });else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;","export default function () {\n  var data = [];\n  this.visit(function (node) {\n    if (!node.length) do {\n      data.push(node.data);\n    } while (node = node.next);\n  });\n  return data;\n}","export default function (_) {\n  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}","import Quad from \"./quad\";\nexport default function (x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.\n\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n      quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.\n\n      if (i = (y >= ym) << 1 | x >= xm) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    } // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n        var dx = x - +this._x.call(null, node.data),\n            dy = y - +this._y.call(null, node.data),\n            d2 = dx * dx + dy * dy;\n\n        if (d2 < radius) {\n          var d = Math.sqrt(radius = d2);\n          x0 = x - d, y0 = y - d;\n          x3 = x + d, y3 = y + d;\n          data = node.data;\n        }\n      }\n  }\n\n  return data;\n}","export default function (d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return this; // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n  } // Find the point to remove.\n\n  while (node.data !== d) {\n    if (!(previous = node, node = node.next)) return this;\n  }\n\n  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.\n\n  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.\n\n  if (!parent) return this._root = next, this; // Remove this leaf.\n\n  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.\n\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n    if (retainer) retainer[j] = node;else this._root = node;\n  }\n\n  return this;\n}\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) {\n    this.remove(data[i]);\n  }\n\n  return this;\n}","export default function () {\n  return this._root;\n}","export default function () {\n  var size = 0;\n  this.visit(function (node) {\n    if (!node.length) do {\n      ++size;\n    } while (node = node.next);\n  });\n  return size;\n}","import Quad from \"./quad\";\nexport default function (callback) {\n  var quads = [],\n      q,\n      node = this._root,\n      child,\n      x0,\n      y0,\n      x1,\n      y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n\n  return this;\n}","import Quad from \"./quad\";\nexport default function (callback) {\n  var quads = [],\n      next = [],\n      q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    var node = q.node;\n\n    if (node.length) {\n      var child,\n          x0 = q.x0,\n          y0 = q.y0,\n          x1 = q.x1,\n          y1 = q.y1,\n          xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n\n    next.push(q);\n  }\n\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n\n  return this;\n}","import { dispatch } from \"d3-dispatch\";\nimport { map } from \"d3-collection\";\nimport { timer } from \"d3-timer\";\nexport function x(d) {\n  return d.x;\n}\nexport function y(d) {\n  return d.y;\n}\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\nexport default function (_nodes) {\n  var simulation,\n      _alpha = 1,\n      _alphaMin = 0.001,\n      _alphaDecay = 1 - Math.pow(_alphaMin, 1 / 300),\n      _alphaTarget = 0,\n      _velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (_nodes == null) _nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n\n    if (_alpha < _alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i,\n        n = _nodes.length,\n        node;\n    _alpha += (_alphaTarget - _alpha) * _alphaDecay;\n    forces.each(function (force) {\n      force(_alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = _nodes[i];\n      if (node.fx == null) node.x += node.vx *= _velocityDecay;else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= _velocityDecay;else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = _nodes.length, node; i < n; ++i) {\n      node = _nodes[i], node.index = i;\n\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i),\n            angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(_nodes);\n    return force;\n  }\n\n  initializeNodes();\n  return simulation = {\n    tick: tick,\n    restart: function restart() {\n      return stepper.restart(step), simulation;\n    },\n    stop: function stop() {\n      return stepper.stop(), simulation;\n    },\n    nodes: function nodes(_) {\n      return arguments.length ? (_nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : _nodes;\n    },\n    alpha: function alpha(_) {\n      return arguments.length ? (_alpha = +_, simulation) : _alpha;\n    },\n    alphaMin: function alphaMin(_) {\n      return arguments.length ? (_alphaMin = +_, simulation) : _alphaMin;\n    },\n    alphaDecay: function alphaDecay(_) {\n      return arguments.length ? (_alphaDecay = +_, simulation) : +_alphaDecay;\n    },\n    alphaTarget: function alphaTarget(_) {\n      return arguments.length ? (_alphaTarget = +_, simulation) : _alphaTarget;\n    },\n    velocityDecay: function velocityDecay(_) {\n      return arguments.length ? (_velocityDecay = 1 - _, simulation) : 1 - _velocityDecay;\n    },\n    force: function force(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n    find: function find(x, y, radius) {\n      var i = 0,\n          n = _nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n      if (radius == null) radius = Infinity;else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n    on: function on(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function (x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\n  var i,\n      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n}","import formatDecimal from \"./formatDecimal\";\nexport default function (x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function () {\n  return this.fill + this.align + this.sign + this.symbol + (this.zero ? \"0\" : \"\") + (this.width == null ? \"\" : Math.max(1, this.width | 0)) + (this.comma ? \",\" : \"\") + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0)) + (this.trim ? \"~\" : \"\") + this.type;\n};","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function (s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\":\n        i0 = i1 = i;\n        break;\n\n      case \"0\":\n        if (i0 === 0) i0 = i;\n        i1 = i;\n        break;\n\n      default:\n        if (i0 > 0) {\n          if (!+s[i]) break out;\n          i0 = 0;\n        }\n\n        break;\n    }\n  }\n\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}","import formatDecimal from \"./formatDecimal\";\nexport var prefixExponent;\nexport default function (x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join(\"0\") : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i) : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}","import formatLocale from \"./locale\";\nvar locale;\nexport var format;\nexport var formatPrefix;\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}","import formatDecimal from \"./formatDecimal\";\nexport default function (x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\nexport default {\n  \"%\": function _(x, p) {\n    return (x * 100).toFixed(p);\n  },\n  \"b\": function b(x) {\n    return Math.round(x).toString(2);\n  },\n  \"c\": function c(x) {\n    return x + \"\";\n  },\n  \"d\": function d(x) {\n    return Math.round(x).toString(10);\n  },\n  \"e\": function e(x, p) {\n    return x.toExponential(p);\n  },\n  \"f\": function f(x, p) {\n    return x.toFixed(p);\n  },\n  \"g\": function g(x, p) {\n    return x.toPrecision(p);\n  },\n  \"o\": function o(x) {\n    return Math.round(x).toString(8);\n  },\n  \"p\": function p(x, _p) {\n    return formatRounded(x * 100, _p);\n  },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function X(x) {\n    return Math.round(x).toString(16).toUpperCase();\n  },\n  \"x\": function x(_x) {\n    return Math.round(_x).toString(16);\n  }\n};","export default function (x) {\n  return x;\n}","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport { prefixExponent } from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\nvar prefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"];\nexport default function (locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type; // The \"n\" type is an alias for \",g\".\n\n    if (type === \"n\") comma = true, type = \"g\"; // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\"; // If zero fill is specified, padding goes after sign and before digits.\n\n    if (zero || fill === \"0\" && align === \"=\") zero = true, fill = \"0\", align = \"=\"; // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\"; // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n\n    precision = precision == null ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i,\n          n,\n          c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value; // Perform the initial formatting.\n\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision); // Trim insignificant zeros.\n\n        if (trim) value = formatTrim(value); // If a negative value rounds to zero during formatting, treat as positive.\n\n        if (valueNegative && +value === 0) valueNegative = false; // Compute the prefix and suffix.\n\n        valuePrefix = (valueNegative ? sign === \"(\" ? sign : \"-\" : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\"); // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      } // If the fill character is not \"0\", grouping is applied before padding.\n\n\n      if (comma && !zero) value = group(value, Infinity); // Compute the padding.\n\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\"; // If the fill character is \"0\", grouping is applied after padding.\n\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\"; // Reconstruct the final output based on the desired alignment.\n\n      switch (align) {\n        case \"<\":\n          value = valuePrefix + value + valueSuffix + padding;\n          break;\n\n        case \"=\":\n          value = valuePrefix + padding + value + valueSuffix;\n          break;\n\n        case \"^\":\n          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n          break;\n\n        default:\n          value = padding + valuePrefix + value + valueSuffix;\n          break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function () {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function (value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}","export default function (grouping, thousands) {\n  return function (value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}","export default function (numerals) {\n  return function (value) {\n    return value.replace(/[0-9]/g, function (i) {\n      return numerals[+i];\n    });\n  };\n}","import exponent from \"./exponent\";\nexport default function (step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose\";\nimport { asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau } from \"./math\";\nvar sum = adder();\nexport default function (polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","export default function (x) {\n  return x;\n}","import noop from \"../noop\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { sqrt } from \"../math\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { abs, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { equirectangularRaw } from \"./equirectangular\";\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y,\n        nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function (x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}","import projection from \"./index.js\";\nimport { abs, asin, cos, epsilon2, sin, sqrt } from \"../math.js\";\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)),\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n  return [lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n}\n\nequalEarthRaw.invert = function (x, y) {\n  var l = y,\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n\n  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l), asin(sin(l) / M)];\n};\n\nexport default function () {\n  return projection(equalEarthRaw).scale(177.158);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import projection from \"./index\";\nimport { abs, epsilon } from \"../math\";\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarth1Raw).scale(175.295);\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;else while (--i >= 0) {\n    sum += children[i].value;\n  }\n  node.value = sum;\n}\n\nexport default function () {\n  return this.eachAfter(count);\n}","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n\n  do {\n    node.height = height;\n  } while ((node = node.parent) && node.height < ++height);\n}\nexport function Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};","export default function (callback) {\n  var node = this,\n      current,\n      next = [node],\n      children,\n      i,\n      n;\n\n  do {\n    current = next.reverse(), next = [];\n\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      next = [],\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  while (node = next.pop()) {\n    callback(node);\n  }\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      children,\n      i;\n\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  return this;\n}","export default function (value) {\n  return this.eachAfter(function (node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n\n    while (--i >= 0) {\n      sum += children[i].value;\n    }\n\n    node.value = sum;\n  });\n}","export default function (compare) {\n  return this.eachBefore(function (node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}","export default function (end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n\n  var k = nodes.length;\n\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n\n  return c;\n}","export default function () {\n  var node = this,\n      nodes = [node];\n\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n\n  return nodes;\n}","export default function () {\n  var nodes = [];\n  this.each(function (node) {\n    nodes.push(node);\n  });\n  return nodes;\n}","export default function () {\n  var leaves = [];\n  this.eachBefore(function (node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}","export default function () {\n  var root = this,\n      links = [];\n  root.each(function (node) {\n    if (node !== root) {\n      // Don’t include the root’s parent, if any.\n      links.push({\n        source: node.parent,\n        target: node\n      });\n    }\n  });\n  return links;\n}","export var slice = Array.prototype.slice;\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}","export default function (node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}","export default function (parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}","import { Node } from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n} // function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\n\n\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n} // This function works analogously to nextLeft.\n\n\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n} // Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\n\n\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n} // All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\n\n\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n} // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\n\n\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n\n  this.a = this; // ancestor\n\n  this.z = 0; // prelim\n\n  this.m = 0; // mod\n\n  this.c = 0; // change\n\n  this.s = 0; // shift\n\n  this.t = null; // thread\n\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n} // Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\n\nexport default function () {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root); // Compute the layout using Buchheim et al.’s algorithm.\n\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk); // If a fixed node size is specified, scale x and y.\n\n    if (nodeSize) root.eachBefore(sizeNode); // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n        var left = root,\n            right = root,\n            bottom = root;\n        root.eachBefore(function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var s = left === right ? 1 : separation(left, right) / 2,\n            tx = s - left.x,\n            kx = dx / (right.x + s + tx),\n            ky = dy / (bottom.depth || 1);\n        root.eachBefore(function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n    return root;\n  } // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n\n\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  } // Computes all real x-coordinates by summing up the modifiers recursively.\n\n\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  } // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n\n\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function (x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function (x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];\n  };\n\n  tree.nodeSize = function (x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;\n  };\n\n  return tree;\n}","export default function (parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nexport var phi = (1 + Math.sqrt(5)) / 2;\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx,\n      dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.\n\n    do {\n      sumValue = nodes[i1++].value;\n    } while (!sumValue && i1 < n);\n\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.\n\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n\n      if (newRatio > minRatio) {\n        sumValue -= nodeValue;\n        break;\n      }\n\n      minRatio = newRatio;\n    } // Position and record the row orientation.\n\n\n    rows.push(row = {\n      value: sumValue,\n      dice: dx < dy,\n      children: nodes.slice(i0, i1)\n    });\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\nexport default (function custom(ratio) {\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function (x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport { phi, squarifyRatio } from \"./squarify\";\nexport default (function custom(ratio) {\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && rows.ratio === ratio) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) {\n          row.value += nodes[i].value;\n        }\n\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function (x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n} // Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\n\n\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) {\n      --size;\n    }\n\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function (points) {\n  if ((n = points.length) < 3) return null;\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) {\n    sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  }\n\n  sortedPoints.sort(lexicographicOrder);\n\n  for (i = 0; i < n; ++i) {\n    flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n  }\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.\n\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = []; // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n\n  for (i = upperIndexes.length - 1; i >= 0; --i) {\n    hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  }\n\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) {\n    hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n  }\n\n  return hull;\n}","export default function () {\n  return Math.random();\n}","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function () {\n      var y; // If available, use the second previously-generated uniform random.\n\n      if (x != null) y = x, x = null; // Otherwise, generate a new x and y.\n      else do {\n          x = source() * 2 - 1;\n          y = source() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n  return randomNormal;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;else max -= min;\n    return function () {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n  return randomUniform;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function () {\n      for (var sum = 0, i = 0; i < n; ++i) {\n        sum += source();\n      }\n\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n  return randomIrwinHall;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function () {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n  return randomLogNormal;\n})(defaultSource);","var array = Array.prototype;\nexport var map = array.map;\nexport var slice = array.slice;","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function () {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n  return randomBates;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function () {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n  return randomExponential;\n})(defaultSource);","import { bisect } from \"d3-array\";\nimport { slice } from \"./array\";\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function (y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function () {\n    return threshold().domain(domain).range(range);\n  };\n\n  return scale;\n}","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import interval from \"./interval\";\nvar millisecond = interval(function () {// noop\n}, function (date, step) {\n  date.setTime(+date + step);\n}, function (start, end) {\n  return end - start;\n}); // An optimized implementation for this simple case.\n\nmillisecond.every = function (k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function (date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function (date, step) {\n    date.setTime(+date + step * k);\n  }, function (start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","import interval from \"./interval\";\nimport { durationSecond } from \"./duration\";\nvar second = interval(function (date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function (date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function (start, end) {\n  return (end - start) / durationSecond;\n}, function (date) {\n  return date.getUTCSeconds();\n});\nexport default second;\nexport var seconds = second.range;","import interval from \"./interval\";\nimport { durationMinute } from \"./duration\";\nvar minute = interval(function (date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getMinutes();\n});\nexport default minute;\nexport var minutes = minute.range;","import interval from \"./interval\";\nimport { durationHour, durationMinute } from \"./duration\";\nvar hour = interval(function (date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getHours();\n});\nexport default hour;\nexport var hours = hour.range;","import interval from \"./interval\";\nimport { durationDay, durationMinute } from \"./duration\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import interval from \"./interval\";\nimport { durationMinute, durationWeek } from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function (date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;","import interval from \"./interval\";\nvar month = interval(function (date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function (start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function (date) {\n  return date.getMonth();\n});\nexport default month;\nexport var months = month.range;","import interval from \"./interval\";\nvar year = interval(function (date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function (start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function (date) {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\nyear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;","import interval from \"./interval\";\nimport { durationMinute } from \"./duration\";\nvar utcMinute = interval(function (date) {\n  date.setUTCSeconds(0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getUTCMinutes();\n});\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;","import interval from \"./interval\";\nimport { durationHour } from \"./duration\";\nvar utcHour = interval(function (date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getUTCHours();\n});\nexport default utcHour;\nexport var utcHours = utcHour.range;","import interval from \"./interval\";\nimport { durationDay } from \"./duration\";\nvar utcDay = interval(function (date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function (start, end) {\n  return (end - start) / durationDay;\n}, function (date) {\n  return date.getUTCDate() - 1;\n});\nexport default utcDay;\nexport var utcDays = utcDay.range;","import interval from \"./interval\";\nimport { durationWeek } from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function (date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function (start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;","import interval from \"./interval\";\nvar utcMonth = interval(function (date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function (start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function (date) {\n  return date.getUTCMonth();\n});\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;","import interval from \"./interval\";\nvar utcYear = interval(function (date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function (start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function (date) {\n  return date.getUTCFullYear();\n}); // An optimized implementation for this simple case.\n\nutcYear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;","import { timeDay, timeSunday, timeMonday, timeThursday, timeYear, utcDay, utcSunday, utcMonday, utcThursday, utcYear } from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {\n    y: y,\n    m: 0,\n    d: 1,\n    H: 0,\n    M: 0,\n    S: 0,\n    L: 0\n  };\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  }; // These recursive directive definitions must be deferred.\n\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function (date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function (string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week,\n          day;\n      if (i != string.length) return null; // If a UNIX timestamp is specified, return it.\n\n      if (\"Q\" in d) return new Date(d.Q); // The am-pm flag is 0 for AM, and 1 for PM.\n\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12; // Convert day-of-week and week-of-year to day-of-year.\n\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      } // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n\n\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      } // Otherwise, all fields are in local time.\n\n\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || (j = parse(d, string, j)) < 0) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function format(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n\n      f.toString = function () {\n        return specifier;\n      };\n\n      return f;\n    },\n    parse: function parse(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n\n      p.toString = function () {\n        return specifier;\n      };\n\n      return p;\n    },\n    utcFormat: function utcFormat(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n\n      f.toString = function () {\n        return specifier;\n      };\n\n      return f;\n    },\n    utcParse: function utcParse(specifier) {\n      var p = newParse(specifier, utcDate);\n\n      p.toString = function () {\n        return specifier;\n      };\n\n      return p;\n    }\n  };\n}\nvar pads = {\n  \"-\": \"\",\n  \"_\": \" \",\n  \"0\": \"0\"\n},\n    numberRe = /^\\s*\\d+/,\n    // note: ignores next directive\npercentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {},\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    map[names[i].toLowerCase()] = i;\n  }\n\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0] * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = day >= 4 || day === 0 ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\")) + pad(z / 60 | 0, \"0\", 2) + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}","import formatLocale from \"./locale\";\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}","import { utcFormat } from \"./defaultLocale\";\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString ? formatIsoNative : utcFormat(isoSpecifier);\nexport default formatIso;","import { isoSpecifier } from \"./isoFormat\";\nimport { utcParse } from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\") ? parseIsoNative : utcParse(isoSpecifier);\nexport default parseIso;","export default function (specifier) {\n  var n = specifier.length / 6 | 0,\n      colors = new Array(n),\n      i = 0;\n\n  while (i < n) {\n    colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  }\n\n  return colors;\n}","import { interpolateRgbBasis } from \"d3-interpolate\";\nexport default function (scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}","import colors from \"../colors\";\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");","import colors from \"../colors\";\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");","import colors from \"../colors\";\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");","import colors from \"../colors\";\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");","import colors from \"../colors\";\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");","import colors from \"../colors\";\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");","import colors from \"../colors\";\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");","import colors from \"../colors\";\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");","import colors from \"../colors\";\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"d8b365f5f5f55ab4ac\", \"a6611adfc27d80cdc1018571\", \"a6611adfc27df5f5f580cdc1018571\", \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\", \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\", \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\", \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\", \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\", \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"af8dc3f7f7f77fbf7b\", \"7b3294c2a5cfa6dba0008837\", \"7b3294c2a5cff7f7f7a6dba0008837\", \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\", \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\", \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\", \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\", \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\", \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"e9a3c9f7f7f7a1d76a\", \"d01c8bf1b6dab8e1864dac26\", \"d01c8bf1b6daf7f7f7b8e1864dac26\", \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\", \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\", \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\", \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\", \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\", \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"998ec3f7f7f7f1a340\", \"5e3c99b2abd2fdb863e66101\", \"5e3c99b2abd2f7f7f7fdb863e66101\", \"542788998ec3d8daebfee0b6f1a340b35806\", \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\", \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\", \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\", \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\", \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"ef8a62f7f7f767a9cf\", \"ca0020f4a58292c5de0571b0\", \"ca0020f4a582f7f7f792c5de0571b0\", \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\", \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\", \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\", \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\", \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\", \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"ef8a62ffffff999999\", \"ca0020f4a582bababa404040\", \"ca0020f4a582ffffffbababa404040\", \"b2182bef8a62fddbc7e0e0e09999994d4d4d\", \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\", \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\", \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\", \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\", \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fc8d59ffffbf91bfdb\", \"d7191cfdae61abd9e92c7bb6\", \"d7191cfdae61ffffbfabd9e92c7bb6\", \"d73027fc8d59fee090e0f3f891bfdb4575b4\", \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\", \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\", \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\", \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\", \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fc8d59ffffbf91cf60\", \"d7191cfdae61a6d96a1a9641\", \"d7191cfdae61ffffbfa6d96a1a9641\", \"d73027fc8d59fee08bd9ef8b91cf601a9850\", \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\", \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\", \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\", \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\", \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fc8d59ffffbf99d594\", \"d7191cfdae61abdda42b83ba\", \"d7191cfdae61ffffbfabdda42b83ba\", \"d53e4ffc8d59fee08be6f59899d5943288bd\", \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\", \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\", \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\", \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\", \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"e5f5f999d8c92ca25f\", \"edf8fbb2e2e266c2a4238b45\", \"edf8fbb2e2e266c2a42ca25f006d2c\", \"edf8fbccece699d8c966c2a42ca25f006d2c\", \"edf8fbccece699d8c966c2a441ae76238b45005824\", \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\", \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"e0ecf49ebcda8856a7\", \"edf8fbb3cde38c96c688419d\", \"edf8fbb3cde38c96c68856a7810f7c\", \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\", \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\", \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\", \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"e0f3dba8ddb543a2ca\", \"f0f9e8bae4bc7bccc42b8cbe\", \"f0f9e8bae4bc7bccc443a2ca0868ac\", \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\", \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\", \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\", \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fee8c8fdbb84e34a33\", \"fef0d9fdcc8afc8d59d7301f\", \"fef0d9fdcc8afc8d59e34a33b30000\", \"fef0d9fdd49efdbb84fc8d59e34a33b30000\", \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\", \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\", \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"ece2f0a6bddb1c9099\", \"f6eff7bdc9e167a9cf02818a\", \"f6eff7bdc9e167a9cf1c9099016c59\", \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\", \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\", \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\", \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"ece7f2a6bddb2b8cbe\", \"f1eef6bdc9e174a9cf0570b0\", \"f1eef6bdc9e174a9cf2b8cbe045a8d\", \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\", \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\", \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\", \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"e7e1efc994c7dd1c77\", \"f1eef6d7b5d8df65b0ce1256\", \"f1eef6d7b5d8df65b0dd1c77980043\", \"f1eef6d4b9dac994c7df65b0dd1c77980043\", \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\", \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\", \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fde0ddfa9fb5c51b8a\", \"feebe2fbb4b9f768a1ae017e\", \"feebe2fbb4b9f768a1c51b8a7a0177\", \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\", \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\", \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\", \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"edf8b17fcdbb2c7fb8\", \"ffffcca1dab441b6c4225ea8\", \"ffffcca1dab441b6c42c7fb8253494\", \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\", \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\", \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\", \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"f7fcb9addd8e31a354\", \"ffffccc2e69978c679238443\", \"ffffccc2e69978c67931a354006837\", \"ffffccd9f0a3addd8e78c67931a354006837\", \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\", \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\", \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fff7bcfec44fd95f0e\", \"ffffd4fed98efe9929cc4c02\", \"ffffd4fed98efe9929d95f0e993404\", \"ffffd4fee391fec44ffe9929d95f0e993404\", \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\", \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\", \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"ffeda0feb24cf03b20\", \"ffffb2fecc5cfd8d3ce31a1c\", \"ffffb2fecc5cfd8d3cf03b20bd0026\", \"ffffb2fed976feb24cfd8d3cf03b20bd0026\", \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\", \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\", \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"deebf79ecae13182bd\", \"eff3ffbdd7e76baed62171b5\", \"eff3ffbdd7e76baed63182bd08519c\", \"eff3ffc6dbef9ecae16baed63182bd08519c\", \"eff3ffc6dbef9ecae16baed64292c62171b5084594\", \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\", \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"e5f5e0a1d99b31a354\", \"edf8e9bae4b374c476238b45\", \"edf8e9bae4b374c47631a354006d2c\", \"edf8e9c7e9c0a1d99b74c47631a354006d2c\", \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\", \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\", \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"f0f0f0bdbdbd636363\", \"f7f7f7cccccc969696525252\", \"f7f7f7cccccc969696636363252525\", \"f7f7f7d9d9d9bdbdbd969696636363252525\", \"f7f7f7d9d9d9bdbdbd969696737373525252252525\", \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\", \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"efedf5bcbddc756bb1\", \"f2f0f7cbc9e29e9ac86a51a3\", \"f2f0f7cbc9e29e9ac8756bb154278f\", \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\", \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\", \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\", \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fee0d2fc9272de2d26\", \"fee5d9fcae91fb6a4acb181d\", \"fee5d9fcae91fb6a4ade2d26a50f15\", \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\", \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\", \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\", \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fee6cefdae6be6550d\", \"feeddefdbe85fd8d3cd94701\", \"feeddefdbe85fd8d3ce6550da63603\", \"feeddefdd0a2fdae6bfd8d3ce6550da63603\", \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\", \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\", \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\").map(colors);\nexport default ramp(scheme);","import { cubehelix } from \"d3-color\";\nimport { interpolateCubehelixLong } from \"d3-interpolate\";\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));","import { cubehelix } from \"d3-color\";\nimport { interpolateCubehelixLong } from \"d3-interpolate\";\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\nvar c = cubehelix();\nexport default function (t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}","import { rgb } from \"d3-color\";\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\nexport default function (t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function (t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n      // proceed\n\n      default:\n        this._context.lineTo(x, y);\n\n        break;\n    }\n  }\n};\nexport default function (context) {\n  return new Linear(context);\n}","import curveLinear from \"./linear\";\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function areaStart() {\n    this._curve.areaStart();\n  },\n  areaEnd: function areaEnd() {\n    this._curve.areaEnd();\n  },\n  lineStart: function lineStart() {\n    this._curve.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this._curve.lineEnd();\n  },\n  point: function point(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\nexport default function curveRadial(curve) {\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n  return radial;\n}","export var slice = Array.prototype.slice;","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\nexport default {\n  draw: function draw(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};","import { pi, tau } from \"../math\";\nexport default {\n  draw: function draw(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};","import { pi, tau } from \"../math\";\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\nexport default {\n  draw: function draw(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n\n    context.closePath();\n  }\n};","export default function () {}","var sqrt3 = Math.sqrt(3);\nexport default {\n  draw: function draw(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\nexport default {\n  draw: function draw(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};","function _point(that, x, y) {\n  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);\n}\n\nexport { _point as point };\nexport function Basis(context) {\n  this._context = context;\n}\nBasis.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 3:\n        _point(this, this._x1, this._y1);\n\n      // proceed\n\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n\n        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);\n\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\nexport default function (context) {\n  return new Basis(context);\n}","import noop from \"../noop\";\nimport { point as _point } from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 1:\n        {\n          this._context.moveTo(this._x2, this._y2);\n\n          this._context.closePath();\n\n          break;\n        }\n\n      case 2:\n        {\n          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\n          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\n          this._context.closePath();\n\n          break;\n        }\n\n      case 3:\n        {\n          this.point(this._x2, this._y2);\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          break;\n        }\n    }\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._x2 = x, this._y2 = y;\n        break;\n\n      case 1:\n        this._point = 2;\n        this._x3 = x, this._y3 = y;\n        break;\n\n      case 2:\n        this._point = 3;\n        this._x4 = x, this._y4 = y;\n\n        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);\n\n        break;\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\nexport default function (context) {\n  return new BasisClosed(context);\n}","import { point as _point } from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n        var x0 = (this._x0 + 4 * this._x1 + x) / 6,\n            y0 = (this._y0 + 4 * this._y1 + y) / 6;\n        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);\n        break;\n\n      case 3:\n        this._point = 4;\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\nexport default function (context) {\n  return new BasisOpen(context);\n}","import { Basis } from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function lineStart() {\n    this._x = [];\n    this._y = [];\n\n    this._basis.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n\n        this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));\n      }\n    }\n\n    this._x = this._y = null;\n\n    this._basis.lineEnd();\n  },\n  point: function point(x, y) {\n    this._x.push(+x);\n\n    this._y.push(+y);\n  }\n};\nexport default (function custom(beta) {\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function (beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);","function _point(that, x, y) {\n  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);\n}\n\nexport { _point as point };\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinal.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x2, this._y2);\n\n        break;\n\n      case 3:\n        _point(this, this._x1, this._y1);\n\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        this._x1 = x, this._y1 = y;\n        break;\n\n      case 2:\n        this._point = 3;\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(tension) {\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);","import noop from \"../noop\";\nimport { point as _point } from \"./cardinal\";\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 1:\n        {\n          this._context.moveTo(this._x3, this._y3);\n\n          this._context.closePath();\n\n          break;\n        }\n\n      case 2:\n        {\n          this._context.lineTo(this._x3, this._y3);\n\n          this._context.closePath();\n\n          break;\n        }\n\n      case 3:\n        {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n    }\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._x3 = x, this._y3 = y;\n        break;\n\n      case 1:\n        this._point = 2;\n\n        this._context.moveTo(this._x4 = x, this._y4 = y);\n\n        break;\n\n      case 2:\n        this._point = 3;\n        this._x5 = x, this._y5 = y;\n        break;\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(tension) {\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);","import { point as _point } from \"./cardinal\";\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinalOpen.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);\n        break;\n\n      case 3:\n        this._point = 4;\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(tension) {\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);","import { epsilon } from \"../math\";\nimport { Cardinal } from \"./cardinal\";\n\nfunction _point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nexport { _point as point };\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x2, this._y2);\n\n        break;\n\n      case 3:\n        this.point(this._x2, this._y2);\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);","import { CardinalClosed } from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport { point as _point } from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 1:\n        {\n          this._context.moveTo(this._x3, this._y3);\n\n          this._context.closePath();\n\n          break;\n        }\n\n      case 2:\n        {\n          this._context.lineTo(this._x3, this._y3);\n\n          this._context.closePath();\n\n          break;\n        }\n\n      case 3:\n        {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n    }\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._x3 = x, this._y3 = y;\n        break;\n\n      case 1:\n        this._point = 2;\n\n        this._context.moveTo(this._x4 = x, this._y4 = y);\n\n        break;\n\n      case 2:\n        this._point = 3;\n        this._x5 = x, this._y5 = y;\n        break;\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);","import { CardinalOpen } from \"./cardinalOpen\";\nimport { point as _point } from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);\n        break;\n\n      case 3:\n        this._point = 4;\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._point) this._context.closePath();\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);\n  }\n};\nexport default function (context) {\n  return new LinearClosed(context);\n}","function sign(x) {\n  return x < 0 ? -1 : 1;\n} // Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\n\n\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n} // Calculate a one-sided slope.\n\n\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\n\nfunction _point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n\n        break;\n\n      case 3:\n        _point(this, this._t0, slope2(this, this._t0));\n\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    var t1 = NaN;\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n\n        _point(this, slope2(this, t1 = slope3(this, x, y)), t1);\n\n        break;\n\n      default:\n        _point(this, this._t0, t1 = slope3(this, x, y));\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function moveTo(x, y) {\n    this._context.moveTo(y, x);\n  },\n  closePath: function closePath() {\n    this._context.closePath();\n  },\n  lineTo: function lineTo(x, y) {\n    this._context.lineTo(y, x);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);\n  }\n};\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function lineEnd() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || this._line !== 0 && n === 1) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function point(x, y) {\n    this._x.push(+x);\n\n    this._y.push(+y);\n  }\n}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\n  for (i = 1; i < n - 1; ++i) {\n    a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  }\n\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\n  for (i = 1; i < n; ++i) {\n    m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  }\n\n  a[n - 1] = r[n - 1] / b[n - 1];\n\n  for (i = n - 2; i >= 0; --i) {\n    a[i] = (r[i] - a[i + 1]) / b[i];\n  }\n\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\n  for (i = 0; i < n - 1; ++i) {\n    b[i] = 2 * x[i + 1] - a[i + 1];\n  }\n\n  return [a, b];\n}\n\nexport default function (context) {\n  return new Natural(context);\n}","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n      // proceed\n\n      default:\n        {\n          if (this._t <= 0) {\n            this._context.lineTo(this._x, y);\n\n            this._context.lineTo(x, y);\n          } else {\n            var x1 = this._x * (1 - this._t) + x * this._t;\n\n            this._context.lineTo(x1, this._y);\n\n            this._context.lineTo(x1, y);\n          }\n\n          break;\n        }\n    }\n\n    this._x = x, this._y = y;\n  }\n};\nexport default function (context) {\n  return new Step(context, 0.5);\n}\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n  insert: function insert(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n\n      if (after.R) {\n        after = after.R;\n\n        while (after.L) {\n          after = after.L;\n        }\n\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n    after = node;\n\n    while (parent && parent.C) {\n      grandpa = parent.U;\n\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n\n      parent = after.U;\n    }\n\n    this._.C = false;\n  },\n  remove: function remove(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n\n    if (node && node.C) {\n      node.C = false;\n      return;\n    }\n\n    do {\n      if (node === this._) break;\n\n      if (node === parent.L) {\n        sibling = parent.R;\n\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) {\n    node = node.L;\n  }\n\n  return node;\n}\n\nexport default RedBlackTree;","import { cells, edges, epsilon } from \"./Diagram\";\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n} // Liang–Barsky line clipping.\n\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1) || !clipEdge(edge, x0, y0, x1, y1) || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}","import { createBorderEdge } from \"./Edge\";\nimport { cells, edges, epsilon } from \"./Diagram\";\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n\n      for (j = 0; j < m; ++j) {\n        index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      }\n\n      index.sort(function (i, j) {\n        return array[j] - array[i];\n      });\n\n      for (j = 0; j < m; ++j) {\n        array[j] = halfedges[index[j]];\n      }\n\n      for (j = 0; j < m; ++j) {\n        halfedges[j] = array[j];\n      }\n    }\n  }\n}\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length; // Remove any dangling clipped edges.\n\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      } // Insert any border edges as necessary.\n\n\n      iHalfedge = 0, nHalfedges = halfedges.length;\n\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end, Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1] : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1] : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0] : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0] : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  } // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n\n\n  if (cover) {\n    var dx,\n        dy,\n        d2,\n        dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0],\n          v01 = [x0, y1],\n          v11 = [x1, y1],\n          v10 = [x1, y0];\n      cover.halfedges.push(edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1, edges.push(createBorderEdge(site, v01, v11)) - 1, edges.push(createBorderEdge(site, v11, v10)) - 1, edges.push(createBorderEdge(site, v10, v00)) - 1);\n    }\n  } // Lastly delete any cells with no edges; these were entirely clipped.\n\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}","import { RedBlackNode } from \"./RedBlackTree\";\nimport { circles, epsilon2 } from \"./Diagram\";\nvar circlePool = [];\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x = this.y = this.arc = this.site = this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n  if (!lArc || !rArc) return;\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n  if (lSite === rSite) return;\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n  var circle = circlePool.pop() || new Circle();\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n      if (node.L) node = node.L;else {\n        before = node.P;\n        break;\n      }\n    } else {\n      if (node.R) node = node.R;else {\n        before = node;\n        break;\n      }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}","import { RedBlackNode } from \"./RedBlackTree\";\nimport { createCell } from \"./Cell\";\nimport { attachCircle, detachCircle } from \"./Circle\";\nimport { createEdge, setEdgeEnd } from \"./Edge\";\nimport { beaches, epsilon } from \"./Diagram\";\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge = this.site = this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach();\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n  detachBeach(beach);\n  var lArc = previous;\n\n  while (lArc.circle && Math.abs(x - lArc.circle.x) < epsilon && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n  var rArc = next;\n\n  while (rArc.circle && Math.abs(x - rArc.circle.x) < epsilon && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n  var nArcs = disappearing.length,\n      iArc;\n\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L;else {\n      dxr = x - rightBreakPoint(node, directrix);\n\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) {\n    // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  } // else lArc !== rArc\n\n\n  detachCircle(lArc);\n  detachCircle(rArc);\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n  if (!pby2) return rfocx;\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n  if (!plby2) return lfocx;\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}","import { addBeach, removeBeach } from \"./Beach\";\nimport { sortCellHalfedges, cellHalfedgeStart, clipCells } from \"./Cell\";\nimport { firstCircle } from \"./Circle\";\nimport { clipEdges } from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1] || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree();\n  circles = new RedBlackTree();\n\n  while (true) {\n    circle = firstCircle;\n\n    if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n  beaches = circles = edges = cells = null;\n}\nDiagram.prototype = {\n  constructor: Diagram,\n  polygons: function polygons() {\n    var edges = this.edges;\n    return this.cells.map(function (cell) {\n      var polygon = cell.halfedges.map(function (i) {\n        return cellHalfedgeStart(cell, edges[i]);\n      });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n  triangles: function triangles() {\n    var triangles = [],\n        edges = this.edges;\n    this.cells.forEach(function (cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n    return triangles;\n  },\n  links: function links() {\n    return this.edges.filter(function (edge) {\n      return edge.right;\n    }).map(function (edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n  find: function find(x, y, radius) {\n    var that = this,\n        i0,\n        i1 = that._found || 0,\n        n = that.cells.length,\n        cell; // Use the previously-found cell, or start with an arbitrary one.\n\n    while (!(cell = that.cells[i1])) {\n      if (++i1 >= n) return null;\n    }\n\n    var dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy; // Traverse the half-edges to find a closer cell, if any.\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function (e) {\n        var edge = that.edges[e],\n            v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\nTransform.prototype = {\n  constructor: Transform,\n  scale: function scale(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function translate(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function apply(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function applyX(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function applyY(y) {\n    return y * this.k + this.y;\n  },\n  invert: function invert(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function invertX(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function invertY(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function rescaleX(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function rescaleY(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function toString() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\nexport var identity = new Transform(1, 0, 0);\ntransform.prototype = Transform.prototype;\nexport default function transform(node) {\n  return node.__zoom || identity;\n}","export { version } from \"./dist/package\";\nexport * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-collection\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-voronoi\";\nexport * from \"d3-zoom\";","export default function (x) {\n  return x;\n}","import identity from \"./identity\";\nexport default function (transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function (input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n\n    while (j < n) {\n      output[j] = input[j], ++j;\n    }\n\n    return output;\n  };\n}","export default function (array, n) {\n  var t,\n      j = array.length,\n      i = j - n;\n\n  while (i < --j) {\n    t = array[i], array[i++] = array[j], array[j] = t;\n  }\n}","import reverse from \"./reverse\";\nimport transform from \"./transform\";\nexport default function (topology, o) {\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function (o) {\n      return feature(topology, o);\n    })\n  } : feature(topology, o);\n}\nexport function feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {\n    type: \"Feature\",\n    properties: properties,\n    geometry: geometry\n  } : bbox == null ? {\n    type: \"Feature\",\n    id: id,\n    properties: properties,\n    geometry: geometry\n  } : {\n    type: \"Feature\",\n    id: id,\n    bbox: bbox,\n    properties: properties,\n    geometry: geometry\n  };\n}\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n\n    for (var i = 0, n = arcs.length; i < n; ++i) {\n      arc(arcs[i], points);\n    }\n\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n\n    while (points.length < 4) {\n      points.push(points[0]);\n    } // This may happen if an arc has only two points.\n\n\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type,\n        coordinates;\n\n    switch (type) {\n      case \"GeometryCollection\":\n        return {\n          type: type,\n          geometries: o.geometries.map(geometry)\n        };\n\n      case \"Point\":\n        coordinates = point(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        coordinates = o.coordinates.map(point);\n        break;\n\n      case \"LineString\":\n        coordinates = line(o.arcs);\n        break;\n\n      case \"MultiLineString\":\n        coordinates = o.arcs.map(line);\n        break;\n\n      case \"Polygon\":\n        coordinates = polygon(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        coordinates = o.arcs.map(polygon);\n        break;\n\n      default:\n        return null;\n    }\n\n    return {\n      type: type,\n      coordinates: coordinates\n    };\n  }\n\n  return geometry(o);\n}","export default function (topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1; // Stitch empty arcs first, since they may be subsumed by other arcs.\n\n  arcs.forEach(function (i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        t;\n\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n  arcs.forEach(function (i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f,\n        g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i],\n        p0 = arc[0],\n        p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function (dp) {\n      p1[0] += dp[0], p1[1] += dp[1];\n    });else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function (i) {\n        stitchedArcs[i < 0 ? ~i : i] = 1;\n      });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function (i) {\n    if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]);\n  });\n  return fragments;\n}","import { object } from \"./feature\";\nimport stitch from \"./stitch\";\nexport default function (topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) {\n    arcs[i] = i;\n  }\n  return {\n    type: \"MultiLineString\",\n    arcs: stitch(topology, arcs)\n  };\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({\n      i: i,\n      g: geom\n    });\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(geometry);\n        break;\n\n      case \"LineString\":\n        extract1(o.arcs);\n        break;\n\n      case \"MultiLineString\":\n      case \"Polygon\":\n        extract2(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        extract3(o.arcs);\n        break;\n    }\n  }\n\n  geometry(object);\n  geomsByArc.forEach(filter == null ? function (geoms) {\n    arcs.push(geoms[0].i);\n  } : function (geoms) {\n    if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i);\n  });\n  return arcs;\n}","export default function (a, x) {\n  var lo = 0,\n      hi = a.length;\n\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;else hi = mid;\n  }\n\n  return lo;\n}","// TODO if quantized, use simpler Int32 hashing?\nvar buffer = new ArrayBuffer(16),\n    floats = new Float64Array(buffer),\n    uints = new Uint32Array(buffer);\nexport default function (point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n}","var pi = Math.PI,\n    tau = 2 * pi,\n    quarterPi = pi / 4,\n    radians = pi / 180,\n    abs = Math.abs,\n    atan2 = Math.atan2,\n    cos = Math.cos,\n    sin = Math.sin;\n\nfunction halfArea(ring, closed) {\n  var i = 0,\n      n = ring.length,\n      sum = 0,\n      point = ring[closed ? i++ : n - 1],\n      lambda0,\n      lambda1 = point[0] * radians,\n      phi1 = point[1] * radians / 2 + quarterPi,\n      cosPhi0,\n      cosPhi1 = cos(phi1),\n      sinPhi0,\n      sinPhi1 = sin(phi1);\n\n  for (; i < n; ++i) {\n    point = ring[i];\n    lambda0 = lambda1, lambda1 = point[0] * radians;\n    phi1 = point[1] * radians / 2 + quarterPi;\n    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1); // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n\n    var dLambda = lambda1 - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        k = sinPhi0 * sinPhi1,\n        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n        v = k * sdLambda * sin(adLambda);\n    sum += atan2(v, u);\n  }\n\n  return sum;\n}\n\nexport function sphericalRingArea(ring, interior) {\n  var sum = halfArea(ring, true);\n  if (interior) sum *= -1;\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\nexport function sphericalTriangleArea(t) {\n  return abs(halfArea(t, false)) * 2;\n}","export * from \"topojson-client\";\nexport * from \"topojson-server\";\nexport * from \"topojson-simplify\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}"],"sourceRoot":""}