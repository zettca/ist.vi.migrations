{"version":3,"sources":["components/YearSlider.js","components/CountrySelect.js","helpers.js","idioms/chord.js","idioms/plot.js","idioms/lines.js","idioms/map.js","index.js"],"names":["marks","1990","1995","2000","2005","2010","2015","2017","yearChange","params","console","log","YearSlider","react_default","a","createElement","style","padding","es","Range","min","max","step","onChange","defaultValue","React","PureComponent","CountrySelect","options","this","props","countries","map","c","value","code3","label","name","react_select_esm","Object","assign","isMulti","placeholder","components","makeAnimated","onBlurResetsInput","onSelectResetsInput","onCloseResetsInput","createSVG","id","dims","arguments","length","undefined","width","height","margins","svg","select","append","attr","concat","left","top","chordSVG","chord","draw","data","outerRadius","Math","innerRadius","chords","d3","padAngle","sortSubgroups","myChord","ribbon","radius","formatValue","color","domain","range","arc","group","selectAll","groups","enter","d","index","darker","groupTick","k","endAngle","startAngle","angle","groupTicks","PI","filter","text","target","update","plotSVG","plot","margin","right","bottom","x","nice","y","call","g","remove","clone","iterations","nodes","points","node","fx","getAttribute","fy","labels","_ref","links","source","i","simulation","force","distanceMax","distance","stop","tick","_","each","atan2","svgDims","dataYears","lines","updateLines","dataset","store","get","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","country","countryData","year","yearData","push","Number","err","return","flatData","reduce","acc","getDomain","func","xScale","yScale","xAxis","tickFormat","yAxis","line","curve","datum","mapSVG","idioms_map","population","countryPop","forEach","n","projection","scale","translate","path","zoom","scaleExtent","on","transform","features","properties","selected","mouseIn","mouseOut","contextMenu","updateMap","selectedCountries","Set","add","set","Array","from","colors","classed","countryID","chordData","plotData","years","countryChange","selection","el","Promise","all","tsv","then","dataYearsList","Country","json","dataResults","_data","slicedToArray","mapData","conversion","ReactDOM","render","CountrySelect_CountrySelect","getSelect","document","getElementById","YearSlider_YearSlider","loadEverything"],"mappings":"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","file":"static/js/main.037f2b9c.chunk.js","sourcesContent":["import React from 'react';\nimport Slider from 'rc-slider';\n\nimport 'rc-slider/assets/index.css';\n\nconst marks = {\n  1990: '1990',\n  1995: '1995',\n  2000: '2000',\n  2005: '2005',\n  2010: '2010',\n  2015: '2015',\n  2017: '2017',\n};\n\nfunction yearChange(params) {\n  console.log(params);\n}\n\nexport default class YearSlider extends React.PureComponent {\n  render() {\n    const style = { padding: '0.4em 4em 1em' };\n\n    return (\n      <div style={style}>\n        <Slider.Range\n          min={1990}\n          max={2017}\n          marks={marks}\n          step={null}\n          onChange={yearChange}\n          defaultValue={[2005, 2015]} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/lib/animated';\n\n\nexport default class CountrySelect extends React.PureComponent {\n  render() {\n    const { countries } = this.props;\n    const options = countries.map((c) => {\n      return { value: c.code3, label: c.name, /*group: c.region*/ };\n    });\n\n    return (\n      <Select isMulti\n        placeholder={'Select countries...'}\n        components={makeAnimated}\n        onBlurResetsInput={false}\n        onSelectResetsInput={false}\n        onCloseResetsInput={false}\n        options={options}\n        {...this.props}\n      />);\n  }\n}\n","import { select } from 'd3';\n\nexport function createSVG(id, dims = { width: 400, height: 400 }, margins) {\n  const svg = select(id).append('svg')\n    .attr('width', dims.width)\n    .attr('height', dims.height);\n\n  if (margins !== undefined) {\n    const group = svg.append('g')\n      .attr('class', 'main')\n      .attr('transform', `translate(${margins.left || 0},${margins.top || 0})`);\n    return group;\n  }\n\n  return svg;\n}\n","import * as d3 from 'd3';\nimport { createSVG } from '../helpers';\n\nexport default {\n  draw: drawChord,\n  update: updateChord,\n};\n\nlet chordSVG;\n\nexport function drawChord(id, width, height, data) {\n  chordSVG = createSVG(id, { width, height });\n\n  function groupTicks(d, step) {\n    const k = (d.endAngle - d.startAngle) / d.value;\n    return d3.range(0, d.value, step).map(value => {\n      return { value: value, angle: value * k + d.startAngle };\n    });\n  }\n\n  const\n    outerRadius = Math.min(width, height) * 0.5 - 30,\n    innerRadius = outerRadius - 20;\n\n  chordSVG\n    .attr('viewBox', [-width / 2, -height / 2, width, height])\n    .attr('font-size', 10)\n    .attr('font-family', 'sans-serif');\n\n  const myChord = d3.chord().padAngle(0.05).sortSubgroups(d3.descending);\n\n  const chords = myChord(data);\n  const ribbon = d3.ribbon().radius(innerRadius);\n\n  const formatValue = d3.formatPrefix(',.0', 1e3);\n  const color = d3.scaleOrdinal()\n    .domain(d3.range(4))\n    .range(['#c6dbef', '#6baed6', '#2171b5', '#08306b']);\n\n  const arc = d3.arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\n\n  const group = chordSVG.append('g')\n    .selectAll('g')\n    .data(chords.groups)\n    .enter().append('g');\n\n  group.append('path')\n    .attr('fill', d => color(d.index))\n    .attr('stroke', d => d3.rgb(color(d.index)).darker())\n    .attr('d', arc);\n\n  const groupTick = group.append('g')\n    .selectAll('g')\n    .data(d => groupTicks(d, 1e3))\n    .enter().append('g')\n    .attr('transform', d => `rotate(${d.angle * 180 / Math.PI - 90}) translate(${outerRadius},0)`);\n\n  groupTick.append('line')\n    .attr('stroke', '#000')\n    .attr('x2', 6);\n\n  groupTick\n    .filter(d => d.value % 5e3 === 0)\n    .append('text')\n    .attr('x', 8)\n    .attr('dy', '.35em')\n    .attr('transform', d => d.angle > Math.PI ? 'rotate(180) translate(-16)' : null)\n    .attr('text-anchor', d => d.angle > Math.PI ? 'end' : null)\n    .text(d => formatValue(d.value));\n\n  chordSVG.append('g')\n    .attr('fill-opacity', 0.67)\n    .selectAll('path')\n    .data(chords)\n    .enter().append('path')\n    .attr('d', ribbon)\n    .attr('fill', d => color(d.target.index))\n    .attr('stroke', d => d3.rgb(color(d.target.index)).darker());\n}\n\nexport function updateChord(id, data) {\n\n}\n","import * as d3 from 'd3';\nimport { createSVG } from '../helpers';\n\nexport default {\n  draw: drawPlot,\n  update: updatePlot,\n};\n\nlet plotSVG;\n\nexport function drawPlot(id, width, height, data) {\n  plotSVG = createSVG(id, { width, height });\n  const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n\n  const x = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.x)).nice()\n    .range([margin.left, width - margin.right]);\n\n  const y = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.y)).nice()\n    .range([height - margin.bottom, margin.top]);\n\n  function xAxis(g) {\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x))\n      .call(g => g.select('.domain').remove());\n  }\n\n  function yAxis(g) {\n    g\n      .attr('transform', `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y))\n      .call(g => g.select('.domain').remove())\n      .call(g => g.select('.tick:last-of-type text').clone());\n  }\n\n  function dodge(text, iterations = 300) {\n    const nodes = text.nodes();\n    const left = text => text.attr('text-anchor', 'start').attr('dy', '0.32em');\n    const right = text => text.attr('text-anchor', 'end').attr('dy', '0.32em');\n    const top = text => text.attr('text-anchor', 'middle').attr('dy', '0.0em');\n    const bottom = text => text.attr('text-anchor', 'middle').attr('dy', '0.8em');\n    const points = nodes.map(node => ({ fx: +node.getAttribute('x'), fy: +node.getAttribute('y') }));\n    const labels = points.map(({ fx, fy }) => ({ x: fx, y: fy }));\n    const links = points.map((source, i) => ({ source, target: labels[i] }));\n\n    const simulation = d3.forceSimulation(points.concat(labels))\n      .force('charge', d3.forceManyBody().distanceMax(80))\n      .force('link', d3.forceLink(links).distance(4).iterations(4))\n      .stop();\n\n    for (let i = 0; i < iterations; ++i) simulation.tick();\n\n    text\n      .attr('x', (_, i) => labels[i].x)\n      .attr('y', (_, i) => labels[i].y)\n      .each(function (_, i) {\n        const a = Math.atan2(labels[i].y - points[i].fy, labels[i].x - points[i].fx);\n        d3.select(this).call(\n          a > Math.PI / 4 && a <= Math.PI * 3 / 4 ? bottom\n            : a > -Math.PI / 4 && a <= Math.PI / 4 ? left\n              : a > -Math.PI * 3 / 4 && a <= Math.PI * 3 / 4 ? top\n                : right);\n      });\n  }\n\n  plotSVG.append('g').attr('class', 'axis-x').call(xAxis);\n  plotSVG.append('g').attr('class', 'axis-y').call(yAxis);\n\n  plotSVG.append('g')\n    .attr('class', 'circles')\n    .selectAll('circle')\n    .data(data)\n    .enter().append('circle')\n    .attr('cx', d => x(d.x))\n    .attr('cy', d => y(d.y))\n    .attr('r', 4);\n\n  plotSVG.append('g')\n    .attr('class', 'text')\n    .selectAll('text')\n    .data(data)\n    .enter().append('text')\n    .attr('x', d => x(d.x))\n    .attr('y', d => y(d.y))\n    .text(d => d.name)\n    .call(dodge);\n}\n\nexport function updatePlot(id, data) {\n\n}\n","import * as d3 from 'd3';\nimport store from 'store';\nimport { createSVG } from '../helpers';\n\nexport default {\n  draw: drawLines,\n  update: updateLines,\n};\n\nlet group;\nlet svgDims;\nlet dataYears;\n\nconst margin = { top: 10, right: 20, bottom: 20, left: 40 };\n\nexport function drawLines(id, width, height, data) {\n  svgDims = { width, height };\n  group = createSVG(id, { width, height }, margin);\n  dataYears = data;\n\n  updateLines(width, height);\n}\n\nexport function updateLines() {\n  const\n    width = svgDims.width - margin.left - margin.right,\n    height = svgDims.height - margin.top - margin.bottom;\n\n  const dataset = [];\n  const countries = store.get('selectedCountries');\n  if (!countries || countries.length === 0) return;\n  for (let country of countries) {\n    const countryData = [];\n    for (let year in dataYears) {\n      const yearData = dataYears[year]['WORLD'][country];\n      countryData.push({ year: Number(year), value: Number(yearData) });\n    }\n    dataset.push(countryData);\n  }\n\n  const flatData = dataset.reduce((acc, d) => acc.concat(d), []);\n  const getDomain = (dataset, func) => [d3.min(dataset, func), d3.max(dataset, func)];\n\n  const xScale = d3.scaleLinear()\n    .domain(getDomain(flatData, d => d.year)).nice()\n    .range([0, width]);\n\n  const yScale = d3.scaleLinear()\n    .domain(getDomain(flatData, d => d.value)).nice()\n    .range([height, 0]);\n\n  const xAxis = d3.axisBottom(xScale)\n    .tickFormat(d3.format('d'));\n  const yAxis = d3.axisLeft(yScale)\n    .tickFormat(d3.format('~s'));\n\n  const line = d3.line()\n    .x(d => xScale(d.year))\n    .y(d => yScale(d.value))\n    .curve(d3.curveMonotoneX);\n\n  // CLEAR OLD ELEMENTS\n\n  group.selectAll('.dots').remove();\n  group.selectAll('.line').remove();\n  group.select('.xAxis').remove();\n  group.select('.yAxis').remove();\n\n  // CREATE NEW ELEMENTS\n\n  group.append('g')\n    .attr('class', 'xAxis')\n    .attr('transform', `translate(0,${height})`)\n    .call(xAxis);\n\n  group.append('g')\n    .attr('class', 'yAxis')\n    .call(yAxis);\n\n  for (let i = 0; i < dataset.length; i++) {\n    const num = 6;\n    const color = d3.schemeRdYlGn[num][i % num];\n\n    group.append('path')\n      .datum(dataset[i])\n      .attr('stroke', color)\n      .attr('class', 'line')\n      .attr('d', line);\n\n    group.append('g')\n      .attr('class', 'dots')\n      .attr('fill', color)\n      .attr('stroke', color)\n      .selectAll().data(dataset[i])\n      .enter().append('circle')\n      .attr('cx', (d) => xScale(d.year))\n      .attr('cy', (d) => yScale(d.value))\n      .attr('r', 5);\n  }\n}\n","import * as d3 from 'd3';\nimport store from 'store';\nimport { createSVG } from '../helpers';\nimport lines from './lines';\n\nexport default {\n  draw: drawMap,\n  update: updateMap,\n};\n\nlet mapSVG;\n\nfunction mouseIn() { }\n\nfunction mouseOut() { }\n\nfunction contextMenu() {\n  console.log('right clicked...');\n}\n\nfunction selected(d) {\n  const selectedCountries = new Set(store.get('selectedCountries'));\n  selectedCountries.add(d.id);\n  store.set('selectedCountries', Array.from(selectedCountries));\n\n  updateMap();\n}\n\nexport function drawMap(id, width, height, data, population) {\n  mapSVG = createSVG(id, { width, height });\n  const countryPop = {};\n\n  population.forEach((d) => countryPop[d.id] = +d.population);\n\n  const color = d3.scaleThreshold()\n    .domain([10, 100, 500, 1000, 5000, 10000, 50000, 100000, 500000].map(n => n * 1000))\n    .range(d3.schemeBlues[9]);\n\n  const projection = d3.geoEquirectangular()\n    .scale(width / 4)\n    .translate([width / 2, height / 1.2]);\n\n  const path = d3.geoPath().projection(projection);\n  const zoom = d3.zoom()\n    .scaleExtent([0.6, 7])\n    .on('zoom', zoomed);\n\n  mapSVG.call(zoom);\n\n  const map = mapSVG.append('g').attr('class', 'countries');\n  map\n    .selectAll('path')\n    .data(data.features)\n    .enter().append('path')\n    .attr('id', (d) => d.id)\n    .attr('name', (d) => d.properties.name)\n    .attr('d', path)\n    .style('fill', (d) => color(countryPop[d.id]))\n    .on('click', selected)\n    .on('mouseover', mouseIn)\n    .on('mouseout', mouseOut)\n    .on('contextmenu', contextMenu)\n    .append('title').text(d => `${d.id}: ${d.properties.name}`);\n\n  function zoomed() {\n    map.selectAll('path')\n      .attr('transform', d3.event.transform);\n  }\n\n  updateMap();\n}\n\nexport function updateMap() {\n  const selectedCountries = store.get('selectedCountries') || [];\n  const num = 6;\n  const colors = d3.schemeRdYlGn[num];\n\n  d3.select('.selected').classed('selected', false);\n  selectedCountries.forEach((countryID, i) => {\n    d3.select('path#' + countryID)\n      .style('fill', colors[i % num])\n      .classed('selected', true);\n  });\n\n  lines.update();\n}\n","import store from 'store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { tsv, json } from 'd3-fetch';\n\nimport YearSlider from './components/YearSlider';\nimport CountrySelect from './components/CountrySelect';\nimport { chord, plot, lines, map } from './idioms';\n\nimport './index.css';\nimport './idioms.css';\n\n// STARTUP\n\nstore.remove('selectedCountries');\n\n// STATIC TEST DATA\n\nconst chordData = [\n  [16, 16, 13, 12, 0, 6],\n  [1, 0, 12, 10, 6, 1],\n  [9, 10, 13, 0, 5, 5],\n  [15, 1, 14, 16, 9, 16],\n  [5, 10, 16, 16, 10, 0],\n  [9, 8, 2, 13, 13, 9]\n];\n\nconst plotData = [\n  { 'name': 'A', 'x': 21, 'y': 110 },\n  { 'name': 'B', 'x': 22.8, 'y': 93 },\n  { 'name': 'C', 'x': 18.7, 'y': 175 },\n  { 'name': 'D', 'x': 14.3, 'y': 245 },\n  { 'name': 'E', 'x': 24.4, 'y': 62 },\n  { 'name': 'F', 'x': 14.7, 'y': 230 },\n  { 'name': 'G', 'x': 32.4, 'y': 66 },\n  { 'name': 'H', 'x': 30.4, 'y': 52 },\n  { 'name': 'I', 'x': 33.9, 'y': 65 },\n  { 'name': 'J', 'x': 15.5, 'y': 150 },\n  { 'name': 'K', 'x': 15.2, 'y': 150 },\n  { 'name': 'L', 'x': 13.3, 'y': 245 },\n  { 'name': 'M', 'x': 19.2, 'y': 175 },\n  { 'name': 'N', 'x': 27.3, 'y': 66 },\n  { 'name': 'O', 'x': 26, 'y': 91 },\n  { 'name': 'P', 'x': 30.4, 'y': 113 },\n  { 'name': 'Q', 'x': 15.8, 'y': 264 },\n  { 'name': 'R', 'x': 19.7, 'y': 175 },\n  { 'name': 'S', 'x': 15, 'y': 335 },\n  { 'name': 'T', 'x': 21.4, 'y': 109 }\n];\n\n// DYNAMIC REAL DATA\n\nconst years = [1990, 1995, 2000, 2005, 2010, 2015, 2017];\nPromise.all(years.map(year => tsv(`./data/migration/${year}.tsv`)))\n  .then(dataYearsList => {\n    const dataYears = {};\n    dataYearsList.forEach((yearData, i) => {\n      dataYears[years[i]] = {};\n      yearData.forEach(countryData => dataYears[years[i]][countryData.Country] = countryData);\n    });\n\n    //console.log(dataYears);\n\n    Promise.all([\n      json('./data/countries.json'),\n      tsv('./data/conversion.tsv'),\n      tsv('./data/population.tsv'),\n    ]).then((dataResults) => {\n      loadEverything(dataResults, dataYears);\n    });\n  });\n\nfunction loadEverything(data, dataYears) {\n  const [mapData, conversion, population] = data;\n  plot.draw('#plot', 600, 420, plotData);\n  lines.draw('#lines', 1000, 420, dataYears);\n  map.draw('#map', 1000, 420, mapData, population);\n  chord.draw('#chord', 600, 420, chordData);\n\n  // const codeToName = {};\n  // conversion.forEach(c => codeToName[c.code3] = c.name);\n  // store.set('codeToName', codeToName);\n\n  ReactDOM.render(getSelect(conversion), document.getElementById('countrySelect'));\n  ReactDOM.render(<YearSlider />, document.getElementById('yearSlider'));\n}\n\nfunction getSelect(conversion, value) {\n  return (\n    <CountrySelect\n      value={value}\n      countries={conversion}\n      onChange={countryChange} />\n  );\n}\n\nfunction countryChange(selection) {\n  const countries = new Set(store.get('selectedCountries'));\n  selection.forEach(el => countries.add(el.value));\n  store.set('selectedCountries', Array.from(countries));\n  map.update();\n}\n"],"sourceRoot":""}