{"version":3,"sources":["helpers.js","idioms.js","index.js"],"names":["makeSVG","id","width","height","select","append","attr","idioms","drawMap","data","population","svg","countryPop","forEach","d","color","d3","domain","map","n","range","projection","scale","translate","path","zoom","scaleExtent","on","selectAll","transform","call","features","enter","properties","name","style","classed","this","console","log","drawPlot","margin","top","right","bottom","left","x","nice","y","g","concat","remove","text","clone","iterations","arguments","length","undefined","nodes","points","node","fx","getAttribute","fy","labels","_ref","links","source","i","target","simulation","force","distanceMax","distance","stop","tick","_","each","a","Math","atan2","PI","drawChord","outerRadius","min","innerRadius","chords","padAngle","sortSubgroups","myChord","ribbon","radius","formatValue","arc","group","groups","index","darker","groupTick","step","k","endAngle","startAngle","value","angle","groupTicks","filter","drawLines","widthMain","heightMain","xScale","num","yScale","line","curve","dataset","datum","chordData","plotData","Promise","all","json","tsv","then","dataResults","_dataResults","Object","slicedToArray","countries"],"mappings":"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","file":"static/js/main.d47695f9.chunk.js","sourcesContent":["import { select } from 'd3';\n\nexport function makeSVG(id, width, height) {\n  return select(id).append('svg')\n    .attr('width', width)\n    .attr('height', height);\n}\n","import * as d3 from 'd3';\nimport { makeSVG } from './helpers';\n\nexport default {\n  drawMap: drawMap,\n  drawPlot: drawPlot,\n  drawChord: drawChord,\n  drawLines: drawLines,\n};\n\nexport function drawPlot(id, width, height, data) {\n  const svg = makeSVG(id, width, height);\n  const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n\n  const x = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.x)).nice()\n    .range([margin.left, width - margin.right]);\n\n  const y = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.y)).nice()\n    .range([height - margin.bottom, margin.top]);\n\n  function xAxis(g) {\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x))\n      .call(g => g.select('.domain').remove())\n      .call(g => g.append('text')\n        .attr('class', 'x-axis')\n        .attr('x', width - margin.right)\n        .attr('y', -4)\n        .text(data.x));\n  }\n\n  function yAxis(g) {\n    g\n      .attr('transform', `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y))\n      .call(g => g.select('.domain').remove())\n      .call(g => g.select('.tick:last-of-type text').clone()\n        .attr('class', 'y-axis')\n        .attr('x', 4)\n        .text(data.y));\n  }\n\n  function dodge(text, iterations = 300) {\n    const nodes = text.nodes();\n    const left = text => text.attr('text-anchor', 'start').attr('dy', '0.32em');\n    const right = text => text.attr('text-anchor', 'end').attr('dy', '0.32em');\n    const top = text => text.attr('text-anchor', 'middle').attr('dy', '0.0em');\n    const bottom = text => text.attr('text-anchor', 'middle').attr('dy', '0.8em');\n    const points = nodes.map(node => ({ fx: +node.getAttribute('x'), fy: +node.getAttribute('y') }));\n    const labels = points.map(({ fx, fy }) => ({ x: fx, y: fy }));\n    const links = points.map((source, i) => ({ source, target: labels[i] }));\n\n    const simulation = d3.forceSimulation(points.concat(labels))\n      .force('charge', d3.forceManyBody().distanceMax(80))\n      .force('link', d3.forceLink(links).distance(4).iterations(4))\n      .stop();\n\n    for (let i = 0; i < iterations; ++i) simulation.tick();\n\n    text\n      .attr('x', (_, i) => labels[i].x)\n      .attr('y', (_, i) => labels[i].y)\n      .each(function (_, i) {\n        const a = Math.atan2(labels[i].y - points[i].fy, labels[i].x - points[i].fx);\n        d3.select(this).call(\n          a > Math.PI / 4 && a <= Math.PI * 3 / 4 ? bottom\n            : a > -Math.PI / 4 && a <= Math.PI / 4 ? left\n              : a > -Math.PI * 3 / 4 && a <= Math.PI * 3 / 4 ? top\n                : right);\n      });\n  }\n\n  svg.append('g').attr('class', 'axis-x').call(xAxis);\n  svg.append('g').attr('class', 'axis-y').call(yAxis);\n\n  svg.append('g')\n    .attr('class', 'circles')\n    .selectAll('circle')\n    .data(data)\n    .enter().append('circle')\n    .attr('cx', d => x(d.x))\n    .attr('cy', d => y(d.y))\n    .attr('r', 4);\n\n  svg.append('g')\n    .attr('class', 'text')\n    .selectAll('text')\n    .data(data)\n    .enter().append('text')\n    .attr('x', d => x(d.x))\n    .attr('y', d => y(d.y))\n    .text(d => d.name)\n    .call(dodge);\n}\n\nexport function drawLines(id, widthMain, heightMain) {\n  const svg = makeSVG(id, widthMain, heightMain);\n\n  const\n    margin = { top: 50, right: 50, bottom: 50, left: 50 },\n    width = widthMain - margin.left - margin.right,\n    height = heightMain - margin.top - margin.bottom;\n\n  const num = 21; // The number of datapoints\n\n  const xScale = d3.scaleLinear()\n    .domain([0, num - 1])\n    .range([0, width]);\n\n  const yScale = d3.scaleLinear()\n    .domain([0, 1])\n    .range([height, 0]);\n\n  const line = d3.line()\n    .x((_, i) => xScale(i))\n    .y((d) => yScale(d.y))\n    .curve(d3.curveMonotoneX);\n\n\n  const dataset = d3.range(num).map(() => { return { 'y': d3.randomUniform(1)() }; });\n\n  svg\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', `translate(${margin.left},${margin.top})`);\n\n  svg.append('g')\n    .attr('transform', `translate(0,${height})`)\n    .call(d3.axisBottom(xScale));\n\n  svg.append('g')\n    .call(d3.axisLeft(yScale));\n\n  svg.append('path')\n    .datum(dataset)\n    .attr('class', 'line')\n    .attr('d', line);\n\n  svg.append('g').attr('class', 'dots').selectAll()\n    .data(dataset)\n    .enter().append('circle')\n    .attr('cx', (d, i) => xScale(i))\n    .attr('cy', (d) => yScale(d.y))\n    .attr('r', 5);\n}\n\nexport function drawMap(id, width, height, data, population) {\n  const svg = makeSVG(id, width, height);\n  const countryPop = {};\n\n  population.forEach((d) => countryPop[d.id] = +d.population);\n\n  const color = d3.scaleThreshold()\n    .domain([10, 100, 500, 1000, 5000, 10000, 50000, 100000, 500000, 1500000].map(n => n * 1000))\n    .range(['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b', '#03132b']);\n\n  const projection = d3.geoMercator()\n    .scale(width / 4)\n    .translate([width / 2, height / 1.2]);\n\n  const path = d3.geoPath().projection(projection);\n  const zoom = d3.zoom()\n    .scaleExtent([1, 6])\n    .on('zoom', zoomed);\n\n  svg.call(zoom);\n\n  const map = svg.append('g').attr('class', 'countries');\n  map\n    .selectAll('path')\n    .data(data.features)\n    .enter().append('path')\n    .attr('id', (d) => d.id)\n    .attr('name', (d) => d.properties.name)\n    .attr('d', path)\n    .style('fill', (d) => color(countryPop[d.id]))\n    .on('click', selected)\n    .on('mouseover', mouseIn)\n    .on('mouseout', mouseOut)\n    .on('contextmenu', test);\n\n  function selected(d) {\n    d3.select('.selected').classed('selected', false);\n    d3.select(this).classed('selected', true);\n  }\n\n  function mouseIn(d) {\n\n  }\n\n  function mouseOut(d) {\n\n  }\n\n  function test(d) {\n    console.log('right clicked...');\n  }\n\n  function zoomed() {\n    map.selectAll('path')\n      .attr('transform', d3.event.transform);\n  }\n\n}\n\nexport function drawChord(id, width, height, data) {\n  const svg = makeSVG(id, width, height);\n\n  function groupTicks(d, step) {\n    const k = (d.endAngle - d.startAngle) / d.value;\n    return d3.range(0, d.value, step).map(value => {\n      return { value: value, angle: value * k + d.startAngle };\n    });\n  }\n\n  const\n    outerRadius = Math.min(width, height) * 0.5 - 30,\n    innerRadius = outerRadius - 20;\n\n  svg\n    .attr('viewBox', [-width / 2, -height / 2, width, height])\n    .attr('font-size', 10)\n    .attr('font-family', 'sans-serif');\n\n  const myChord = d3.chord().padAngle(0.05).sortSubgroups(d3.descending);\n\n  const chords = myChord(data);\n  const ribbon = d3.ribbon().radius(innerRadius);\n\n  const formatValue = d3.formatPrefix(',.0', 1e3);\n  const color = d3.scaleOrdinal()\n    .domain(d3.range(4))\n    .range(['#000000', '#FFDD89', '#957244', '#F26223']);\n\n  const arc = d3.arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\n\n  const group = svg.append('g')\n    .selectAll('g')\n    .data(chords.groups)\n    .enter().append('g');\n\n  group.append('path')\n    .attr('fill', d => color(d.index))\n    .attr('stroke', d => d3.rgb(color(d.index)).darker())\n    .attr('d', arc);\n\n  const groupTick = group.append('g')\n    .selectAll('g')\n    .data(d => groupTicks(d, 1e3))\n    .enter().append('g')\n    .attr('transform', d => `rotate(${d.angle * 180 / Math.PI - 90}) translate(${outerRadius},0)`);\n\n  groupTick.append('line')\n    .attr('stroke', '#000')\n    .attr('x2', 6);\n\n  groupTick\n    .filter(d => d.value % 5e3 === 0)\n    .append('text')\n    .attr('x', 8)\n    .attr('dy', '.35em')\n    .attr('transform', d => d.angle > Math.PI ? 'rotate(180) translate(-16)' : null)\n    .attr('text-anchor', d => d.angle > Math.PI ? 'end' : null)\n    .text(d => formatValue(d.value));\n\n  svg.append('g')\n    .attr('fill-opacity', 0.67)\n    .selectAll('path')\n    .data(chords)\n    .enter().append('path')\n    .attr('d', ribbon)\n    .attr('fill', d => color(d.target.index))\n    .attr('stroke', d => d3.rgb(color(d.target.index)).darker());\n\n}\n","/*\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nReactDOM.render(<App />, document.getElementById('root'));\n*/\n\nimport { tsv, json } from 'd3-fetch';\nimport idioms from './idioms';\nimport './index.css';\nimport './idioms.css';\n\n// FETCH DATA AND DRAW\n\nconst chordData = [\n  [19, 11, 19, 14, 15, 14, 13, 17],\n  [5, 9, 5, 13, 0, 16, 2, 9],\n  [12, 18, 12, 2, 1, 6, 13, 8],\n  [11, 12, 18, 5, 19, 6, 16, 18],\n  [19, 20, 17, 7, 16, 5, 9, 12],\n  [13, 18, 15, 6, 12, 14, 11, 7],\n  [10, 5, 0, 19, 18, 1, 1, 5],\n  [20, 10, 7, 7, 13, 6, 1, 20]];\n\nconst plotData = [\n  { 'name': 'Mazda', 'x': 21, 'y': 110 },\n  { 'name': 'Datsun', 'x': 22.8, 'y': 93 },\n  { 'name': 'Hornet', 'x': 18.7, 'y': 175 },\n  { 'name': 'Duster', 'x': 14.3, 'y': 245 },\n  { 'name': 'Merc', 'x': 24.4, 'y': 62 },\n  { 'name': 'Chrysler', 'x': 14.7, 'y': 230 },\n  { 'name': 'Fiat', 'x': 32.4, 'y': 66 },\n  { 'name': 'Honda', 'x': 30.4, 'y': 52 },\n  { 'name': 'Toyota', 'x': 33.9, 'y': 65 },\n  { 'name': 'Dodge', 'x': 15.5, 'y': 150 },\n  { 'name': 'AMC', 'x': 15.2, 'y': 150 },\n  { 'name': 'Camaro', 'x': 13.3, 'y': 245 },\n  { 'name': 'Pontiac', 'x': 19.2, 'y': 175 },\n  { 'name': 'Fiat-9', 'x': 27.3, 'y': 66 },\n  { 'name': 'Porsche-2', 'x': 26, 'y': 91 },\n  { 'name': 'Lotus', 'x': 30.4, 'y': 113 },\n  { 'name': 'Ford L', 'x': 15.8, 'y': 264 },\n  { 'name': 'Ferrari', 'x': 19.7, 'y': 175 },\n  { 'name': 'Maserati', 'x': 15, 'y': 335 },\n  { 'name': 'Volvo', 'x': 21.4, 'y': 109 }];\n\nplotData.x = 'Miles per gallon';\nplotData.y = 'Horsepower';\n\nPromise.all([\n  json('./data/countries.json'),\n  tsv('./data/population.tsv'),\n]).then((dataResults) => {\n  const [countries, population] = dataResults;\n  idioms.drawPlot('#plot', 860, 420, plotData);\n  idioms.drawLines('#lines', 860, 420);\n  idioms.drawMap('#map', 860, 420, countries, population);\n  idioms.drawChord('#chord', 600, 420, chordData);\n});\n\n// UPDATE DATA HANDLERS\n"],"sourceRoot":""}