{"version":3,"sources":["helpers.js","idioms/chord.js","idioms/plot.js","idioms/lines.js","idioms/map.js","components/YearSlider.js","components/CountrySelect.js","components/MigrationSwitch.js","index.js"],"names":["filterNaN","obj","res","key","isNaN","Number","createSVG","id","dims","arguments","length","undefined","width","height","margins","svg","select","append","attr","concat","left","top","chordSVG","chord","draw","data","outerRadius","Math","min","innerRadius","chords","d3","padAngle","sortSubgroups","myChord","ribbon","radius","formatValue","color","domain","range","arc","group","selectAll","groups","enter","d","index","darker","groupTick","step","k","endAngle","startAngle","value","map","angle","groupTicks","PI","filter","text","target","update","plotSVG","plot","margin","right","bottom","x","nice","y","call","g","remove","clone","name","iterations","nodes","points","node","fx","getAttribute","fy","labels","_ref","links","source","i","simulation","force","distanceMax","distance","stop","tick","_","each","a","atan2","this","svgDims","migrationData","populationData","lines","pop","updateLines","dataset","countries","store","get","isEmigration","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","c","country","year","dataYear","migrants","push","err","return","loadDataset","flatData","reduce","acc","getDomain","func","xScale","yScale","xAxis","tickFormat","yAxis","line","curve","datum","mapSVG","idioms_map","topology","population","projection","scale","translate","path","zoom","scaleExtent","on","transform","features","properties","clicked","mouseIn","mouseOut","contextMenu","updateMap","preventDefault","selectedCountries","Set","delete","set","Array","from","add","n","colors","console","log","classed","forEach","countryID","style","yearRange","marks","1990","1995","2000","2005","2010","2015","2017","yearChange","params","YearSlider","react_default","createElement","padding","es","Range","max","onChange","defaultValue","React","PureComponent","CountrySelect","props","options","sort","b","label","react_select_esm","Object","assign","isMulti","placeholder","components","makeAnimated","onBlurResetsInput","onSelectResetsInput","onCloseResetsInput","theme","objectSpread","borderRadius","neutral0","neutral5","neutral10","neutral20","primary25","neutral50","neutral80","MigrationSwitch","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","checked","handleChange","bind","assertThisInitialized","setState","react_switch_default","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","Component","chordData","plotData","years","countryChange","selection","el","Promise","all","tsv","then","dataYearsList","dataYears","yearData","countryData","Country","json","dataResults","_data","slicedToArray","conversion","whrData","countryPop","countryWHR","codeToName","code3","ReactDOM","render","keys","CountrySelect_CountrySelect","getSelect","document","getElementById","MigrationSwitch_MigrationSwitch","YearSlider_YearSlider","loadEverything"],"mappings":"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","file":"static/js/main.1f71837c.chunk.js","sourcesContent":["import { select } from 'd3';\n\nexport function tryNumber(value) {\n  return Number(value) || value;\n}\n\nexport function filterNaN(obj) {\n  const res = {};\n\n  for (const key in obj) {\n    if (!isNaN(obj[key])) {\n      res[key] = Number(obj[key]);\n    }\n  }\n\n  return res;\n}\n\nexport function createSVG(id, dims = { width: 400, height: 400 }, margins) {\n  const svg = select(id).append('svg')\n    .attr('width', dims.width)\n    .attr('height', dims.height);\n\n  if (margins !== undefined) {\n    const group = svg.append('g')\n      .attr('class', 'main')\n      .attr('transform', `translate(${margins.left || 0},${margins.top || 0})`);\n    return group;\n  }\n\n  return svg;\n}\n","import * as d3 from 'd3';\nimport { createSVG } from '../helpers';\n\nexport default {\n  draw: drawChord,\n  update: updateChord,\n};\n\nlet chordSVG;\n\nexport function drawChord(id, width, height, data) {\n  chordSVG = createSVG(id, { width, height });\n\n  function groupTicks(d, step) {\n    const k = (d.endAngle - d.startAngle) / d.value;\n    return d3.range(0, d.value, step).map(value => {\n      return { value: value, angle: value * k + d.startAngle };\n    });\n  }\n\n  const\n    outerRadius = Math.min(width, height) * 0.5 - 30,\n    innerRadius = outerRadius - 20;\n\n  chordSVG\n    .attr('viewBox', [-width / 2, -height / 2, width, height])\n    .attr('font-size', 10)\n    .attr('font-family', 'sans-serif');\n\n  const myChord = d3.chord().padAngle(0.05).sortSubgroups(d3.descending);\n\n  const chords = myChord(data);\n  const ribbon = d3.ribbon().radius(innerRadius);\n\n  const formatValue = d3.formatPrefix(',.0', 1e3);\n  const color = d3.scaleOrdinal()\n    .domain(d3.range(4))\n    .range(['#c6dbef', '#6baed6', '#2171b5', '#08306b']);\n\n  const arc = d3.arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\n\n  const group = chordSVG.append('g')\n    .selectAll('g')\n    .data(chords.groups)\n    .enter().append('g');\n\n  group.append('path')\n    .attr('fill', d => color(d.index))\n    .attr('stroke', d => d3.rgb(color(d.index)).darker())\n    .attr('d', arc);\n\n  const groupTick = group.append('g')\n    .selectAll('g')\n    .data(d => groupTicks(d, 1e3))\n    .enter().append('g')\n    .attr('transform', d => `rotate(${d.angle * 180 / Math.PI - 90}) translate(${outerRadius},0)`);\n\n  groupTick.append('line')\n    .attr('stroke', '#000')\n    .attr('x2', 6);\n\n  groupTick\n    .filter(d => d.value % 5e3 === 0)\n    .append('text')\n    .attr('x', 8)\n    .attr('dy', '.35em')\n    .attr('transform', d => d.angle > Math.PI ? 'rotate(180) translate(-16)' : null)\n    .attr('text-anchor', d => d.angle > Math.PI ? 'end' : null)\n    .text(d => formatValue(d.value));\n\n  chordSVG.append('g')\n    .attr('fill-opacity', 0.67)\n    .selectAll('path')\n    .data(chords)\n    .enter().append('path')\n    .attr('d', ribbon)\n    .attr('fill', d => color(d.target.index))\n    .attr('stroke', d => d3.rgb(color(d.target.index)).darker());\n}\n\nexport function updateChord(id, data) {\n\n}\n","import * as d3 from 'd3';\nimport { createSVG } from '../helpers';\n\nexport default {\n  draw: drawPlot,\n  update: updatePlot,\n};\n\nlet plotSVG;\n\nexport function drawPlot(id, width, height, data) {\n  plotSVG = createSVG(id, { width, height });\n  const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n\n  const x = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.x)).nice()\n    .range([margin.left, width - margin.right]);\n\n  const y = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.y)).nice()\n    .range([height - margin.bottom, margin.top]);\n\n  function xAxis(g) {\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x))\n      .call(g => g.select('.domain').remove());\n  }\n\n  function yAxis(g) {\n    g\n      .attr('transform', `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y))\n      .call(g => g.select('.domain').remove())\n      .call(g => g.select('.tick:last-of-type text').clone());\n  }\n\n  function dodge(text, iterations = 300) {\n    const nodes = text.nodes();\n    const left = text => text.attr('text-anchor', 'start').attr('dy', '0.32em');\n    const right = text => text.attr('text-anchor', 'end').attr('dy', '0.32em');\n    const top = text => text.attr('text-anchor', 'middle').attr('dy', '0.0em');\n    const bottom = text => text.attr('text-anchor', 'middle').attr('dy', '0.8em');\n    const points = nodes.map(node => ({ fx: +node.getAttribute('x'), fy: +node.getAttribute('y') }));\n    const labels = points.map(({ fx, fy }) => ({ x: fx, y: fy }));\n    const links = points.map((source, i) => ({ source, target: labels[i] }));\n\n    const simulation = d3.forceSimulation(points.concat(labels))\n      .force('charge', d3.forceManyBody().distanceMax(80))\n      .force('link', d3.forceLink(links).distance(4).iterations(4))\n      .stop();\n\n    for (let i = 0; i < iterations; ++i) simulation.tick();\n\n    text\n      .attr('x', (_, i) => labels[i].x)\n      .attr('y', (_, i) => labels[i].y)\n      .each(function (_, i) {\n        const a = Math.atan2(labels[i].y - points[i].fy, labels[i].x - points[i].fx);\n        d3.select(this).call(\n          a > Math.PI / 4 && a <= Math.PI * 3 / 4 ? bottom\n            : a > -Math.PI / 4 && a <= Math.PI / 4 ? left\n              : a > -Math.PI * 3 / 4 && a <= Math.PI * 3 / 4 ? top\n                : right);\n      });\n  }\n\n  plotSVG.append('g').attr('class', 'axis-x').call(xAxis);\n  plotSVG.append('g').attr('class', 'axis-y').call(yAxis);\n\n  plotSVG.append('g')\n    .attr('class', 'circles')\n    .selectAll('circle')\n    .data(data)\n    .enter().append('circle')\n    .attr('cx', d => x(d.x))\n    .attr('cy', d => y(d.y))\n    .attr('r', 4);\n\n  plotSVG.append('g')\n    .attr('class', 'text')\n    .selectAll('text')\n    .data(data)\n    .enter().append('text')\n    .attr('x', d => x(d.x))\n    .attr('y', d => y(d.y))\n    .text(d => d.name)\n    .call(dodge);\n}\n\nexport function updatePlot(id, data) {\n\n}\n","import * as d3 from 'd3';\nimport store from 'store';\nimport { createSVG } from '../helpers';\n\nexport default {\n  draw: drawLines,\n  update: updateLines,\n};\n\nlet group;\nlet svgDims;\nlet migrationData;\nlet populationData;\n\nconst margin = { top: 10, right: 20, bottom: 20, left: 40 };\n\nfunction loadDataset() {\n  const dataset = [];\n  const countries = store.get('selectedCountries');\n  if (!countries || countries.length === 0) return [];\n\n  const isEmigration = store.get('isEmigration');\n\n  for (let c of countries) {\n    const country = [];\n    for (let year in migrationData) {\n      const dataYear = migrationData[year];\n      if (dataYear[c] === undefined) continue; // no data\n\n      const migrants = Number(isEmigration ? dataYear['WORLD'][c] : dataYear[c]['Total']);\n      const pop = populationData[c][year] * 1000;\n      const data = migrants /*/ pop*/;\n\n      country.push({ year: Number(year), value: Number(data) });\n    }\n    dataset.push(country);\n  }\n\n  return dataset;\n}\n\nexport function drawLines(id, width, height, data, pop) {\n  svgDims = { width, height };\n  group = createSVG(id, { width, height }, margin);\n  migrationData = data;\n  populationData = pop;\n\n  updateLines(width, height);\n}\n\nexport function updateLines() {\n  const\n    width = svgDims.width - margin.left - margin.right,\n    height = svgDims.height - margin.top - margin.bottom;\n\n  const dataset = loadDataset();\n\n  const flatData = dataset.reduce((acc, d) => acc.concat(d), []);\n  const getDomain = (dataset, func) => [d3.min(dataset, func), d3.max(dataset, func)];\n\n  const xScale = d3.scaleLinear()\n    .domain(getDomain(flatData, d => d.year)).nice()\n    .range([0, width]);\n\n  const yScale = d3.scaleLinear()\n    .domain(getDomain(flatData, d => d.value)).nice()\n    .range([height, 0]);\n\n  const xAxis = d3.axisBottom(xScale)\n    .tickFormat(d3.format('d'));\n  const yAxis = d3.axisLeft(yScale)\n    .tickFormat(d3.format('~s'));\n\n  const line = d3.line()\n    .x(d => xScale(d.year))\n    .y(d => yScale(d.value))\n    .curve(d3.curveMonotoneX);\n\n  // CLEAR OLD ELEMENTS\n\n  group.selectAll('.dots').remove();\n  group.selectAll('.line').remove();\n  group.select('.xAxis').remove();\n  group.select('.yAxis').remove();\n\n  // CREATE NEW ELEMENTS\n\n  group.append('g')\n    .attr('class', 'xAxis')\n    .attr('transform', `translate(0,${height})`)\n    .call(xAxis);\n\n  group.append('g')\n    .attr('class', 'yAxis')\n    .call(yAxis);\n\n  for (let i = 0; i < dataset.length; i++) {\n    const num = 6;\n    const color = d3.schemeRdYlGn[num][i % num];\n\n    group.append('path')\n      .datum(dataset[i])\n      .attr('stroke', color)\n      .attr('class', 'line')\n      .attr('d', line);\n\n    group.append('g')\n      .attr('class', 'dots')\n      .attr('fill', color)\n      .attr('stroke', color)\n      .selectAll().data(dataset[i])\n      .enter().append('circle')\n      .attr('cx', (d) => xScale(d.year))\n      .attr('cy', (d) => yScale(d.value))\n      .attr('r', 5);\n  }\n}\n","import * as d3 from 'd3';\nimport store from 'store';\nimport { createSVG } from '../helpers';\nimport lines from './lines';\n\nexport default {\n  draw: drawMap,\n  update: updateMap,\n};\n\nlet mapSVG;\nlet migrationData;\nlet populationData;\n\nfunction mouseIn() { }\n\nfunction mouseOut() { }\n\nfunction contextMenu(d) {\n  d3.event.preventDefault();\n\n  const selectedCountries = new Set(store.get('selectedCountries'));\n  selectedCountries.delete(d.id);\n  store.set('selectedCountries', Array.from(selectedCountries));\n\n  updateMap();\n}\n\nfunction clicked(d) {\n  const selectedCountries = new Set(store.get('selectedCountries'));\n  selectedCountries.add(d.id);\n  store.set('selectedCountries', Array.from(selectedCountries));\n\n  updateMap();\n}\n\nconst color = d3.scaleThreshold()\n  .domain([1, 10, 100, 250, 500, 1000, 2500, 5000, 10000].map(n => n * 1000))\n  .range(d3.schemeBlues[9]);\n\nexport function drawMap(id, width, height, topology, data, population) {\n  mapSVG = createSVG(id, { width, height });\n\n  migrationData = data;\n  populationData = population;\n\n  const projection = d3.geoEquirectangular()\n    .scale(width / 4)\n    .translate([width / 2, height / 1.2]);\n\n  const path = d3.geoPath().projection(projection);\n  const zoom = d3.zoom()\n    .scaleExtent([0.6, 7])\n    .on('zoom', zoomed);\n\n  mapSVG.call(zoom);\n\n  const map = mapSVG.append('g').attr('class', 'countries');\n  map\n    .selectAll('path')\n    .data(topology.features)\n    .enter().append('path')\n    .attr('id', (d) => d.id)\n    .attr('name', (d) => d.properties.name)\n    .attr('d', path)\n    .on('click', clicked)\n    .on('mouseover', mouseIn)\n    .on('mouseout', mouseOut)\n    .on('contextmenu', contextMenu)\n    .append('title').text(d => `${d.id}: ${d.properties.name}`);\n\n  function zoomed() {\n    map.selectAll('path')\n      .attr('transform', d3.event.transform);\n  }\n\n  updateMap();\n}\n\nexport function updateMap() {\n  const selectedCountries = store.get('selectedCountries') || [];\n  const num = 6;\n  const colors = d3.schemeRdYlGn[num];\n\n  console.log(selectedCountries);\n\n  d3.selectAll('.selected').classed('selected', false);\n  selectedCountries.forEach((countryID, i) => {\n    d3.select('path#' + countryID)\n      .style('fill', colors[i % num])\n      .classed('selected', true);\n  });\n\n  const yearRange = store.get('years');\n  const year = yearRange ? yearRange[0] : 1990;\n  const isEmigration = store.get('isEmigration');\n\n  mapSVG.selectAll('path:not(.selected)')\n    //.transition().duration(600)\n    .style('fill', (d) => {\n      const dataYear = migrationData[year];\n      if (dataYear[d.id] === undefined) return 'black'; // no data\n      const migrants = Number(isEmigration ? dataYear['WORLD'][d.id] : dataYear[d.id]['Total']);\n      return color(migrants);\n    });\n\n  lines.update();\n}\n","import React from 'react';\nimport store from 'store';\nimport Slider from 'rc-slider';\nimport { map } from '../idioms';\n\nimport 'rc-slider/assets/index.css';\n\nconst marks = {\n  1990: '1990',\n  1995: '1995',\n  2000: '2000',\n  2005: '2005',\n  2010: '2010',\n  2015: '2015',\n  2017: '2017',\n};\n\nfunction yearChange(params) {\n  console.log(params);\n  store.set('years', params);\n  map.update();\n}\n\nexport default class YearSlider extends React.PureComponent {\n  render() {\n    const style = { padding: '0.6em 2em 0' };\n\n    return (\n      <div style={style}>\n        <Slider.Range\n          min={1990}\n          max={2017}\n          marks={marks}\n          step={null}\n          onChange={yearChange}\n          defaultValue={[2005, 2015]} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/lib/animated';\n\nexport default class CountrySelect extends React.PureComponent {\n  render() {\n    const { countries } = this.props;\n    console.log(countries);\n\n    const options = countries.sort((a, b) => a.label < b.label ? -1 : 1);\n\n    console.log(options);\n\n\n    return (\n      <Select isMulti\n        placeholder={'Select countries...'}\n        components={makeAnimated}\n        onBlurResetsInput={false}\n        onSelectResetsInput={false}\n        onCloseResetsInput={false}\n        options={options}\n        theme={(theme) => ({\n          ...theme,\n          borderRadius: 0,\n          colors: {\n            ...theme.colors,\n            neutral0: '#333',\n            neutral5: 'orange',\n            neutral10: '#666',\n            neutral20: '#666',\n            primary25: '#666',\n            neutral50: '#eee',\n            neutral80: 'white'\n          }\n        })}\n        {...this.props}\n      />);\n  }\n}\n","import React from 'react';\nimport store from 'store';\nimport Switch from 'react-switch';\n\nimport { lines, map } from '../idioms';\n\nexport default class MigrationSwitch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { checked: false };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(checked) {\n    store.set('isEmigration', checked);\n    this.setState({ checked });\n\n    map.update();\n    lines.update();\n  }\n\n  render() {\n    const { checked } = this.state;\n\n    return (\n      <div>\n        <Switch\n          onChange={this.handleChange}\n          checked={checked}\n          onColor=\"#86d3ff\"\n          onHandleColor=\"#2693e6\"\n          handleDiameter={24}\n          uncheckedIcon={false}\n          checkedIcon={false}\n          boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n          activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n          height={16}\n          width={64}\n          id={'mySwitcherino'}\n        />\n        <span>{checked ? 'Emigration' : 'Immigration'}</span>\n      </div>\n    );\n  }\n}\n","import store from 'store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { tsv, json } from 'd3-fetch';\n\nimport YearSlider from './components/YearSlider';\nimport CountrySelect from './components/CountrySelect';\nimport MigrationSwitch from './components/MigrationSwitch';\nimport { chord, plot, lines, map } from './idioms';\nimport { filterNaN } from './helpers';\n\nimport './index.css';\nimport './idioms.css';\n\n// STARTUP\n\nstore.remove('selectedCountries');\nstore.remove('isEmigration');\n\n// STATIC TEST DATA\n\nconst chordData = [\n  [16, 16, 13, 12, 0, 6],\n  [1, 0, 12, 10, 6, 1],\n  [9, 10, 13, 0, 5, 5],\n  [15, 1, 14, 16, 9, 16],\n  [5, 10, 16, 16, 10, 0],\n  [9, 8, 2, 13, 13, 9]\n];\n\nconst plotData = [\n  { 'name': 'A', 'x': 21, 'y': 110 },\n  { 'name': 'B', 'x': 22.8, 'y': 93 },\n  { 'name': 'C', 'x': 18.7, 'y': 175 },\n  { 'name': 'D', 'x': 14.3, 'y': 245 },\n  { 'name': 'E', 'x': 24.4, 'y': 62 },\n  { 'name': 'F', 'x': 14.7, 'y': 230 },\n  { 'name': 'G', 'x': 32.4, 'y': 66 },\n  { 'name': 'H', 'x': 30.4, 'y': 52 },\n  { 'name': 'I', 'x': 33.9, 'y': 65 },\n  { 'name': 'J', 'x': 15.5, 'y': 150 },\n  { 'name': 'K', 'x': 15.2, 'y': 150 },\n  { 'name': 'L', 'x': 13.3, 'y': 245 },\n  { 'name': 'M', 'x': 19.2, 'y': 175 },\n  { 'name': 'N', 'x': 27.3, 'y': 66 },\n  { 'name': 'O', 'x': 26, 'y': 91 },\n  { 'name': 'P', 'x': 30.4, 'y': 113 },\n  { 'name': 'Q', 'x': 15.8, 'y': 264 },\n  { 'name': 'R', 'x': 19.7, 'y': 175 },\n  { 'name': 'S', 'x': 15, 'y': 335 },\n  { 'name': 'T', 'x': 21.4, 'y': 109 }\n];\n\n// DYNAMIC REAL DATA\n\nconst years = [1990, 1995, 2000, 2005, 2010, 2015, 2017];\nPromise.all(years.map(year => tsv(`./data/migration/${year}.tsv`)))\n  .then(dataYearsList => {\n    const dataYears = {};\n    dataYearsList.forEach((yearData, i) => {\n      dataYears[years[i]] = {};\n      yearData.forEach(countryData => dataYears[years[i]][countryData.Country] = countryData);\n    });\n\n    Promise.all([\n      json('./data/topology.json'),\n      tsv('./data/conversion.tsv'),\n      tsv('./data/population.tsv'),\n      tsv('./data/whr2017.tsv'),\n    ]).then((dataResults) => {\n      loadEverything(dataResults, dataYears);\n    });\n  });\n\nfunction loadEverything(data, dataYears) {\n  const [topology, conversion, population, whrData] = data;\n\n  console.log(dataYears);\n\n\n  const countryPop = {};\n  const countryWHR = {};\n  population.forEach((c) => countryPop[c.Country] = filterNaN(c));\n  whrData.forEach((c) => countryWHR[c.country] = filterNaN(c));\n\n  plot.draw('#plot', 600, 420, plotData);\n  lines.draw('#lines', 1000, 420, dataYears, countryPop);\n  map.draw('#map', 1000, 420, topology, dataYears, countryPop);\n  chord.draw('#chord', 600, 420, chordData);\n\n  const codeToName = {};\n  conversion.forEach(c => codeToName[c.code3] = c.name);\n  //store.set('codeToName', codeToName);\n\n  ReactDOM.render(getSelect(dataYears, codeToName), document.getElementById('countrySelect'));\n  ReactDOM.render(<MigrationSwitch />, document.getElementById('migrationSwitch'));\n  ReactDOM.render(<YearSlider />, document.getElementById('yearSlider'));\n}\n\nfunction getSelect(data, codeToName, value) {\n  const countries = [];\n  Object.keys(data[1990]).forEach(key => {\n    if (key.length === 3) {\n      countries.push({ value: key, label: codeToName[key], /*group: c.region*/ });\n    }\n  });\n\n  return (\n    <CountrySelect\n      value={value}\n      countries={countries}\n      onChange={countryChange} />\n  );\n}\n\nfunction countryChange(selection) {\n  const countries = new Set(store.get('selectedCountries'));\n  selection.forEach(el => countries.add(el.value));\n  store.set('selectedCountries', Array.from(countries));\n  map.update();\n}\n"],"sourceRoot":""}