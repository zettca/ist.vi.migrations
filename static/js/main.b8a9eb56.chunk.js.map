{"version":3,"sources":["components/YearSlider.js","components/CountrySelect.js","helpers.js","idioms/chord.js","idioms/plot.js","idioms/lines.js","idioms/map.js","index.js"],"names":["marks","1990","1995","2000","2005","2010","2015","2017","yearChange","params","console","log","YearSlider","react_default","a","createElement","style","padding","es","Range","min","max","step","onChange","defaultValue","React","PureComponent","CountrySelect","options","this","props","countries","map","c","value","code3","label","name","group","region","react_select_esm","Object","assign","isMulti","placeholder","createSVG","id","dims","arguments","length","undefined","width","height","margins","el","select","append","attr","concat","left","top","chordSVG","chord","draw","data","outerRadius","Math","innerRadius","chords","d3","padAngle","sortSubgroups","myChord","ribbon","radius","formatValue","color","domain","range","arc","selectAll","groups","enter","d","index","darker","groupTick","k","endAngle","startAngle","angle","groupTicks","PI","filter","text","target","update","plotSVG","plot","margin","right","bottom","x","nice","y","call","g","remove","clone","iterations","nodes","points","node","fx","getAttribute","fy","labels","_ref","links","source","i","simulation","force","distanceMax","distance","stop","tick","_","each","atan2","linesSVG","dataYears","lines","width2","height2","dataset","countryID","store","get","year","yearData","push","Date","Number","xScale","yScale","line","curve","tickFormat","datum","transition","duration","mapSVG","idioms_map","population","countryPop","forEach","n","projection","scale","translate","path","zoom","scaleExtent","on","transform","features","properties","selected","classed","set","chordData","plotData","years","handleCountrySelection","Promise","all","tsv","then","dataYearsList","countryData","Country","json","dataResults","_data","slicedToArray","mapData","conversion","CountrySelect_CountrySelect","slider","YearSlider_YearSlider","ReactDOM","render","document","getElementById","loadEverything"],"mappings":"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","file":"static/js/main.b8a9eb56.chunk.js","sourcesContent":["import React from 'react';\nimport Slider from 'rc-slider';\n\nimport 'rc-slider/assets/index.css';\n\nconst marks = {\n  1990: '1990',\n  1995: '1995',\n  2000: '2000',\n  2005: '2005',\n  2010: '2010',\n  2015: '2015',\n  2017: '2017',\n};\n\nfunction yearChange(params) {\n  console.log(params);\n}\n\nexport default class YearSlider extends React.PureComponent {\n  render() {\n    const style = { padding: '0.4em 4em 1em' };\n\n    return (\n      <div style={style}>\n        <Slider.Range\n          min={1990}\n          max={2017}\n          marks={marks}\n          step={null}\n          onChange={yearChange}\n          defaultValue={[2005, 2015]} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\n\n\nexport default class CountrySelect extends React.PureComponent {\n  render() {\n    const { countries } = this.props;\n    const options = countries.map((c) => {\n      return { value: c.code3, label: c.name, group: c.region };\n    });\n\n    return (\n      <Select isMulti\n        placeholder={'Select countries...'}\n        options={options}\n        {...this.props}\n      />);\n  }\n}\n","import { select } from 'd3';\n\nexport function createSVG(id, dims = { width: 400, height: 400 }, margins) {\n  const el = select(id).append('svg')\n    .attr('width', dims.width)\n    .attr('height', dims.height);\n  if (margins !== undefined) {\n    el.append('g').attr('transform', `translate(${margins.left || 0},${margins.top || 0})`);\n  }\n  return el;\n}\n","import * as d3 from 'd3';\nimport { createSVG } from '../helpers';\n\nexport default {\n  draw: drawChord,\n  update: updateChord,\n};\n\nlet chordSVG;\n\nexport function drawChord(id, width, height, data) {\n  chordSVG = createSVG(id, { width, height });\n\n  function groupTicks(d, step) {\n    const k = (d.endAngle - d.startAngle) / d.value;\n    return d3.range(0, d.value, step).map(value => {\n      return { value: value, angle: value * k + d.startAngle };\n    });\n  }\n\n  const\n    outerRadius = Math.min(width, height) * 0.5 - 30,\n    innerRadius = outerRadius - 20;\n\n  chordSVG\n    .attr('viewBox', [-width / 2, -height / 2, width, height])\n    .attr('font-size', 10)\n    .attr('font-family', 'sans-serif');\n\n  const myChord = d3.chord().padAngle(0.05).sortSubgroups(d3.descending);\n\n  const chords = myChord(data);\n  const ribbon = d3.ribbon().radius(innerRadius);\n\n  const formatValue = d3.formatPrefix(',.0', 1e3);\n  const color = d3.scaleOrdinal()\n    .domain(d3.range(4))\n    .range(['#c6dbef', '#6baed6', '#2171b5', '#08306b']);\n\n  const arc = d3.arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\n\n  const group = chordSVG.append('g')\n    .selectAll('g')\n    .data(chords.groups)\n    .enter().append('g');\n\n  group.append('path')\n    .attr('fill', d => color(d.index))\n    .attr('stroke', d => d3.rgb(color(d.index)).darker())\n    .attr('d', arc);\n\n  const groupTick = group.append('g')\n    .selectAll('g')\n    .data(d => groupTicks(d, 1e3))\n    .enter().append('g')\n    .attr('transform', d => `rotate(${d.angle * 180 / Math.PI - 90}) translate(${outerRadius},0)`);\n\n  groupTick.append('line')\n    .attr('stroke', '#000')\n    .attr('x2', 6);\n\n  groupTick\n    .filter(d => d.value % 5e3 === 0)\n    .append('text')\n    .attr('x', 8)\n    .attr('dy', '.35em')\n    .attr('transform', d => d.angle > Math.PI ? 'rotate(180) translate(-16)' : null)\n    .attr('text-anchor', d => d.angle > Math.PI ? 'end' : null)\n    .text(d => formatValue(d.value));\n\n  chordSVG.append('g')\n    .attr('fill-opacity', 0.67)\n    .selectAll('path')\n    .data(chords)\n    .enter().append('path')\n    .attr('d', ribbon)\n    .attr('fill', d => color(d.target.index))\n    .attr('stroke', d => d3.rgb(color(d.target.index)).darker());\n}\n\nexport function updateChord(id, data) {\n\n}\n","import * as d3 from 'd3';\nimport { createSVG } from '../helpers';\n\nexport default {\n  draw: drawPlot,\n  update: updatePlot,\n};\n\nlet plotSVG;\n\nexport function drawPlot(id, width, height, data) {\n  plotSVG = createSVG(id, { width, height });\n  const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n\n  const x = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.x)).nice()\n    .range([margin.left, width - margin.right]);\n\n  const y = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.y)).nice()\n    .range([height - margin.bottom, margin.top]);\n\n  function xAxis(g) {\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x))\n      .call(g => g.select('.domain').remove());\n  }\n\n  function yAxis(g) {\n    g\n      .attr('transform', `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y))\n      .call(g => g.select('.domain').remove())\n      .call(g => g.select('.tick:last-of-type text').clone());\n  }\n\n  function dodge(text, iterations = 300) {\n    const nodes = text.nodes();\n    const left = text => text.attr('text-anchor', 'start').attr('dy', '0.32em');\n    const right = text => text.attr('text-anchor', 'end').attr('dy', '0.32em');\n    const top = text => text.attr('text-anchor', 'middle').attr('dy', '0.0em');\n    const bottom = text => text.attr('text-anchor', 'middle').attr('dy', '0.8em');\n    const points = nodes.map(node => ({ fx: +node.getAttribute('x'), fy: +node.getAttribute('y') }));\n    const labels = points.map(({ fx, fy }) => ({ x: fx, y: fy }));\n    const links = points.map((source, i) => ({ source, target: labels[i] }));\n\n    const simulation = d3.forceSimulation(points.concat(labels))\n      .force('charge', d3.forceManyBody().distanceMax(80))\n      .force('link', d3.forceLink(links).distance(4).iterations(4))\n      .stop();\n\n    for (let i = 0; i < iterations; ++i) simulation.tick();\n\n    text\n      .attr('x', (_, i) => labels[i].x)\n      .attr('y', (_, i) => labels[i].y)\n      .each(function (_, i) {\n        const a = Math.atan2(labels[i].y - points[i].fy, labels[i].x - points[i].fx);\n        d3.select(this).call(\n          a > Math.PI / 4 && a <= Math.PI * 3 / 4 ? bottom\n            : a > -Math.PI / 4 && a <= Math.PI / 4 ? left\n              : a > -Math.PI * 3 / 4 && a <= Math.PI * 3 / 4 ? top\n                : right);\n      });\n  }\n\n  plotSVG.append('g').attr('class', 'axis-x').call(xAxis);\n  plotSVG.append('g').attr('class', 'axis-y').call(yAxis);\n\n  plotSVG.append('g')\n    .attr('class', 'circles')\n    .selectAll('circle')\n    .data(data)\n    .enter().append('circle')\n    .attr('cx', d => x(d.x))\n    .attr('cy', d => y(d.y))\n    .attr('r', 4);\n\n  plotSVG.append('g')\n    .attr('class', 'text')\n    .selectAll('text')\n    .data(data)\n    .enter().append('text')\n    .attr('x', d => x(d.x))\n    .attr('y', d => y(d.y))\n    .text(d => d.name)\n    .call(dodge);\n}\n\nexport function updatePlot(id, data) {\n\n}\n","import * as d3 from 'd3';\nimport store from 'store';\nimport { createSVG } from '../helpers';\n\nexport default {\n  draw: drawLines,\n  update: updateLines,\n};\n\nlet linesSVG;\nlet dataYears;\n\nexport function drawLines(id, width, height, data) {\n  const\n    margin = { top: 50, right: 50, bottom: 50, left: 60 },\n    width2 = width - margin.left - margin.right,\n    height2 = height - margin.top - margin.bottom;\n\n  linesSVG = createSVG(id, { width, height });\n\n  const group = linesSVG\n    // .attr('width', width + margin.left + margin.right)\n    // .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', `translate(${margin.left},${margin.top})`);\n\n  dataYears = data;\n\n  let dataset = [];\n  const countryID = store.get('selectedCountry');\n  if (countryID) {\n    for (let year in dataYears) {\n      const yearData = dataYears[year]['WORLD'][countryID];\n      dataset.push({ year: new Date(year), value: Number(yearData) });\n    }\n  }\n  console.log(dataset);\n\n  const xScale = d3.scaleLinear()\n    .domain([d3.min(dataset, d => d.year), d3.max(dataset, d => d.year)]).nice()\n    .range([0, width2]);\n\n  const yScale = d3.scaleLinear()\n    .domain([d3.min(dataset, d => d.value), d3.max(dataset, d => d.value)]).nice()\n    .range([height2, 0]);\n\n  const line = d3.line()\n    .x(d => xScale(d.year))\n    .y(d => yScale(d.value))\n    .curve(d3.curveMonotoneX);\n\n  group.append('g')\n    .attr('class', 'x-axis')\n    .attr('transform', `translate(0,${height2})`)\n    .call(d3.axisBottom(xScale).tickFormat(d3.timeFormat('%Y')));\n\n  group.append('g')\n    .attr('class', 'y-axis')\n    .call(d3.axisLeft(yScale));\n\n  group.append('path')\n    .datum(dataset)\n    .attr('class', 'line')\n    .attr('d', line);\n\n  group.append('g').attr('class', 'dots').selectAll()\n    .data(dataset)\n    .enter().append('circle')\n    .attr('cx', (d) => xScale(d.year))\n    .attr('cy', (d) => yScale(d.value))\n    .attr('r', 5);\n}\n\nexport function updateLines() {\n  const group = linesSVG.selectAll('g');\n\n  const\n    margin = { top: 50, right: 50, bottom: 50, left: 100 },\n    width = linesSVG.attr('width') - margin.left - margin.right,\n    height = linesSVG.attr('height') - margin.top - margin.bottom;\n\n  let dataset = [];\n\n  const countryID = store.get('selectedCountry');\n  if (countryID) {\n    for (let year in dataYears) {\n      const yearData = dataYears[year]['WORLD'][countryID];\n      dataset.push({ year: new Date(year), value: Number(yearData) });\n    }\n  }\n  console.log(dataset);\n\n  const xScale = d3.scaleLinear()\n    .domain([d3.min(dataset, d => d.year), d3.max(dataset, d => d.year)]).nice()\n    .range([0, width]);\n\n  const yScale = d3.scaleLinear()\n    .domain([d3.min(dataset, d => d.value), d3.max(dataset, d => d.value)]).nice()\n    .range([height, 0]);\n\n  group.select('.y-axis').call(d3.axisLeft(yScale));\n\n  const line = d3.line()\n    .x(d => xScale(d.year))\n    .y(d => yScale(d.value))\n    .curve(d3.curveMonotoneX);\n\n  group.select('.line')\n    .datum(dataset)\n    .transition().duration(1000)\n    .attr('d', line);\n\n  group.selectAll('.dots circle').data(dataset)\n    .transition().duration(1000)\n    .attr('cx', (d) => xScale(d.year))\n    .attr('cy', (d) => yScale(d.value))\n    .attr('r', 5);\n}\n","import * as d3 from 'd3';\nimport store from 'store';\nimport { createSVG } from '../helpers';\nimport lines from './lines';\n\nexport default {\n  draw: drawMap,\n  update: updateMap,\n};\n\nlet mapSVG;\n\nfunction selected(d) {\n  d3.select('.selected').classed('selected', false);\n  d3.select(this).classed('selected', true);\n  store.set('selectedCountry', d.id);\n  lines.update();\n}\n\nexport function drawMap(id, width, height, data, population) {\n  mapSVG = createSVG(id, { width, height });\n  const countryPop = {};\n\n  population.forEach((d) => countryPop[d.id] = +d.population);\n\n  const color = d3.scaleThreshold()\n    .domain([10, 100, 500, 1000, 5000, 10000, 50000, 100000, 500000, 1500000].map(n => n * 1000))\n    .range(['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b', '#03132b']);\n\n  const projection = d3.geoMercator()\n    .scale(width / 4)\n    .translate([width / 2, height / 1.2]);\n\n  const path = d3.geoPath().projection(projection);\n  const zoom = d3.zoom()\n    .scaleExtent([1, 6])\n    .on('zoom', zoomed);\n\n  mapSVG.call(zoom);\n\n  const map = mapSVG.append('g').attr('class', 'countries');\n  map\n    .selectAll('path')\n    .data(data.features)\n    .enter().append('path')\n    .attr('id', (d) => d.id)\n    .attr('name', (d) => d.properties.name)\n    .attr('d', path)\n    .style('fill', (d) => color(countryPop[d.id]))\n    .on('click', selected)\n    .on('mouseover', mouseIn)\n    .on('mouseout', mouseOut)\n    .on('contextmenu', contextMenu)\n    .append('title').text(d => `${d.id}: ${d.properties.name}`);\n\n  function mouseIn() { }\n\n  function mouseOut() { }\n\n  function contextMenu() {\n    console.log('right clicked...');\n  }\n\n  function zoomed() {\n    map.selectAll('path')\n      .attr('transform', d3.event.transform);\n  }\n\n}\n\nexport function updateMap(id, data) {\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { tsv, json } from 'd3-fetch';\n\nimport YearSlider from './components/YearSlider';\nimport CountrySelect from './components/CountrySelect';\nimport { chord, plot, lines, map } from './idioms';\n\nimport './index.css';\nimport './idioms.css';\n\n// STATIC TEST DATA\n\nconst chordData = [\n  [16, 16, 13, 12, 0, 6],\n  [1, 0, 12, 10, 6, 1],\n  [9, 10, 13, 0, 5, 5],\n  [15, 1, 14, 16, 9, 16],\n  [5, 10, 16, 16, 10, 0],\n  [9, 8, 2, 13, 13, 9]\n];\n\nconst plotData = [\n  { 'name': 'A', 'x': 21, 'y': 110 },\n  { 'name': 'B', 'x': 22.8, 'y': 93 },\n  { 'name': 'C', 'x': 18.7, 'y': 175 },\n  { 'name': 'D', 'x': 14.3, 'y': 245 },\n  { 'name': 'E', 'x': 24.4, 'y': 62 },\n  { 'name': 'F', 'x': 14.7, 'y': 230 },\n  { 'name': 'G', 'x': 32.4, 'y': 66 },\n  { 'name': 'H', 'x': 30.4, 'y': 52 },\n  { 'name': 'I', 'x': 33.9, 'y': 65 },\n  { 'name': 'J', 'x': 15.5, 'y': 150 },\n  { 'name': 'K', 'x': 15.2, 'y': 150 },\n  { 'name': 'L', 'x': 13.3, 'y': 245 },\n  { 'name': 'M', 'x': 19.2, 'y': 175 },\n  { 'name': 'N', 'x': 27.3, 'y': 66 },\n  { 'name': 'O', 'x': 26, 'y': 91 },\n  { 'name': 'P', 'x': 30.4, 'y': 113 },\n  { 'name': 'Q', 'x': 15.8, 'y': 264 },\n  { 'name': 'R', 'x': 19.7, 'y': 175 },\n  { 'name': 'S', 'x': 15, 'y': 335 },\n  { 'name': 'T', 'x': 21.4, 'y': 109 }\n];\n\n// DYNAMIC REAL DATA\n\nconst years = [1990, 1995, 2000, 2005, 2010, 2015, 2017];\nPromise.all(years.map(year => tsv(`./data/migration_flows/${year}f.tsv`)))\n  .then(dataYearsList => {\n    const dataYears = {};\n    dataYearsList.forEach((yearData, i) => {\n      dataYears[years[i]] = {};\n      yearData.forEach(countryData => dataYears[years[i]][countryData.Country] = countryData);\n    });\n\n    //console.log(dataYears);\n\n    Promise.all([\n      json('./data/countries.json'),\n      tsv('./data/conversion.tsv'),\n      tsv('./data/population.tsv'),\n    ]).then((dataResults) => {\n      loadEverything(dataResults, dataYears);\n    });\n  });\n\nfunction loadEverything(data, dataYears) {\n  const [mapData, conversion, population] = data;\n  plot.draw('#plot', 600, 420, plotData);\n  lines.draw('#lines', 800, 420, dataYears);\n  map.draw('#map', 800, 420, mapData, population);\n  chord.draw('#chord', 600, 420, chordData);\n\n  const select = <CountrySelect countries={conversion} onChange={handleCountrySelection} />;\n  const slider = (<YearSlider />);\n  ReactDOM.render(select, document.getElementById('countrySelect'));\n  ReactDOM.render(slider, document.getElementById('yearSlider'));\n}\n\nfunction handleCountrySelection(el) {\n  console.log('Country Selection:');\n  console.log(el);\n}\n"],"sourceRoot":""}