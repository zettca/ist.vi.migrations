{"version":3,"sources":["../node_modules/d3/dist/package.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/cross.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-array/src/extent.js","../node_modules/d3-array/src/array.js","../node_modules/d3-array/src/range.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-array/src/max.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-array/src/min.js","../node_modules/d3-array/src/zip.js","../node_modules/d3-axis/src/array.js","../node_modules/d3-axis/src/identity.js","../node_modules/d3-axis/src/axis.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-selection/src/namespaces.js","../node_modules/d3-selection/src/namespace.js","../node_modules/d3-selection/src/creator.js","../node_modules/d3-selection/src/selector.js","../node_modules/d3-selection/src/selectorAll.js","../node_modules/d3-selection/src/matcher.js","../node_modules/d3-selection/src/selection/sparse.js","../node_modules/d3-selection/src/selection/enter.js","../node_modules/d3-selection/src/constant.js","../node_modules/d3-selection/src/selection/data.js","../node_modules/d3-selection/src/selection/sort.js","../node_modules/d3-selection/src/selection/attr.js","../node_modules/d3-selection/src/window.js","../node_modules/d3-selection/src/selection/style.js","../node_modules/d3-selection/src/selection/classed.js","../node_modules/d3-selection/src/selection/text.js","../node_modules/d3-selection/src/selection/html.js","../node_modules/d3-selection/src/selection/raise.js","../node_modules/d3-selection/src/selection/lower.js","../node_modules/d3-selection/src/selection/insert.js","../node_modules/d3-selection/src/selection/remove.js","../node_modules/d3-selection/src/selection/clone.js","../node_modules/d3-selection/src/selection/on.js","../node_modules/d3-selection/src/selection/dispatch.js","../node_modules/d3-selection/src/selection/index.js","../node_modules/d3-selection/src/selection/select.js","../node_modules/d3-selection/src/selection/selectAll.js","../node_modules/d3-selection/src/selection/filter.js","../node_modules/d3-selection/src/selection/exit.js","../node_modules/d3-selection/src/selection/merge.js","../node_modules/d3-selection/src/selection/order.js","../node_modules/d3-selection/src/selection/call.js","../node_modules/d3-selection/src/selection/nodes.js","../node_modules/d3-selection/src/selection/node.js","../node_modules/d3-selection/src/selection/size.js","../node_modules/d3-selection/src/selection/empty.js","../node_modules/d3-selection/src/selection/each.js","../node_modules/d3-selection/src/selection/property.js","../node_modules/d3-selection/src/selection/append.js","../node_modules/d3-selection/src/selection/datum.js","../node_modules/d3-selection/src/select.js","../node_modules/d3-selection/src/local.js","../node_modules/d3-selection/src/sourceEvent.js","../node_modules/d3-selection/src/point.js","../node_modules/d3-selection/src/mouse.js","../node_modules/d3-selection/src/touch.js","../node_modules/d3-drag/src/noevent.js","../node_modules/d3-drag/src/nodrag.js","../node_modules/d3-drag/src/event.js","../node_modules/d3-drag/src/drag.js","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-color/src/math.js","../node_modules/d3-color/src/lab.js","../node_modules/d3-color/src/cubehelix.js","../node_modules/d3-interpolate/src/basis.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/basisClosed.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-interpolate/src/transform/parse.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/round.js","../node_modules/d3-interpolate/src/transform/decompose.js","../node_modules/d3-interpolate/src/transform/index.js","../node_modules/d3-interpolate/src/zoom.js","../node_modules/d3-interpolate/src/hsl.js","../node_modules/d3-interpolate/src/hcl.js","../node_modules/d3-interpolate/src/cubehelix.js","../node_modules/d3-interpolate/src/quantize.js","../node_modules/d3-timer/src/timer.js","../node_modules/d3-timer/src/timeout.js","../node_modules/d3-transition/src/transition/schedule.js","../node_modules/d3-transition/src/interrupt.js","../node_modules/d3-transition/src/transition/tween.js","../node_modules/d3-transition/src/transition/interpolate.js","../node_modules/d3-transition/src/transition/remove.js","../node_modules/d3-transition/src/transition/selection.js","../node_modules/d3-transition/src/transition/text.js","../node_modules/d3-transition/src/transition/index.js","../node_modules/d3-transition/src/transition/select.js","../node_modules/d3-transition/src/transition/selectAll.js","../node_modules/d3-transition/src/transition/filter.js","../node_modules/d3-transition/src/transition/merge.js","../node_modules/d3-transition/src/transition/transition.js","../node_modules/d3-transition/src/transition/on.js","../node_modules/d3-transition/src/transition/attr.js","../node_modules/d3-transition/src/transition/attrTween.js","../node_modules/d3-transition/src/transition/style.js","../node_modules/d3-transition/src/transition/styleTween.js","../node_modules/d3-transition/src/transition/delay.js","../node_modules/d3-transition/src/transition/duration.js","../node_modules/d3-transition/src/transition/ease.js","../node_modules/d3-ease/src/poly.js","../node_modules/d3-ease/src/sin.js","../node_modules/d3-ease/src/back.js","../node_modules/d3-ease/src/elastic.js","../node_modules/d3-transition/src/selection/transition.js","../node_modules/d3-ease/src/cubic.js","../node_modules/d3-transition/src/selection/index.js","../node_modules/d3-transition/src/selection/interrupt.js","../node_modules/d3-brush/src/brush.js","../node_modules/d3-chord/src/math.js","../node_modules/d3-chord/src/chord.js","../node_modules/d3-chord/src/array.js","../node_modules/d3-chord/src/constant.js","../node_modules/d3-path/src/path.js","../node_modules/d3-chord/src/ribbon.js","../node_modules/d3-collection/src/map.js","../node_modules/d3-collection/src/set.js","../node_modules/d3-contour/src/array.js","../node_modules/d3-contour/src/density.js","../node_modules/d3-force/src/constant.js","../node_modules/d3-force/src/jiggle.js","../node_modules/d3-quadtree/src/add.js","../node_modules/d3-quadtree/src/cover.js","../node_modules/d3-quadtree/src/quad.js","../node_modules/d3-quadtree/src/x.js","../node_modules/d3-quadtree/src/y.js","../node_modules/d3-quadtree/src/quadtree.js","../node_modules/d3-quadtree/src/data.js","../node_modules/d3-quadtree/src/extent.js","../node_modules/d3-quadtree/src/find.js","../node_modules/d3-quadtree/src/remove.js","../node_modules/d3-quadtree/src/root.js","../node_modules/d3-quadtree/src/size.js","../node_modules/d3-quadtree/src/visit.js","../node_modules/d3-quadtree/src/visitAfter.js","../node_modules/d3-force/src/link.js","../node_modules/d3-force/src/simulation.js","../node_modules/d3-force/src/manyBody.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-geo/src/adder.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/equalEarth.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/naturalEarth1.js","../node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo/src/projection/stereographic.js","../node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/d3-hierarchy/src/hierarchy/count.js","../node_modules/d3-hierarchy/src/hierarchy/index.js","../node_modules/d3-hierarchy/src/hierarchy/each.js","../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../node_modules/d3-hierarchy/src/hierarchy/sum.js","../node_modules/d3-hierarchy/src/hierarchy/sort.js","../node_modules/d3-hierarchy/src/hierarchy/path.js","../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../node_modules/d3-hierarchy/src/hierarchy/links.js","../node_modules/d3-hierarchy/src/array.js","../node_modules/d3-hierarchy/src/treemap/round.js","../node_modules/d3-hierarchy/src/treemap/dice.js","../node_modules/d3-hierarchy/src/tree.js","../node_modules/d3-hierarchy/src/treemap/slice.js","../node_modules/d3-hierarchy/src/treemap/squarify.js","../node_modules/d3-hierarchy/src/treemap/resquarify.js","../node_modules/d3-polygon/src/hull.js","../node_modules/d3-random/src/defaultSource.js","../node_modules/d3-random/src/normal.js","../node_modules/d3-random/src/uniform.js","../node_modules/d3-random/src/irwinHall.js","../node_modules/d3-random/src/logNormal.js","../node_modules/d3-scale/src/array.js","../node_modules/d3-random/src/bates.js","../node_modules/d3-random/src/exponential.js","../node_modules/d3-scale/src/ordinal.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-format/src/precisionRound.js","../node_modules/d3-scale/src/linear.js","../node_modules/d3-scale/src/threshold.js","../node_modules/d3-time/src/interval.js","../node_modules/d3-time/src/millisecond.js","../node_modules/d3-time/src/duration.js","../node_modules/d3-time/src/second.js","../node_modules/d3-time/src/minute.js","../node_modules/d3-time/src/hour.js","../node_modules/d3-time/src/day.js","../node_modules/d3-time/src/week.js","../node_modules/d3-time/src/month.js","../node_modules/d3-time/src/year.js","../node_modules/d3-time/src/utcMinute.js","../node_modules/d3-time/src/utcHour.js","../node_modules/d3-time/src/utcDay.js","../node_modules/d3-time/src/utcWeek.js","../node_modules/d3-time/src/utcMonth.js","../node_modules/d3-time/src/utcYear.js","../node_modules/d3-time-format/src/locale.js","../node_modules/d3-time-format/src/defaultLocale.js","../node_modules/d3-time-format/src/isoFormat.js","../node_modules/d3-time-format/src/isoParse.js","../node_modules/d3-scale-chromatic/src/colors.js","../node_modules/d3-scale-chromatic/src/ramp.js","../node_modules/d3-scale-chromatic/src/categorical/category10.js","../node_modules/d3-scale-chromatic/src/categorical/Accent.js","../node_modules/d3-scale-chromatic/src/categorical/Dark2.js","../node_modules/d3-scale-chromatic/src/categorical/Paired.js","../node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","../node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","../node_modules/d3-scale-chromatic/src/categorical/Set1.js","../node_modules/d3-scale-chromatic/src/categorical/Set2.js","../node_modules/d3-scale-chromatic/src/categorical/Set3.js","../node_modules/d3-scale-chromatic/src/diverging/BrBG.js","../node_modules/d3-scale-chromatic/src/diverging/PRGn.js","../node_modules/d3-scale-chromatic/src/diverging/PiYG.js","../node_modules/d3-scale-chromatic/src/diverging/PuOr.js","../node_modules/d3-scale-chromatic/src/diverging/RdBu.js","../node_modules/d3-scale-chromatic/src/diverging/RdGy.js","../node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","../node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","../node_modules/d3-scale-chromatic/src/diverging/Spectral.js","../node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","../node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","../node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","../node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","../node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","../node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","../node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","../node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","../node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","../node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","../node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","../node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","../node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","../node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","../node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","../node_modules/d3-shape/src/constant.js","../node_modules/d3-shape/src/math.js","../node_modules/d3-shape/src/arc.js","../node_modules/d3-shape/src/curve/linear.js","../node_modules/d3-shape/src/point.js","../node_modules/d3-shape/src/line.js","../node_modules/d3-shape/src/curve/radial.js","../node_modules/d3-shape/src/array.js","../node_modules/d3-shape/src/symbol/diamond.js","../node_modules/d3-shape/src/symbol/circle.js","../node_modules/d3-shape/src/symbol/star.js","../node_modules/d3-shape/src/noop.js","../node_modules/d3-shape/src/symbol/triangle.js","../node_modules/d3-shape/src/symbol/wye.js","../node_modules/d3-shape/src/curve/basis.js","../node_modules/d3-shape/src/curve/basisClosed.js","../node_modules/d3-shape/src/curve/basisOpen.js","../node_modules/d3-shape/src/curve/bundle.js","../node_modules/d3-shape/src/curve/cardinal.js","../node_modules/d3-shape/src/curve/cardinalClosed.js","../node_modules/d3-shape/src/curve/cardinalOpen.js","../node_modules/d3-shape/src/curve/catmullRom.js","../node_modules/d3-shape/src/curve/catmullRomClosed.js","../node_modules/d3-shape/src/curve/catmullRomOpen.js","../node_modules/d3-shape/src/curve/linearClosed.js","../node_modules/d3-shape/src/curve/monotone.js","../node_modules/d3-shape/src/curve/natural.js","../node_modules/d3-shape/src/curve/step.js","../node_modules/d3-voronoi/src/RedBlackTree.js","../node_modules/d3-voronoi/src/Edge.js","../node_modules/d3-voronoi/src/Cell.js","../node_modules/d3-voronoi/src/Circle.js","../node_modules/d3-voronoi/src/Beach.js","../node_modules/d3-voronoi/src/Diagram.js","../node_modules/d3-voronoi/src/voronoi.js","../node_modules/d3-zoom/src/constant.js","../node_modules/d3-zoom/src/event.js","../node_modules/d3-zoom/src/transform.js","../node_modules/d3-zoom/src/noevent.js","../node_modules/d3-zoom/src/zoom.js","../node_modules/d3/index.js","../node_modules/d3-fetch/src/buffer.js","../node_modules/d3-fetch/src/text.js","../node_modules/d3-fetch/src/dsv.js","../node_modules/d3-fetch/src/json.js","../node_modules/d3-fetch/src/xml.js","../node_modules/d3-fetch/src/index.js","../node_modules/d3-dsv/src/dsv.js","../node_modules/d3-dsv/src/csv.js","../node_modules/d3-dsv/src/tsv.js","../node_modules/d3-dsv/src/index.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["ascending","a","b","NaN","bisector","compare","f","length","d","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisect","descending","src_extent","values","valueof","value","min","max","n","i","array_array","Array","prototype","src_range","slice","map","start","stop","step","arguments","Math","ceil","range","e10","sqrt","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","src_max","src_merge","arrays","m","merged","array","j","src_min","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","y","entering","this","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","axis","context","apply","domain","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","selectAll","data","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","transition","getAttribute","p","parentNode","remove","filter","each","_","call","tickSize","axisBottom","axisLeft","noop","dispatch","t","Error","Dispatch","get","type","name","c","set","callback","concat","push","constructor","on","typename","types","T","trim","split","indexOf","hasOwnProperty","that","args","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","appendChild","child","insertBefore","next","keyPrefix","bindIndex","group","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","o","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","match","size","bind","enterGroup","updateGroup","previous","i0","i1","_enter","_exit","groups0","groups1","m0","m1","merges","group0","group1","sort","compareNode","sortgroups","sortgroup","nodes","empty","getAttributeNS","removeAttributeNS","removeAttribute","v","setAttributeNS","priority","removeProperty","setProperty","property","classed","html","create","before","clone","deep","typenames","on_parseTypenames","src_selection","src_select","nextId","Local","toString","id","source","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","noevent","preventDefault","stopImmediatePropagation","nodrag","view","root","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","DragEvent","target","subject","active","dx","dy","define","factory","extend","definition","Object","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","r","g","rgbConvert","rgb","opacity","color_rgb","_hex","h","s","l","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","hex","brighter","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","src_value","Date","setTime","isArray","nb","na","valueOf","src_round","degrees","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","parse","pxComma","pxParen","degParen","pop","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","matrix","rho","SQRT2","zoom_cosh","exp","src_zoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","zoom_sinh","duration","hsl_hsl","hue","hcl_hcl","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","cubehelixLong","taskHead","taskTail","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","timerFlush","t0","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","ease","schedule_create","init","schedule","schedule_get","schedule_set","interrupt","tweenValue","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","newId","selection_prototype","children","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","interpolate","value00","value10","interpolate0","value0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","tween0","tween1","easeConstant","custom","polyIn","exponent","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","defaultTiming","asin","elasticIn","amplitude","period","elasticOut","elasticInOut","transition_inherit","brush_type","math_pi","math_halfPi","math_tau","math_max","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","x0","groupSums","groupIndex","subgroupIndex","chords","forEach","di","dj","a0","a1","subindex","startAngle","endAngle","src_array_slice","d3_chord_src_constant","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","w","src_path","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","Map","map_map","object","has","clear","keys","entries","src_map","Set","proto","set_set","d3_force_src_constant","jiggle","random","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","undefined","leaf_copy","treeProto","cover","xz","yz","visit","extent","find","x3","y3","quads","retainer","removeAll","visitAfter","link_index","link_find","nodeById","nodeId","src_link","links","strengths","distances","bias","strength","link","distance","iterations","force","alpha","vx","vy","initialize","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","_nodes","simulation","_alpha","_alphaMin","_alphaDecay","_alphaTarget","_velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","alphaMin","alphaDecay","alphaTarget","velocityDecay","closest","manyBody","distanceMin2","distanceMax2","theta2","accumulate","quad","weight","distanceMin","distanceMax","theta","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","width","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","_p","X","toUpperCase","d3_format_src_identity","prefixes","locale","grouping","thousands","substring","currency","decimal","numerals","replace","formatNumerals","percent","newFormat","test","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","padding","formatPrefix","src_locale","adder","Adder","reset","_add","temp","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","noop_noop","streamGeometry","geometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","src_stream","cartesian_spherical","cartesian","cartesian_cartesian","spherical","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","delta","direction","cosRadius","sinRadius","circleRadius","clip_buffer","lines","rejoin","shift","result","pointEqual","Intersection","points","other","entry","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains_sum","polygonContains","polygon","sinPhi","normal","winding","ring","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","clip_antimeridian","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","polar","q1","code","c0","v00","point2","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","area_x00","area_y00","area_x0","area_y0","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","d3_geo_src_path","projection","projectionStream","contextStream","transformer","methods","TransformStream","fit","fitBounds","clipExtent","fit_fitExtent","fit_fitSize","fit_fitWidth","fit_fitHeight","height","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","preclip","postclip","recenter","center","transformRotate","clipAngle","fitExtent","fitSize","fitWidth","fitHeight","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercator","mercatorProjection","reclip","equirectangularRaw","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","count_count","sum","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","eachAfter","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","dice","TreeNode","treemap_slice","squarify_phi","squarifyRatio","ratio","row","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","rows","squarify","resquarify","_squarify","src_defaultSource","src_normal","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","irwinHall","sourceRandomLogNormal","randomLogNormal","sourceRandomIrwinHall","randomIrwinHall","d3_scale_src_array_array","sourceRandomBates","randomBates","sourceRandomExponential","randomExponential","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","clamp","continuous","piecewise","output","input","rescale","deinterpolateClamp","reinterpolateClamp","rangeRound","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","nice","src_linear_linear","threshold_threshold","invertExtent","interval_t0","interval_t1","newInterval","floori","offseti","field","interval","date","millisecond_millisecond","durationMinute","durationWeek","second_second","getUTCSeconds","minute_minute","getMinutes","hour_hour","getTimezoneOffset","getHours","day_day","setHours","setDate","getDate","src_day","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","month_month","setMonth","getMonth","getFullYear","year_year","setFullYear","src_year","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","src_utcDay","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","src_utcYear","localDate","H","L","utcDate","UTC","newYear","src_defaultLocale_locale","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","pad","requote","formatRe","formatLookup","parseWeekdayNumberSunday","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","getMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","getSeconds","formatWeekdayNumberMonday","day","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","B","I","Y","utcFormats","parses","parseSpecifier","charAt","newParse","newDate","week","formatLocale","defaultLocale_defaultLocale","toISOString","src_colors","ramp","scheme","viridis_ramp","d3_shape_src_constant","math_abs","math_atan2","src_math_cos","src_math_max","math_min","src_math_sin","math_sqrt","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_halfPi","d3_shape_src_math_tau","math_asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","arc_intersect","bx","by","kc","lc","Linear","areaStart","areaEnd","curve_linear","point_x","point_y","src_line","defined","curve","defined0","curveRadial","Radial","_curve","radial","kr","d3_shape_src_noop","basis_point","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","_basis","_beta","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","x23","y23","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","monotone_sign","slope3","h0","h1","s0","s1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","Natural","controlPoints","_t0","px","py","Step","_t","RedBlackTree","RedBlackNode","R","P","N","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","circle","Diagram_circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","edges","polygons","triangles","e1","_found","d3_zoom_src_constant","ZoomEvent","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","src_noevent_nopropagation","d3_zoom_src_noevent","zoom_defaultFilter","button","zoom_defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","__zoom","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","translateExtent","d3_zoom_src_zoom","touchstarting","touchending","constrain","wheelDelta","touchable","scaleExtent","gestures","listeners","touchDelay","wheelDelay","clickDistance2","zoom","wheeled","mousedowned","dblclicked","touchstarted","touchmoved","touchended","gesture","Gesture","wheel","moved","k1","shiftKey","started","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","emit","clickDistance","__webpack_require__","__webpack_exports__","responseText","response","ok","status","statusText","src_text","fetch","then","dsvParse","src","tsv","responseJson","json","parser","DOMParser","parseFromString","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","dsv","delimiter","reFormat","DELIMITER","parseRows","eof","eol","token","formatRow","formatValue","convert","customConverter","columnSet","column","inferColumns","formatRows","csv","csvParse","tsvParse","_slicedToArray","arr","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","done","err","_iterableToArrayLimit","_nonIterableRest"],"mappings":"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nD,KCC3bC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,sZAAAhH,IAAybknD,KCC3bC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,sZAAAhH,IAAybknD,KCC3bC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,sZAAAhH,IAAybknD,KCC3bC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,sZAAAhH,IAAybknD,KCC3bC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,sZAAAhH,IAAybknD,KCC3bC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GADE,IAAAvnD,MAAA,GAAAoH,OAAA,kRAAAhH,IAAmTknD,KCCrTC,GA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","file":"static/js/1.4739cc3d.chunk.js","sourcesContent":["export var name = \"d3\";\nexport var version = \"5.7.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\", \"visualization\", \"svg\", \"animation\", \"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\n  \"name\": \"Mike Bostock\",\n  \"url\": \"https://bost.ocks.org/mike\"\n};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\n  \"type\": \"git\",\n  \"url\": \"https://github.com/d3/d3.git\"\n};\nexport var scripts = {\n  \"pretest\": \"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\n  \"test\": \"tape 'test/**/*-test.js'\",\n  \"prepublishOnly\": \"yarn test && rollup -c\",\n  \"postpublish\": \"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"\n};\nexport var devDependencies = {\n  \"json2module\": \"0.0\",\n  \"rimraf\": \"2\",\n  \"rollup\": \"0.64\",\n  \"rollup-plugin-ascii\": \"0.0\",\n  \"rollup-plugin-node-resolve\": \"3\",\n  \"rollup-plugin-terser\": \"1\",\n  \"tape\": \"4\"\n};\nexport var dependencies = {\n  \"d3-array\": \"1\",\n  \"d3-axis\": \"1\",\n  \"d3-brush\": \"1\",\n  \"d3-chord\": \"1\",\n  \"d3-collection\": \"1\",\n  \"d3-color\": \"1\",\n  \"d3-contour\": \"1\",\n  \"d3-dispatch\": \"1\",\n  \"d3-drag\": \"1\",\n  \"d3-dsv\": \"1\",\n  \"d3-ease\": \"1\",\n  \"d3-fetch\": \"1\",\n  \"d3-force\": \"1\",\n  \"d3-format\": \"1\",\n  \"d3-geo\": \"1\",\n  \"d3-hierarchy\": \"1\",\n  \"d3-interpolate\": \"1\",\n  \"d3-path\": \"1\",\n  \"d3-polygon\": \"1\",\n  \"d3-quadtree\": \"1\",\n  \"d3-random\": \"1\",\n  \"d3-scale\": \"2\",\n  \"d3-scale-chromatic\": \"1\",\n  \"d3-selection\": \"1\",\n  \"d3-shape\": \"1\",\n  \"d3-time\": \"1\",\n  \"d3-time-format\": \"2\",\n  \"d3-timer\": \"1\",\n  \"d3-transition\": \"1\",\n  \"d3-voronoi\": \"1\",\n  \"d3-zoom\": \"1\"\n};","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","export default function (a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}","var array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","export default function (start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","export default function (values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n\n        while (++i < n) {\n          // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","export var slice = Array.prototype.slice;","export default function (x) {\n  return x;\n}","import { slice } from \"./array\";\nimport identity from \"./identity\";\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function (d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n\n  if (scale.round()) offset = Math.round(offset);\n  return function (d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,\n        format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n    path = path.merge(path.enter().insert(\"path\", \".tick\").attr(\"class\", \"domain\").attr(\"stroke\", \"currentColor\"));\n    tick = tick.merge(tickEnter);\n    line = line.merge(tickEnter.append(\"line\").attr(\"stroke\", \"currentColor\").attr(x + \"2\", k * tickSizeInner));\n    text = text.merge(tickEnter.append(\"text\").attr(\"fill\", \"currentColor\").attr(x, k * spacing).attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n      tickExit = tickExit.transition(context).attr(\"opacity\", epsilon).attr(\"transform\", function (d) {\n        return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\");\n      });\n      tickEnter.attr(\"opacity\", epsilon).attr(\"transform\", function (d) {\n        var p = this.parentNode.__axis;\n        return transform(p && isFinite(p = p(d)) ? p : position(d));\n      });\n    }\n\n    tickExit.remove();\n    path.attr(\"d\", orient === left || orient == right ? tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1 : tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1);\n    tick.attr(\"opacity\", 1).attr(\"transform\", function (d) {\n      return transform(position(d));\n    });\n    line.attr(x + \"2\", k * tickSizeInner);\n    text.attr(x, k * spacing).text(format);\n    selection.filter(entering).attr(\"fill\", \"none\").attr(\"font-size\", 10).attr(\"font-family\", \"sans-serif\").attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n    selection.each(function () {\n      this.__axis = position;\n    });\n  }\n\n  axis.scale = function (_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function () {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function (_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function (_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function (_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function (_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function (_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function (_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function (_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}","var noop = {\n  value: function value() {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function on(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) {\n        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      }\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n        _[t] = set(_[t], typename.name, null);\n      }\n    }\n\n    return this;\n  },\n  copy: function copy() {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) {\n      copy[t] = _[t].slice();\n    }\n\n    return new Dispatch(copy);\n  },\n  call: function call(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n      args[i] = arguments[i + 2];\n    }\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  },\n  apply: function apply(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\nexport default dispatch;","export var xhtml = \"http://www.w3.org/1999/xhtml\";\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};","import namespaces from \"./namespaces\";\nexport default function (name) {\n  var prefix = name += \"\",\n      i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {\n    space: namespaces[prefix],\n    local: name\n  } : name;\n}","import namespace from \"./namespace\";\nimport { xhtml } from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function () {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml ? document.createElement(name) : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function () {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function (name) {\n  var fullname = namespace(name);\n  return (fullname.local ? creatorFixed : creatorInherit)(fullname);\n}","function none() {}\n\nexport default function (selector) {\n  return selector == null ? none : function () {\n    return this.querySelector(selector);\n  };\n}","function empty() {\n  return [];\n}\n\nexport default function (selector) {\n  return selector == null ? empty : function () {\n    return this.querySelectorAll(selector);\n  };\n}","var matcher = function matcher(selector) {\n  return function () {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector || element.msMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector;\n\n    matcher = function matcher(selector) {\n      return function () {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;","export default function (update) {\n  return new Array(update.length);\n}","import sparse from \"./sparse\";\nimport { Selection } from \"./index\";\nexport default function () {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function appendChild(child) {\n    return this._parent.insertBefore(child, this._next);\n  },\n  insertBefore: function insertBefore(child, next) {\n    return this._parent.insertBefore(child, next);\n  },\n  querySelector: function querySelector(selector) {\n    return this._parent.querySelector(selector);\n  },\n  querySelectorAll: function querySelectorAll(selector) {\n    return this._parent.querySelectorAll(selector);\n  }\n};","export default function (x) {\n  return function () {\n    return x;\n  };\n}","import { Selection } from \"./index\";\nimport { EnterNode } from \"./enter\";\nimport constant from \"../constant\";\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length; // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  } // Put any non-null nodes that don’t fit into exit.\n\n\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue; // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  } // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n\n\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  } // Add any remaining nodes that were not bound to data to exit.\n\n\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function (value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function (d) {\n      data[++j] = d;\n    });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength) {\n          ;\n        }\n\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}","import { Selection } from \"./index\";\nexport default function (compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function () {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function () {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function (name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === \"function\" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));\n}","export default function (node) {\n  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node\n  node.document && node // node is a Window\n  || node.defaultView; // node is a Document\n}","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function () {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function (name, value, priority) {\n  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === \"function\" ? styleFunction : styleConstant)(name, value, priority == null ? \"\" : priority)) : styleValue(this.node(), name);\n}\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name) || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function add(name) {\n    var i = this._names.indexOf(name);\n\n    if (i < 0) {\n      this._names.push(name);\n\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function remove(name) {\n    var i = this._names.indexOf(name);\n\n    if (i >= 0) {\n      this._names.splice(i, 1);\n\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function contains(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    list.add(names[i]);\n  }\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node),\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    list.remove(names[i]);\n  }\n}\n\nfunction classedTrue(names) {\n  return function () {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function () {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function () {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function (name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()),\n        i = -1,\n        n = names.length;\n\n    while (++i < n) {\n      if (!list.contains(names[i])) return false;\n    }\n\n    return true;\n  }\n\n  return this.each((typeof value === \"function\" ? classedFunction : value ? classedTrue : classedFalse)(names, value));\n}","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function (value) {\n  return arguments.length ? this.each(value == null ? textRemove : (typeof value === \"function\" ? textFunction : textConstant)(value)) : this.node().textContent;\n}","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function () {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function (value) {\n  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === \"function\" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;\n}","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function () {\n  return this.each(raise);\n}","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function () {\n  return this.each(lower);\n}","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function (name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function () {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function () {\n  return this.each(remove);\n}","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function (deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}","var filterEvents = {};\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {\n      mouseenter: \"mouseover\",\n      mouseleave: \"mouseout\"\n    };\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function (event) {\n    var related = event.relatedTarget;\n\n    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function (event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n\n    event = event1;\n\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nfunction onRemove(typename) {\n  return function () {\n    var on = this.__on;\n    if (!on) return;\n\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n\n    if (++i) on.length = i;else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function (d, i, group) {\n    var on = this.__on,\n        o,\n        listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {\n      type: typename.type,\n      name: typename.name,\n      value: value,\n      listener: listener,\n      capture: capture\n    };\n    if (!on) this.__on = [o];else on.push(o);\n  };\n}\n\nexport default function (typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"),\n      i,\n      n = typenames.length,\n      t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n\n  for (i = 0; i < n; ++i) {\n    this.each(on(typenames[i], value, capture));\n  }\n\n  return this;\n}\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function () {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function (type, params) {\n  return this.each((typeof params === \"function\" ? dispatchFunction : dispatchConstant)(type, params));\n}","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\nexport var root = [null];\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\nexport default selection;","import { Selection } from \"./index\";\nimport selector from \"../selector\";\nexport default function (select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}","import { Selection } from \"./index\";\nimport selectorAll from \"../selectorAll\";\nexport default function (select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}","import { Selection } from \"./index\";\nimport matcher from \"../matcher\";\nexport default function (match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}","import sparse from \"./sparse\";\nimport { Selection } from \"./index\";\nexport default function () {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}","import { Selection } from \"./index\";\nexport default function (selection) {\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}","export default function () {\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}","export default function () {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}","export default function () {\n  var nodes = new Array(this.size()),\n      i = -1;\n  this.each(function () {\n    nodes[++i] = this;\n  });\n  return nodes;\n}","export default function () {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}","export default function () {\n  var size = 0;\n  this.each(function () {\n    ++size;\n  });\n  return size;\n}","export default function () {\n  return !this.node();\n}","export default function (callback) {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}","function propertyRemove(name) {\n  return function () {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function () {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function () {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];else this[name] = v;\n  };\n}\n\nexport default function (name, value) {\n  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === \"function\" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];\n}","import creator from \"../creator\";\nexport default function (name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function () {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}","export default function (value) {\n  return arguments.length ? this.property(\"__data__\", value) : this.node().__data__;\n}","import { Selection, root } from \"./selection/index\";\nexport default function (selector) {\n  return typeof selector === \"string\" ? new Selection([[document.querySelector(selector)]], [document.documentElement]) : new Selection([[selector]], root);\n}","var nextId = 0;\nexport default function local() {\n  return new Local();\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function get(node) {\n    var id = this._;\n\n    while (!(id in node)) {\n      if (!(node = node.parentNode)) return;\n    }\n\n    return node[id];\n  },\n  set: function set(node, value) {\n    return node[this._] = value;\n  },\n  remove: function remove(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function toString() {\n    return this._;\n  }\n};","import { event } from \"./selection/on\";\nexport default function () {\n  var current = event,\n      source;\n\n  while (source = current.sourceEvent) {\n    current = source;\n  }\n\n  return current;\n}","export default function (node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\nexport default function (node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\nexport default function (node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}","import { event } from \"d3-selection\";\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\nexport default function () {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}","import { select } from \"d3-selection\";\nimport noevent from \"./noevent\";\nexport default function (view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function () {\n      selection.on(\"click.drag\", null);\n    }, 0);\n  }\n\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function () {\n  var value = this._.on.apply(this._, arguments);\n\n  return value === this._ ? this : value;\n};","import { dispatch } from \"d3-dispatch\";\nimport { event, customEvent, select, mouse, touch } from \"d3-selection\";\nimport nodrag, { yesdrag } from \"./nodrag\";\nimport noevent, { nopropagation } from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\"; // Ignore right-click, since that should open the context menu.\n\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {\n    x: event.x,\n    y: event.y\n  } : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function () {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection.on(\"mousedown.drag\", mousedowned).filter(touchable).on(\"touchstart.drag\", touchstarted).on(\"touchmove.drag\", touchmoved).on(\"touchend.drag touchcancel.drag\", touchended).style(\"touch-action\", \"none\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx,\n          dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length,\n        i,\n        gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length,\n        i,\n        gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length,\n        i,\n        gesture;\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function () {\n      touchending = null;\n    }, 500); // Ghost clicks are delayed!\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id),\n        s,\n        dx,\n        dy,\n        sublisteners = listeners.copy();\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function () {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n    return function gesture(type) {\n      var p0 = p,\n          n;\n\n      switch (type) {\n        case \"start\":\n          gestures[id] = gesture, n = active++;\n          break;\n\n        case \"end\":\n          delete gestures[id], --active;\n        // nobreak\n\n        case \"drag\":\n          p = point(container, id), n = active;\n          break;\n      }\n\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function (_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function (_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function (_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function (_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}","export default function (constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n\n  for (var key in definition) {\n    prototype[key] = definition[key];\n  }\n\n  return prototype;\n}","import define, { extend } from \"./define\";\nexport function Color() {}\nvar _darker = 0.7;\nexport { _darker as darker };\n\nvar _brighter = 1 / _darker;\n\nexport { _brighter as brighter };\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\ndefine(Color, color, {\n  displayable: function displayable() {\n    return this.rgb().displayable();\n  },\n  hex: function hex() {\n    return this.rgb().hex();\n  },\n  toString: function toString() {\n    return this.rgb() + \"\";\n  }\n});\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb(m >> 8 & 0xf | m >> 4 & 0x0f0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00\n  ) : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n  : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n  : named.hasOwnProperty(format) ? rgbn(named[format]) : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0) : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb();\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function rgb() {\n    return this;\n  },\n  displayable: function displayable() {\n    return 0 <= this.r && this.r <= 255 && 0 <= this.g && this.g <= 255 && 0 <= this.b && this.b <= 255 && 0 <= this.opacity && this.opacity <= 1;\n  },\n  hex: function hex() {\n    return \"#\" + _hex(this.r) + _hex(this.g) + _hex(this.b);\n  },\n  toString: function toString() {\n    var a = this.opacity;\n    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \" + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction _hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl();\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n\n  return new Hsl(h, s, l, o.opacity);\n}\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);\n  },\n  displayable: function displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;\n  }\n}));\n/* From FvD 13.37, CSS Color Module Level 3 */\n\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;\n}","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;","import define, { extend } from \"./define\";\nimport { Color, rgbConvert, Rgb } from \"./color\";\nimport { deg2rad, rad2deg } from \"./math\"; // https://beta.observablehq.com/@mbostock/lab-and-rgb\n\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),\n      x,\n      z;\n  if (r === g && g === b) x = z = y;else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\ndefine(Lab, lab, extend(Color, {\n  brighter: function brighter(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function darker(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function rgb() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function brighter(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function darker(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function rgb() {\n    return labConvert(this).rgb();\n  }\n}));","import define, { extend } from \"./define\";\nimport { Color, rgbConvert, Rgb, darker as _darker, brighter as _brighter } from \"./color\";\nimport { deg2rad, rad2deg } from \"./math\";\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),\n      // NaN if l=0 or l=1\n  h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);\n  }\n}));","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1,\n      t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;\n}\nexport default function (values) {\n  var n = values.length - 1;\n  return function (t) {\n    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function (t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function (a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}","import { rgb as colorRgb } from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, { gamma } from \"./color\";\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function (t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function (colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i,\n        color;\n\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function (t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);","export default function (a, b) {\n  return a = +a, b -= a, function (t) {\n    return a + b * t;\n  };\n}","import { basis } from \"./basis\";\nexport default function (values) {\n  var n = values.length;\n  return function (t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}","import number from \"./number\";\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function () {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function (t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function (a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0,\n      // scan index for next number in b\n  am,\n      // current match in a\n  bm,\n      // current match in b\n  bs,\n      // string preceding current number in b, if any\n  i = -1,\n      // index in s\n  s = [],\n      // string constants and placeholders\n  q = []; // number interpolators\n  // Coerce inputs to strings.\n\n  a = a + \"\", b = b + \"\"; // Interpolate pairs of numbers in a & b.\n\n  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) {\n      // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    if ((am = am[0]) === (bm = bm[0])) {\n      // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else {\n      // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({\n        i: i,\n        x: number(am, bm)\n      });\n    }\n\n    bi = reB.lastIndex;\n  } // Add remains of b.\n\n\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  } // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n\n\n  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {\n    for (var i = 0, o; i < b; ++i) {\n      s[(o = q[i]).i] = o.x(t);\n    }\n\n    return s.join(\"\");\n  });\n}","import decompose, { identity } from \"./decompose\";\nvar cssNode, cssRoot, cssView, svgNode;\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}","import { color } from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\nexport default function (a, b) {\n  var t = typeof b,\n      c;\n  return b == null || t === \"boolean\" ? constant(b) : (t === \"number\" ? number : t === \"string\" ? (c = color(b)) ? (b = c, rgb) : string : b instanceof color ? rgb : b instanceof Date ? date : Array.isArray(b) ? array : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object : number)(a, b);\n}","export default function (a, b) {\n  var d = new Date();\n  return a = +a, b -= a, function (t) {\n    return d.setTime(a + b * t), d;\n  };\n}","import value from \"./value\";\nexport default function (a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) {\n    x[i] = value(a[i], b[i]);\n  }\n\n  for (; i < nb; ++i) {\n    c[i] = b[i];\n  }\n\n  return function (t) {\n    for (i = 0; i < na; ++i) {\n      c[i] = x[i](t);\n    }\n\n    return c;\n  };\n}","import value from \"./value\";\nexport default function (a, b) {\n  var i = {},\n      c = {},\n      k;\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function (t) {\n    for (k in i) {\n      c[k] = i[k](t);\n    }\n\n    return c;\n  };\n}","export default function (a, b) {\n  return a = +a, b -= a, function (t) {\n    return Math.round(a + b * t);\n  };\n}","var degrees = 180 / Math.PI;\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\nexport default function (a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}","import number from \"../number\";\nimport { parseCss, parseSvg } from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({\n        i: i - 4,\n        x: number(xa, xb)\n      }, {\n        i: i - 2,\n        x: number(ya, yb)\n      });\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path\n\n      q.push({\n        i: s.push(pop(s) + \"rotate(\", null, degParen) - 2,\n        x: number(a, b)\n      });\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({\n        i: s.push(pop(s) + \"skewX(\", null, degParen) - 2,\n        x: number(a, b)\n      });\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: number(xa, xb)\n      }, {\n        i: i - 2,\n        x: number(ya, yb)\n      });\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function (a, b) {\n    var s = [],\n        // string constants and placeholders\n    q = []; // number interpolators\n\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n\n    return function (t) {\n      var i = -1,\n          n = q.length,\n          o;\n\n      while (++i < n) {\n        s[(o = q[i]).i] = o.x(t);\n      }\n\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n} // p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\n\n\nexport default function (p0, p1) {\n  var ux0 = p0[0],\n      uy0 = p0[1],\n      w0 = p0[2],\n      ux1 = p1[0],\n      uy1 = p1[1],\n      w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S; // Special case for u0 ≅ u1.\n\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n\n    i = function i(t) {\n      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];\n    };\n  } // General case.\n  else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n\n      i = function i(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];\n      };\n    }\n\n  i.duration = S * 1000;\n  return i;\n}","import { hsl as colorHsl } from \"d3-color\";\nimport color, { hue } from \"./color\";\n\nfunction hsl(hue) {\n  return function (start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function (t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  };\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);","import { hcl as colorHcl } from \"d3-color\";\nimport color, { hue } from \"./color\";\n\nfunction hcl(hue) {\n  return function (start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function (t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  };\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);","import { cubehelix as colorCubehelix } from \"d3-color\";\nimport color, { hue } from \"./color\";\n\nfunction cubehelix(hue) {\n  return function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function (t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n    return cubehelix;\n  }(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);","export default function (interpolator, n) {\n  var samples = new Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    samples[i] = interpolator(i / (n - 1));\n  }\n\n  return samples;\n}","var frame = 0,\n    // is an animation frame pending?\ntimeout = 0,\n    // is a timeout pending?\ninterval = 0,\n    // are any timers active?\npokeDelay = 1000,\n    // how frequently we check for clock skew\ntaskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n  setTimeout(f, 17);\n};\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call = this._time = this._next = null;\n}\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function restart(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;else taskHead = this;\n      taskTail = this;\n    }\n\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function stop() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\nexport function timer(callback, delay, time) {\n  var t = new Timer();\n  t.restart(callback, delay, time);\n  return t;\n}\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n  var t = taskHead,\n      e;\n\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(),\n      delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0,\n      t1 = taskHead,\n      t2,\n      time = Infinity;\n\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}","import { Timer } from \"./timer\";\nexport default function (callback, delay, time) {\n  var t = new Timer();\n  delay = delay == null ? 0 : +delay;\n  t.restart(function (elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}","import { dispatch } from \"d3-dispatch\";\nimport { timer, timeout } from \"d3-timer\";\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\nexport default function (node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index,\n    // For context during callback.\n    group: group,\n    // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween; // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.\n\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.\n\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n\n      if (o.state === STARTED) return timeout(start); // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      } // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n          o.state = ENDED;\n          o.timer.stop();\n          delete schedules[i];\n        }\n    } // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n\n\n    timeout(function () {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    }); // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n\n    self.state = STARTED; // Initialize the tween, deleting null tween.\n\n    tween = new Array(n = self.tween.length);\n\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    } // Dispatch the end event.\n\n\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n\n    for (var i in schedules) {\n      return;\n    } // eslint-disable-line no-unused-vars\n\n\n    delete node.__transition;\n  }\n}","import { STARTING, ENDING, ENDED } from \"./transition/schedule\";\nexport default function (node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n  if (!schedules) return;\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) {\n      empty = false;\n      continue;\n    }\n\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}","import { get, set } from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function () {\n    var schedule = set(this, id),\n        tween = schedule.tween; // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error();\n  return function () {\n    var schedule = set(this, id),\n        tween = schedule.tween; // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n\n      for (var t = {\n        name: name,\n        value: value\n      }, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function (name, value) {\n  var id = this._id;\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n  transition.each(function () {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n  return function (node) {\n    return get(node, id).value[name];\n  };\n}","import { color } from \"d3-color\";\nimport { interpolateNumber, interpolateRgb, interpolateString } from \"d3-interpolate\";\nexport default function (a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber : b instanceof color ? interpolateRgb : (c = color(b)) ? (b = c, interpolateRgb) : interpolateString)(a, b);\n}","function removeFunction(id) {\n  return function () {\n    var parent = this.parentNode;\n\n    for (var i in this.__transition) {\n      if (+i !== id) return;\n    }\n\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function () {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}","import { selection } from \"d3-selection\";\nvar Selection = selection.prototype.constructor;\nexport default function () {\n  return new Selection(this._groups, this._parents);\n}","import { tweenValue } from \"./tween\";\n\nfunction textConstant(value) {\n  return function () {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function () {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function (value) {\n  return this.tween(\"text\", typeof value === \"function\" ? textFunction(tweenValue(this, \"text\", value)) : textConstant(value == null ? \"\" : value + \"\"));\n}","import { selection } from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nvar id = 0;\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\nexport default function transition(name) {\n  return selection().transition(name);\n}\nexport function newId() {\n  return ++id;\n}\nvar selection_prototype = selection.prototype;\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};","import { selector } from \"d3-selection\";\nimport { Transition } from \"./index\";\nimport schedule, { get } from \"./schedule\";\nexport default function (select) {\n  var name = this._name,\n      id = this._id;\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}","import { selectorAll } from \"d3-selection\";\nimport { Transition } from \"./index\";\nimport schedule, { get } from \"./schedule\";\nexport default function (select) {\n  var name = this._name,\n      id = this._id;\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}","import { matcher } from \"d3-selection\";\nimport { Transition } from \"./index\";\nexport default function (match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}","import { Transition } from \"./index\";\nexport default function (transition) {\n  if (transition._id !== this._id) throw new Error();\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}","import { Transition, newId } from \"./index\";\nimport schedule, { get } from \"./schedule\";\nexport default function () {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}","import { get, set, init } from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function (t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0,\n      on1,\n      sit = start(name) ? init : set;\n  return function () {\n    var schedule = sit(this, id),\n        on = schedule.on; // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n    schedule.on = on1;\n  };\n}\n\nexport default function (name, listener) {\n  var id = this._id;\n  return arguments.length < 2 ? get(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));\n}","import { interpolateTransformSvg as interpolateTransform } from \"d3-interpolate\";\nimport { namespace } from \"d3-selection\";\nimport { tweenValue } from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function () {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function () {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00, interpolate0;\n  return function () {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00, interpolate0;\n  return function () {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0,\n        value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0,\n        value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function (name, value) {\n  var fullname = namespace(name),\n      i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}","import { namespace } from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this,\n        i = value.apply(node, arguments);\n    return i && function (t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this,\n        i = value.apply(node, arguments);\n    return i && function (t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n\n  tween._value = value;\n  return tween;\n}\n\nexport default function (name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error();\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}","import { interpolateTransformCss as interpolateTransform } from \"d3-interpolate\";\nimport { style } from \"d3-selection\";\nimport { tweenValue } from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function () {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00, interpolate0;\n  return function () {\n    var value0 = style(this, name);\n    return value0 === value1 ? null : value0 === value00 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00, value10, interpolate0;\n  return function () {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null : value0 === value00 && value1 === value10 ? interpolate0 : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function (name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this.styleTween(name, styleRemove(name, i)).on(\"end.style.\" + name, styleRemoveEnd(name)) : this.styleTween(name, typeof value === \"function\" ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value)) : styleConstant(name, i, value + \"\"), priority);\n}","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this,\n        i = value.apply(node, arguments);\n    return i && function (t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n\n  tween._value = value;\n  return tween;\n}\n\nexport default function (name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error();\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}","import { get, init } from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function () {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function () {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function (value) {\n  var id = this._id;\n  return arguments.length ? this.each((typeof value === \"function\" ? delayFunction : delayConstant)(id, value)) : get(this.node(), id).delay;\n}","import { get, set } from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function () {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function () {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function (value) {\n  var id = this._id;\n  return arguments.length ? this.each((typeof value === \"function\" ? durationFunction : durationConstant)(id, value)) : get(this.node(), id).duration;\n}","import { get, set } from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error();\n  return function () {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function (value) {\n  var id = this._id;\n  return arguments.length ? this.each(easeConstant(id, value)) : get(this.node(), id).ease;\n}","var exponent = 3;\nexport var polyIn = function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n  return polyIn;\n}(exponent);\nexport var polyOut = function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n  return polyOut;\n}(exponent);\nexport var polyInOut = function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n  return polyInOut;\n}(exponent);","var pi = Math.PI,\n    halfPi = pi / 2;\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}","var overshoot = 1.70158;\nexport var backIn = function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n  return backIn;\n}(overshoot);\nexport var backOut = function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n  return backOut;\n}(overshoot);\nexport var backInOut = function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n  return backInOut;\n}(overshoot);","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\nexport var elasticIn = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function (a) {\n    return custom(a, p * tau);\n  };\n\n  elasticIn.period = function (p) {\n    return custom(a, p);\n  };\n\n  return elasticIn;\n}(amplitude, period);\nexport var elasticOut = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function (a) {\n    return custom(a, p * tau);\n  };\n\n  elasticOut.period = function (p) {\n    return custom(a, p);\n  };\n\n  return elasticOut;\n}(amplitude, period);\nexport var elasticInOut = function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function (a) {\n    return custom(a, p * tau);\n  };\n\n  elasticInOut.period = function (p) {\n    return custom(a, p);\n  };\n\n  return elasticInOut;\n}(amplitude, period);","import { Transition, newId } from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport { easeCubicInOut } from \"d3-ease\";\nimport { now } from \"d3-timer\";\nvar defaultTiming = {\n  time: null,\n  // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n\n  return timing;\n}\n\nexport default function (name) {\n  var id, timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}","export function cubicIn(t) {\n  return t * t * t;\n}\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}","import { selection } from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;","import interrupt from \"../interrupt\";\nexport default function (name) {\n  return this.each(function () {\n    interrupt(this, name);\n  });\n}","import { dispatch } from \"d3-dispatch\";\nimport { dragDisable, dragEnable } from \"d3-drag\";\nimport { interpolate } from \"d3-interpolate\";\nimport { customEvent, event, mouse, select } from \"d3-selection\";\nimport { interrupt } from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, { nopropagation } from \"./noevent\";\nvar MODE_DRAG = {\n  name: \"drag\"\n},\n    MODE_SPACE = {\n  name: \"space\"\n},\n    MODE_HANDLE = {\n  name: \"handle\"\n},\n    MODE_CENTER = {\n  name: \"center\"\n};\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function input(x, e) {\n    return x && [[x[0], e[0][1]], [x[1], e[1][1]]];\n  },\n  output: function output(xy) {\n    return xy && [xy[0][0], xy[1][0]];\n  }\n};\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function input(y, e) {\n    return y && [[e[0][0], y[0]], [e[1][0], y[1]]];\n  },\n  output: function output(xy) {\n    return xy && [xy[0][1], xy[1][1]];\n  }\n};\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function input(xy) {\n    return xy;\n  },\n  output: function output(xy) {\n    return xy;\n  }\n};\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {\n    type: t\n  };\n} // Ignore right-click, since that should open the context menu.\n\n\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n} // Like d3.local, but with the name “__brush” rather than auto-generated.\n\n\nfunction local(node) {\n  while (!node.__brush) {\n    if (!(node = node.parentNode)) return;\n  }\n\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\nexport function brushX() {\n  return brush(X);\n}\nexport function brushY() {\n  return brush(Y);\n}\nexport default function () {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group.property(\"__brush\", initialize).selectAll(\".overlay\").data([type(\"overlay\")]);\n    overlay.enter().append(\"rect\").attr(\"class\", \"overlay\").attr(\"pointer-events\", \"all\").attr(\"cursor\", cursors.overlay).merge(overlay).each(function () {\n      var extent = local(this).extent;\n      select(this).attr(\"x\", extent[0][0]).attr(\"y\", extent[0][1]).attr(\"width\", extent[1][0] - extent[0][0]).attr(\"height\", extent[1][1] - extent[0][1]);\n    });\n    group.selectAll(\".selection\").data([type(\"selection\")]).enter().append(\"rect\").attr(\"class\", \"selection\").attr(\"cursor\", cursors.selection).attr(\"fill\", \"#777\").attr(\"fill-opacity\", 0.3).attr(\"stroke\", \"#fff\").attr(\"shape-rendering\", \"crispEdges\");\n    var handle = group.selectAll(\".handle\").data(dim.handles, function (d) {\n      return d.type;\n    });\n    handle.exit().remove();\n    handle.enter().append(\"rect\").attr(\"class\", function (d) {\n      return \"handle handle--\" + d.type;\n    }).attr(\"cursor\", function (d) {\n      return cursors[d.type];\n    });\n    group.each(redraw).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function (group, selection) {\n    if (group.selection) {\n      group.on(\"start.brush\", function () {\n        emitter(this, arguments).beforestart().start();\n      }).on(\"interrupt.brush end.brush\", function () {\n        emitter(this, arguments).end();\n      }).tween(\"brush\", function () {\n        var that = this,\n            state = that.__brush,\n            emit = emitter(that, arguments),\n            selection0 = state.selection,\n            selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n            i = interpolate(selection0, selection1);\n\n        function tween(t) {\n          state.selection = t === 1 && empty(selection1) ? null : i(t);\n          redraw.call(that);\n          emit.brush();\n        }\n\n        return selection0 && selection1 ? tween : tween(1);\n      });\n    } else {\n      group.each(function () {\n        var that = this,\n            args = arguments,\n            state = that.__brush,\n            selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n            emit = emitter(that, args).beforestart();\n        interrupt(that);\n        state.selection = selection1 == null || empty(selection1) ? null : selection1;\n        redraw.call(that);\n        emit.start().brush().end();\n      });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\").style(\"display\", null).attr(\"x\", selection[0][0]).attr(\"y\", selection[0][1]).attr(\"width\", selection[1][0] - selection[0][0]).attr(\"height\", selection[1][1] - selection[0][1]);\n      group.selectAll(\".handle\").style(\"display\", null).attr(\"x\", function (d) {\n        return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;\n      }).attr(\"y\", function (d) {\n        return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;\n      }).attr(\"width\", function (d) {\n        return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize;\n      }).attr(\"height\", function (d) {\n        return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize;\n      });\n    } else {\n      group.selectAll(\".selection,.handle\").style(\"display\", \"none\").attr(\"x\", null).attr(\"y\", null).attr(\"width\", null).attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function beforestart() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function start() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function brush() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function end() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function emit(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) {\n      if (event.changedTouches.length < event.touches.length) return noevent();\n    } else if (touchending) return;\n\n    if (!filter.apply(this, arguments)) return;\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : event.altKey ? MODE_CENTER : MODE_HANDLE,\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0],\n        w0,\n        w1,\n        N = extent[0][1],\n        n0,\n        n1,\n        E = extent[1][0],\n        e0,\n        e1,\n        S = extent[1][1],\n        s0,\n        s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n    var group = select(that).attr(\"pointer-events\", \"none\");\n    var overlay = group.selectAll(\".overlay\").attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group.on(\"touchmove.brush\", moved, true).on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view).on(\"keydown.brush\", keydowned, true).on(\"keyup.brush\", keyupped, true).on(\"mousemove.brush\", moved, true).on(\"mouseup.brush\", ended, true);\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;else lockX = true;\n      }\n\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG:\n          {\n            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n            break;\n          }\n\n        case MODE_HANDLE:\n          {\n            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n            break;\n          }\n\n        case MODE_CENTER:\n          {\n            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n            break;\n          }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function () {\n          touchending = null;\n        }, 500); // Ghost clicks are delayed!\n\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            shifting = signX && signY;\n            break;\n          }\n\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_HANDLE) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n              move();\n            }\n\n            break;\n          }\n\n        case 32:\n          {\n            // SPACE; takes priority over ALT\n            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;\n              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;\n              mode = MODE_SPACE;\n              overlay.attr(\"cursor\", cursors.selection);\n              move();\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            if (shifting) {\n              lockX = lockY = shifting = false;\n              move();\n            }\n\n            break;\n          }\n\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n              move();\n            }\n\n            break;\n          }\n\n        case 32:\n          {\n            // SPACE\n            if (mode === MODE_SPACE) {\n              if (event.altKey) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n              } else {\n                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n              }\n\n              overlay.attr(\"cursor\", cursors[type]);\n              move();\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {\n      selection: null\n    };\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function (_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function (_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;","import { range } from \"d3-array\";\nimport { max, tau } from \"./math\";\n\nfunction compareValue(compare) {\n  return function (a, b) {\n    return compare(a.source.value + a.target.value, b.source.value + b.target.value);\n  };\n}\n\nexport default function () {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j; // Compute the sum.\n\n    k = 0, i = -1;\n\n    while (++i < n) {\n      x = 0, j = -1;\n\n      while (++j < n) {\n        x += matrix[i][j];\n      }\n\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    } // Sort groups…\n\n\n    if (sortGroups) groupIndex.sort(function (a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    }); // Sort subgroups…\n\n    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {\n      d.sort(function (a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    }); // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n; // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n\n    x = 0, i = -1;\n\n    while (++i < n) {\n      x0 = x, j = -1;\n\n      while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    } // Generate chords for each (non-empty) subgroup-subgroup link.\n\n\n    i = -1;\n\n    while (++i < n) {\n      j = i - 1;\n\n      while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n\n        if (source.value || target.value) {\n          chords.push(source.value < target.value ? {\n            source: target,\n            target: source\n          } : {\n            source: source,\n            target: target\n          });\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function (_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function (_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function (_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function (_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}","export var slice = Array.prototype.slice;","export default function (x) {\n  return function () {\n    return x;\n  };\n}","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path();\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function moveTo(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function lineTo(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function quadraticCurveTo(x1, y1, x, y) {\n    this._ += \"Q\" + +x1 + \",\" + +y1 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + +x1 + \",\" + +y1 + \",\" + +x2 + \",\" + +y2 + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n      // Equivalently, is (x1,y1) coincident with (x2,y2)?\n      // Or, is the radius zero? Line to (x1,y1).\n      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n          this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n        } // Otherwise, draw an arc!\n        else {\n            var x20 = x2 - x0,\n                y20 = y2 - y0,\n                l21_2 = x21 * x21 + y21 * y21,\n                l20_2 = x20 * x20 + y20 * y20,\n                l21 = Math.sqrt(l21_2),\n                l01 = Math.sqrt(l01_2),\n                l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n                t01 = l / l01,\n                t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n            if (Math.abs(t01 - 1) > epsilon) {\n              this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n            }\n\n            this._ += \"A\" + r + \",\" + r + \",0,0,\" + +(y01 * x20 > x01 * y20) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n          }\n  },\n  arc: function arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(\"negative radius: \" + r); // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n        this._ += \"L\" + x0 + \",\" + y0;\n      } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n        this._ += \"A\" + r + \",\" + r + \",0,\" + +(da >= pi) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n      }\n  },\n  rect: function rect(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + +w + \"v\" + +h + \"h\" + -w + \"Z\";\n  },\n  toString: function toString() {\n    return this._;\n  }\n};\nexport default path;","import { slice } from \"./array\";\nimport constant from \"./constant\";\nimport { cos, halfPi, sin } from \"./math\";\nimport { path } from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function () {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n    if (!context) context = buffer = path();\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function (_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function (_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;\n  };\n\n  return ribbon;\n}","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function has(key) {\n    return prefix + key in this;\n  },\n  get: function get(key) {\n    return this[prefix + key];\n  },\n  set: function set(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function remove(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function clear() {\n    for (var property in this) {\n      if (property[0] === prefix) delete this[property];\n    }\n  },\n  keys: function keys() {\n    var keys = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) keys.push(property.slice(1));\n    }\n\n    return keys;\n  },\n  values: function values() {\n    var values = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) values.push(this[property]);\n    }\n\n    return values;\n  },\n  entries: function entries() {\n    var entries = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) entries.push({\n        key: property.slice(1),\n        value: this[property]\n      });\n    }\n\n    return entries;\n  },\n  size: function size() {\n    var size = 0;\n\n    for (var property in this) {\n      if (property[0] === prefix) ++size;\n    }\n\n    return size;\n  },\n  empty: function empty() {\n    for (var property in this) {\n      if (property[0] === prefix) return false;\n    }\n\n    return true;\n  },\n  each: function each(f) {\n    for (var property in this) {\n      if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map(); // Copy constructor.\n\n  if (object instanceof Map) object.each(function (value, key) {\n    map.set(key, value);\n  }); // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (f == null) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f(o = object[i], i, object), o);\n      }\n    } // Convert object to map.\n    else if (object) for (var key in object) {\n        map.set(key, object[key]);\n      }\n  return map;\n}\n\nexport default map;","import { default as map, prefix } from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function add(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set(); // Copy constructor.\n\n  if (object instanceof Set) object.each(function (value) {\n    set.add(value);\n  }); // Otherwise, assume it’s an array.\n  else if (object) {\n      var i = -1,\n          n = object.length;\n      if (f == null) while (++i < n) {\n        set.add(object[i]);\n      } else while (++i < n) {\n        set.add(f(object[i], i, object));\n      }\n    }\n  return set;\n}\n\nexport default set;","var array = Array.prototype;\nexport var slice = array.slice;","import { max, range, tickStep } from \"d3-array\";\nimport { slice } from \"./array\";\nimport { blurX, blurY } from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function () {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20,\n      // blur radius\n  k = 2,\n      // log2(grid cell size)\n  o = r * 3,\n      // grid offset, to pad for blur\n  n = dx + o * 2 >> k,\n      // grid width\n  m = dy + o * 2 >> k,\n      // grid height\n  threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n    data.forEach(function (d, i, data) {\n      var xi = +x(d, i, data) + o >> k,\n          yi = +y(d, i, data) + o >> k,\n          wi = +weight(d, i, data);\n\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    }); // TODO Optimize.\n\n    blurX({\n      width: n,\n      height: m,\n      data: values0\n    }, {\n      width: n,\n      height: m,\n      data: values1\n    }, r >> k);\n    blurY({\n      width: n,\n      height: m,\n      data: values1\n    }, {\n      width: n,\n      height: m,\n      data: values0\n    }, r >> k);\n    blurX({\n      width: n,\n      height: m,\n      data: values0\n    }, {\n      width: n,\n      height: m,\n      data: values1\n    }, r >> k);\n    blurY({\n      width: n,\n      height: m,\n      data: values1\n    }, {\n      width: n,\n      height: m,\n      data: values0\n    }, r >> k);\n    blurX({\n      width: n,\n      height: m,\n      data: values0\n    }, {\n      width: n,\n      height: m,\n      data: values1\n    }, r >> k);\n    blurY({\n      width: n,\n      height: m,\n      data: values1\n    }, {\n      width: n,\n      height: m,\n      data: values0\n    }, r >> k);\n    var tz = threshold(values0); // Convert number of thresholds into uniform thresholds.\n\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours().thresholds(tz).size([n, m])(values0).map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  } // TODO Optimize.\n\n\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = dx + o * 2 >> k;\n    m = dy + o * 2 >> k;\n    return density;\n  }\n\n  density.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function (_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function (_) {\n    if (!arguments.length) return [dx, dy];\n\n    var _0 = Math.ceil(_[0]),\n        _1 = Math.ceil(_[1]);\n\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function (_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function (_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function () {\n  return (Math.random() - 0.5) * 1e-6;\n}","export default function (d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {\n    data: d\n  },\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.\n\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  } // Is the new point is exactly coincident with the existing point?\n\n\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.\n\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d,\n      i,\n      n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity; // Compute the points and their extent.\n\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  } // If there were no (valid) points, inherit the existing extent.\n\n\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1; // Expand the tree to cover the new points.\n\n  this.cover(x0, y0).cover(x1, y1); // Add the new points.\n\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}","export default function (x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1; // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  } // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n      var z = x1 - x0,\n          node = this._root,\n          parent,\n          i;\n\n      switch (i = (y < (y0 + y1) / 2) << 1 | x < (x0 + x1) / 2) {\n        case 0:\n          {\n            do {\n              parent = new Array(4), parent[i] = node, node = parent;\n            } while ((z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1));\n\n            break;\n          }\n\n        case 1:\n          {\n            do {\n              parent = new Array(4), parent[i] = node, node = parent;\n            } while ((z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1));\n\n            break;\n          }\n\n        case 2:\n          {\n            do {\n              parent = new Array(4), parent[i] = node, node = parent;\n            } while ((z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y));\n\n            break;\n          }\n\n        case 3:\n          {\n            do {\n              parent = new Array(4), parent[i] = node, node = parent;\n            } while ((z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y));\n\n            break;\n          }\n      }\n\n      if (this._root && this._root.length) this._root = node;\n    } // If the quadtree covers the point already, just return.\n    else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}","export default function (node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}","export function defaultX(d) {\n  return d[0];\n}\nexport default function (_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}","export function defaultY(d) {\n  return d[1];\n}\nexport default function (_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}","import tree_add, { addAll as tree_addAll } from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, { removeAll as tree_removeAll } from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, { defaultX } from \"./x\";\nimport tree_y, { defaultY } from \"./y\";\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {\n    data: leaf.data\n  },\n      next = copy;\n\n  while (leaf = leaf.next) {\n    next = next.next = {\n      data: leaf.data\n    };\n  }\n\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function () {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n  if (!node) return copy;\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n  nodes = [{\n    source: node,\n    target: copy._root = new Array(4)\n  }];\n\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({\n          source: child,\n          target: node.target[i] = new Array(4)\n        });else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;","export default function () {\n  var data = [];\n  this.visit(function (node) {\n    if (!node.length) do {\n      data.push(node.data);\n    } while (node = node.next);\n  });\n  return data;\n}","export default function (_) {\n  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}","import Quad from \"./quad\";\nexport default function (x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.\n\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n      quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.\n\n      if (i = (y >= ym) << 1 | x >= xm) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    } // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n        var dx = x - +this._x.call(null, node.data),\n            dy = y - +this._y.call(null, node.data),\n            d2 = dx * dx + dy * dy;\n\n        if (d2 < radius) {\n          var d = Math.sqrt(radius = d2);\n          x0 = x - d, y0 = y - d;\n          x3 = x + d, y3 = y + d;\n          data = node.data;\n        }\n      }\n  }\n\n  return data;\n}","export default function (d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return this; // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n  } // Find the point to remove.\n\n  while (node.data !== d) {\n    if (!(previous = node, node = node.next)) return this;\n  }\n\n  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.\n\n  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.\n\n  if (!parent) return this._root = next, this; // Remove this leaf.\n\n  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.\n\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n    if (retainer) retainer[j] = node;else this._root = node;\n  }\n\n  return this;\n}\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) {\n    this.remove(data[i]);\n  }\n\n  return this;\n}","export default function () {\n  return this._root;\n}","export default function () {\n  var size = 0;\n  this.visit(function (node) {\n    if (!node.length) do {\n      ++size;\n    } while (node = node.next);\n  });\n  return size;\n}","import Quad from \"./quad\";\nexport default function (callback) {\n  var quads = [],\n      q,\n      node = this._root,\n      child,\n      x0,\n      y0,\n      x1,\n      y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n\n  return this;\n}","import Quad from \"./quad\";\nexport default function (callback) {\n  var quads = [],\n      next = [],\n      q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    var node = q.node;\n\n    if (node.length) {\n      var child,\n          x0 = q.x0,\n          y0 = q.y0,\n          x1 = q.x1,\n          y1 = q.y1,\n          xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n\n    next.push(q);\n  }\n\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n\n  return this;\n}","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport { map } from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function (links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function (_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function (_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function (_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}","import { dispatch } from \"d3-dispatch\";\nimport { map } from \"d3-collection\";\nimport { timer } from \"d3-timer\";\nexport function x(d) {\n  return d.x;\n}\nexport function y(d) {\n  return d.y;\n}\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\nexport default function (_nodes) {\n  var simulation,\n      _alpha = 1,\n      _alphaMin = 0.001,\n      _alphaDecay = 1 - Math.pow(_alphaMin, 1 / 300),\n      _alphaTarget = 0,\n      _velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (_nodes == null) _nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n\n    if (_alpha < _alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i,\n        n = _nodes.length,\n        node;\n    _alpha += (_alphaTarget - _alpha) * _alphaDecay;\n    forces.each(function (force) {\n      force(_alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = _nodes[i];\n      if (node.fx == null) node.x += node.vx *= _velocityDecay;else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= _velocityDecay;else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = _nodes.length, node; i < n; ++i) {\n      node = _nodes[i], node.index = i;\n\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i),\n            angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(_nodes);\n    return force;\n  }\n\n  initializeNodes();\n  return simulation = {\n    tick: tick,\n    restart: function restart() {\n      return stepper.restart(step), simulation;\n    },\n    stop: function stop() {\n      return stepper.stop(), simulation;\n    },\n    nodes: function nodes(_) {\n      return arguments.length ? (_nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : _nodes;\n    },\n    alpha: function alpha(_) {\n      return arguments.length ? (_alpha = +_, simulation) : _alpha;\n    },\n    alphaMin: function alphaMin(_) {\n      return arguments.length ? (_alphaMin = +_, simulation) : _alphaMin;\n    },\n    alphaDecay: function alphaDecay(_) {\n      return arguments.length ? (_alphaDecay = +_, simulation) : +_alphaDecay;\n    },\n    alphaTarget: function alphaTarget(_) {\n      return arguments.length ? (_alphaTarget = +_, simulation) : _alphaTarget;\n    },\n    velocityDecay: function velocityDecay(_) {\n      return arguments.length ? (_velocityDecay = 1 - _, simulation) : 1 - _velocityDecay;\n    },\n    force: function force(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n    find: function find(x, y, radius) {\n      var i = 0,\n          n = _nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n      if (radius == null) radius = Infinity;else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n    on: function on(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport { quadtree } from \"d3-quadtree\";\nimport { x, y } from \"./simulation\";\nexport default function () {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i,\n        n = nodes.length,\n        tree = quadtree(nodes, x, y).visitAfter(accumulate);\n\n    for (alpha = _, i = 0; i < n; ++i) {\n      node = nodes[i], tree.visit(apply);\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    strengths = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n    }\n  }\n\n  function accumulate(quad) {\n    var strength = 0,\n        q,\n        c,\n        weight = 0,\n        x,\n        y,\n        i; // For internal nodes, accumulate forces from child quadrants.\n\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n\n      quad.x = x / weight;\n      quad.y = y / weight;\n    } // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n        q = quad;\n        q.x = q.data.x;\n        q.y = q.data.y;\n\n        do {\n          strength += strengths[q.data.index];\n        } while (q = q.next);\n      }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n\n      return true;\n    } // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.\n\n\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do {\n      if (quad.data !== node) {\n        w = strengths[quad.data.index] * alpha / l;\n        node.vx += x * w;\n        node.vy += y * w;\n      }\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function (_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function (_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function (_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function (x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\n  var i,\n      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n}","import formatDecimal from \"./formatDecimal\";\nexport default function (x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function () {\n  return this.fill + this.align + this.sign + this.symbol + (this.zero ? \"0\" : \"\") + (this.width == null ? \"\" : Math.max(1, this.width | 0)) + (this.comma ? \",\" : \"\") + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0)) + (this.trim ? \"~\" : \"\") + this.type;\n};","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function (s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\":\n        i0 = i1 = i;\n        break;\n\n      case \"0\":\n        if (i0 === 0) i0 = i;\n        i1 = i;\n        break;\n\n      default:\n        if (i0 > 0) {\n          if (!+s[i]) break out;\n          i0 = 0;\n        }\n\n        break;\n    }\n  }\n\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}","import formatDecimal from \"./formatDecimal\";\nexport var prefixExponent;\nexport default function (x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join(\"0\") : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i) : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}","import formatLocale from \"./locale\";\nvar locale;\nexport var format;\nexport var formatPrefix;\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}","import formatDecimal from \"./formatDecimal\";\nexport default function (x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\nexport default {\n  \"%\": function _(x, p) {\n    return (x * 100).toFixed(p);\n  },\n  \"b\": function b(x) {\n    return Math.round(x).toString(2);\n  },\n  \"c\": function c(x) {\n    return x + \"\";\n  },\n  \"d\": function d(x) {\n    return Math.round(x).toString(10);\n  },\n  \"e\": function e(x, p) {\n    return x.toExponential(p);\n  },\n  \"f\": function f(x, p) {\n    return x.toFixed(p);\n  },\n  \"g\": function g(x, p) {\n    return x.toPrecision(p);\n  },\n  \"o\": function o(x) {\n    return Math.round(x).toString(8);\n  },\n  \"p\": function p(x, _p) {\n    return formatRounded(x * 100, _p);\n  },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function X(x) {\n    return Math.round(x).toString(16).toUpperCase();\n  },\n  \"x\": function x(_x) {\n    return Math.round(_x).toString(16);\n  }\n};","export default function (x) {\n  return x;\n}","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport { prefixExponent } from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\nvar prefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"];\nexport default function (locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type; // The \"n\" type is an alias for \",g\".\n\n    if (type === \"n\") comma = true, type = \"g\"; // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\"; // If zero fill is specified, padding goes after sign and before digits.\n\n    if (zero || fill === \"0\" && align === \"=\") zero = true, fill = \"0\", align = \"=\"; // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\"; // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n\n    precision = precision == null ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i,\n          n,\n          c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value; // Perform the initial formatting.\n\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision); // Trim insignificant zeros.\n\n        if (trim) value = formatTrim(value); // If a negative value rounds to zero during formatting, treat as positive.\n\n        if (valueNegative && +value === 0) valueNegative = false; // Compute the prefix and suffix.\n\n        valuePrefix = (valueNegative ? sign === \"(\" ? sign : \"-\" : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\"); // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      } // If the fill character is not \"0\", grouping is applied before padding.\n\n\n      if (comma && !zero) value = group(value, Infinity); // Compute the padding.\n\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\"; // If the fill character is \"0\", grouping is applied after padding.\n\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\"; // Reconstruct the final output based on the desired alignment.\n\n      switch (align) {\n        case \"<\":\n          value = valuePrefix + value + valueSuffix + padding;\n          break;\n\n        case \"=\":\n          value = valuePrefix + padding + value + valueSuffix;\n          break;\n\n        case \"^\":\n          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n          break;\n\n        default:\n          value = padding + valuePrefix + value + valueSuffix;\n          break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function () {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function (value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}","export default function (grouping, thousands) {\n  return function (value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}","export default function (numerals) {\n  return function (value) {\n    return value.replace(/[0-9]/g, function (i) {\n      return numerals[+i];\n    });\n  };\n}","import exponent from \"./exponent\";\nexport default function (step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function noop() {}","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import adder from \"./adder\";\nimport { atan2, cos, quarterPi, radians, sin, tau } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nexport var areaRingSum = adder();\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function sphere() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u)); // Advance the previous points.\n\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function (object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}","import { asin, atan2, cos, sin, sqrt } from \"./math\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder\";\nimport { areaStream, areaRingSum } from \"./area\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport { abs, degrees, epsilon, radians } from \"./math\";\nimport stream from \"./stream\";\nvar lambda0,\n    phi0,\n    lambda1,\n    phi1,\n    // bounds\nlambda2,\n    // previous lambda-coordinate\nlambda00,\n    phi00,\n    // first point\np0,\n    // previous 3D point\ndeltaSum = adder(),\n    ranges,\n    range;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function polygonStart() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > epsilon) phi1 = 90;else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n} // Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\n\n\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function (feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream); // First, sort ranges by their minimum longitudes.\n\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.\n\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    } // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n\n\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];\n}","import { asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point\nx0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n}; // Arithmetic mean of Cartesian vectors.\n\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\n\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m),\n      // line weight = angle\n  v = m && -w / m; // area weight multiplier\n\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function (object) {\n  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.\n\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose\";\nimport { asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian\";\nimport constant from \"./constant\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math\";\nimport { rotateRadians } from \"./rotation\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import noop from \"../noop\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","import { abs, epsilon } from \"./math\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","import adder from \"./adder\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian\";\nimport { asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau } from \"./math\";\nvar sum = adder();\nexport default function (polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport { epsilon, halfPi } from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian\";\nimport { circleStream } from \"../circle\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","import { abs, epsilon } from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","import adder from \"./adder\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","import adder from \"../adder\";\nimport { abs } from \"../math\";\nimport noop from \"../noop\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","export default function (x) {\n  return x;\n}","import noop from \"../noop\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { sqrt } from \"../math\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math\";\nimport noop from \"../noop\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder\";\nimport { sqrt } from \"../math\";\nimport noop from \"../noop\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { cartesian } from \"../cartesian\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math\";\nimport { transformer } from \"../transform\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math\";\nimport { rotateRadians } from \"../rotation\";\nimport { transformer } from \"../transform\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit\";\nimport resample from \"./resample\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { asin, atan2, cos, sin, sqrt } from \"../math\";\nexport function azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [k * cy * sin(x), k * sin(y)];\n  };\n}\nexport function azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [atan2(x * sc, z * cc), asin(z && y * sc / z)];\n  };\n}","import { asin, sqrt } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function (cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function (z) {\n  return 2 * asin(z / 2);\n});\nexport default function () {\n  return projection(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);\n}","import { acos, sin } from \"../math\";\nimport { azimuthalRaw, azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport var azimuthalEquidistantRaw = azimuthalRaw(function (c) {\n  return (c = acos(c)) && c / sin(c);\n});\nazimuthalEquidistantRaw.invert = azimuthalInvert(function (z) {\n  return z;\n});\nexport default function () {\n  return projection(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import projection from \"./index\";\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\nequirectangularRaw.invert = equirectangularRaw;\nexport default function () {\n  return projection(equirectangularRaw).scale(152.63);\n}","import { abs, atan2, cos, epsilon, sign, sin, sqrt } from \"../math\";\nimport { conicProjection } from \"./conic\";\nimport { equirectangularRaw } from \"./equirectangular\";\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y,\n        nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function (x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\nexport default function () {\n  return conicProjection(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);\n}","import projection from \"./index.js\";\nimport { abs, asin, cos, epsilon2, sin, sqrt } from \"../math.js\";\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)),\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n  return [lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];\n}\n\nequalEarthRaw.invert = function (x, y) {\n  var l = y,\n      l2 = l * l,\n      l6 = l2 * l2 * l2;\n\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n\n  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l), asin(sin(l) / M)];\n};\n\nexport default function () {\n  return projection(equalEarthRaw).scale(177.158);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y),\n      k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\ngnomonicRaw.invert = azimuthalInvert(atan);\nexport default function () {\n  return projection(gnomonicRaw).scale(144.049).clipAngle(60);\n}","import projection from \"./index\";\nimport { abs, epsilon } from \"../math\";\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarth1Raw).scale(175.295);\n}","import { asin, cos, epsilon, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\northographicRaw.invert = azimuthalInvert(asin);\nexport default function () {\n  return projection(orthographicRaw).scale(249.5).clipAngle(90 + epsilon);\n}","import { atan, cos, sin } from \"../math\";\nimport { azimuthalInvert } from \"./azimuthal\";\nimport projection from \"./index\";\nexport function stereographicRaw(x, y) {\n  var cy = cos(y),\n      k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\nstereographicRaw.invert = azimuthalInvert(function (z) {\n  return 2 * atan(z);\n});\nexport default function () {\n  return projection(stereographicRaw).scale(250).clipAngle(142);\n}","import { atan, exp, halfPi, log, tan } from \"../math\";\nimport { mercatorProjection } from \"./mercator\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;else while (--i >= 0) {\n    sum += children[i].value;\n  }\n  node.value = sum;\n}\n\nexport default function () {\n  return this.eachAfter(count);\n}","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n\n  do {\n    node.height = height;\n  } while ((node = node.parent) && node.height < ++height);\n}\nexport function Node(data) {\n  this.data = data;\n  this.depth = this.height = 0;\n  this.parent = null;\n}\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};","export default function (callback) {\n  var node = this,\n      current,\n      next = [node],\n      children,\n      i,\n      n;\n\n  do {\n    current = next.reverse(), next = [];\n\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      next = [],\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  while (node = next.pop()) {\n    callback(node);\n  }\n\n  return this;\n}","export default function (callback) {\n  var node = this,\n      nodes = [node],\n      children,\n      i;\n\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n\n  return this;\n}","export default function (value) {\n  return this.eachAfter(function (node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n\n    while (--i >= 0) {\n      sum += children[i].value;\n    }\n\n    node.value = sum;\n  });\n}","export default function (compare) {\n  return this.eachBefore(function (node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}","export default function (end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n\n  var k = nodes.length;\n\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n\n  return c;\n}","export default function () {\n  var node = this,\n      nodes = [node];\n\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n\n  return nodes;\n}","export default function () {\n  var nodes = [];\n  this.each(function (node) {\n    nodes.push(node);\n  });\n  return nodes;\n}","export default function () {\n  var leaves = [];\n  this.eachBefore(function (node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}","export default function () {\n  var root = this,\n      links = [];\n  root.each(function (node) {\n    if (node !== root) {\n      // Don’t include the root’s parent, if any.\n      links.push({\n        source: node.parent,\n        target: node\n      });\n    }\n  });\n  return links;\n}","export var slice = Array.prototype.slice;\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}","export default function (node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}","export default function (parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}","import { Node } from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n} // function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\n\n\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n} // This function works analogously to nextLeft.\n\n\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n} // Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\n\n\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n} // All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\n\n\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n} // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\n\n\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n\n  this.a = this; // ancestor\n\n  this.z = 0; // prelim\n\n  this.m = 0; // mod\n\n  this.c = 0; // change\n\n  this.s = 0; // shift\n\n  this.t = null; // thread\n\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n} // Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\n\nexport default function () {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root); // Compute the layout using Buchheim et al.’s algorithm.\n\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk); // If a fixed node size is specified, scale x and y.\n\n    if (nodeSize) root.eachBefore(sizeNode); // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n        var left = root,\n            right = root,\n            bottom = root;\n        root.eachBefore(function (node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var s = left === right ? 1 : separation(left, right) / 2,\n            tx = s - left.x,\n            kx = dx / (right.x + s + tx),\n            ky = dy / (bottom.depth || 1);\n        root.eachBefore(function (node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n    return root;\n  } // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n\n\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  } // Computes all real x-coordinates by summing up the modifiers recursively.\n\n\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  } // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n\n\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function (x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function (x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];\n  };\n\n  tree.nodeSize = function (x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;\n  };\n\n  return tree;\n}","export default function (parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nexport var phi = (1 + Math.sqrt(5)) / 2;\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx,\n      dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.\n\n    do {\n      sumValue = nodes[i1++].value;\n    } while (!sumValue && i1 < n);\n\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.\n\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n\n      if (newRatio > minRatio) {\n        sumValue -= nodeValue;\n        break;\n      }\n\n      minRatio = newRatio;\n    } // Position and record the row orientation.\n\n\n    rows.push(row = {\n      value: sumValue,\n      dice: dx < dy,\n      children: nodes.slice(i0, i1)\n    });\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\nexport default (function custom(ratio) {\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function (x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport { phi, squarifyRatio } from \"./squarify\";\nexport default (function custom(ratio) {\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && rows.ratio === ratio) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) {\n          row.value += nodes[i].value;\n        }\n\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function (x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n} // Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\n\n\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) {\n      --size;\n    }\n\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function (points) {\n  if ((n = points.length) < 3) return null;\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) {\n    sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  }\n\n  sortedPoints.sort(lexicographicOrder);\n\n  for (i = 0; i < n; ++i) {\n    flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n  }\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.\n\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = []; // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n\n  for (i = upperIndexes.length - 1; i >= 0; --i) {\n    hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  }\n\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) {\n    hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n  }\n\n  return hull;\n}","export default function () {\n  return Math.random();\n}","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function () {\n      var y; // If available, use the second previously-generated uniform random.\n\n      if (x != null) y = x, x = null; // Otherwise, generate a new x and y.\n      else do {\n          x = source() * 2 - 1;\n          y = source() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n  return randomNormal;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;else max -= min;\n    return function () {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n  return randomUniform;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function () {\n      for (var sum = 0, i = 0; i < n; ++i) {\n        sum += source();\n      }\n\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n  return randomIrwinHall;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function () {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n  return randomLogNormal;\n})(defaultSource);","var array = Array.prototype;\nexport var map = array.map;\nexport var slice = array.slice;","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function () {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n  return randomBates;\n})(defaultSource);","import defaultSource from \"./defaultSource\";\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function () {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n  return randomExponential;\n})(defaultSource);","import { map } from \"d3-collection\";\nimport { slice } from \"./array\";\nexport var implicit = {\n  name: \"implicit\"\n};\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\",\n        i = index.get(key);\n\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function (_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1,\n        n = _.length,\n        d,\n        key;\n\n    while (++i < n) {\n      if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    }\n\n    return scale;\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function () {\n    return ordinal().domain(domain).range(range).unknown(unknown);\n  };\n\n  return scale;\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function (x) {\n  return +x;\n}","import { bisect } from \"d3-array\";\nimport { interpolate as interpolateValue, interpolateRound } from \"d3-interpolate\";\nimport { map, slice } from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\nvar unit = [0, 1];\nexport function deinterpolateLinear(a, b) {\n  return (b -= a = +a) ? function (x) {\n    return (x - a) / b;\n  } : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function (a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function (x) {\n      return x <= a ? 0 : x >= b ? 1 : d(x);\n    };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function (a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function (t) {\n      return t <= 0 ? a : t >= 1 ? b : r(t);\n    };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0],\n      d1 = domain[1],\n      r0 = range[0],\n      r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function (x) {\n    return r0(d0(x));\n  };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1; // Reverse descending domains.\n\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function (x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp());\n} // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function (y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function (_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}","import { tickStep } from \"d3-array\";\nimport { format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound } from \"d3-format\";\nexport default function (domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\n  switch (specifier.type) {\n    case \"s\":\n      {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return formatPrefix(specifier, value);\n      }\n\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n\n    case \"f\":\n    case \"%\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n  }\n\n  return format(specifier);\n}","import exponent from \"./exponent\";\nexport default function (step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}","import exponent from \"./exponent\";\nexport default function (step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}","import { ticks, tickIncrement } from \"d3-array\";\nimport { interpolateNumber as reinterpolate } from \"d3-interpolate\";\nimport { default as continuous, copy, deinterpolateLinear as deinterpolate } from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function (count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function (count) {\n    if (count == null) count = 10;\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function () {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}","import { bisect } from \"d3-array\";\nimport { slice } from \"./array\";\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function (y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function () {\n    return threshold().domain(domain).range(range);\n  };\n\n  return scale;\n}","var t0 = new Date(),\n    t1 = new Date();\nexport default function newInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function (date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function (date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function (date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function (start, stop, step) {\n    var range = [],\n        previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    do {\n      range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    } while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = function (test) {\n    return newInterval(function (date) {\n      if (date >= date) while (floori(date), !test(date)) {\n        date.setTime(date - 1);\n      }\n    }, function (date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function (start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function (step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {\n        return field(d) % step === 0;\n      } : function (d) {\n        return interval.count(0, d) % step === 0;\n      });\n    };\n  }\n\n  return interval;\n}","import interval from \"./interval\";\nvar millisecond = interval(function () {// noop\n}, function (date, step) {\n  date.setTime(+date + step);\n}, function (start, end) {\n  return end - start;\n}); // An optimized implementation for this simple case.\n\nmillisecond.every = function (k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function (date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function (date, step) {\n    date.setTime(+date + step * k);\n  }, function (start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;","import interval from \"./interval\";\nimport { durationSecond } from \"./duration\";\nvar second = interval(function (date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function (date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function (start, end) {\n  return (end - start) / durationSecond;\n}, function (date) {\n  return date.getUTCSeconds();\n});\nexport default second;\nexport var seconds = second.range;","import interval from \"./interval\";\nimport { durationMinute } from \"./duration\";\nvar minute = interval(function (date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getMinutes();\n});\nexport default minute;\nexport var minutes = minute.range;","import interval from \"./interval\";\nimport { durationHour, durationMinute } from \"./duration\";\nvar hour = interval(function (date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getHours();\n});\nexport default hour;\nexport var hours = hour.range;","import interval from \"./interval\";\nimport { durationDay, durationMinute } from \"./duration\";\nvar day = interval(function (date) {\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setDate(date.getDate() + step);\n}, function (start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function (date) {\n  return date.getDate() - 1;\n});\nexport default day;\nexport var days = day.range;","import interval from \"./interval\";\nimport { durationMinute, durationWeek } from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function (date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function (start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;","import interval from \"./interval\";\nvar month = interval(function (date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function (start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function (date) {\n  return date.getMonth();\n});\nexport default month;\nexport var months = month.range;","import interval from \"./interval\";\nvar year = interval(function (date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function (start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function (date) {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\nyear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;","import interval from \"./interval\";\nimport { durationMinute } from \"./duration\";\nvar utcMinute = interval(function (date) {\n  date.setUTCSeconds(0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function (start, end) {\n  return (end - start) / durationMinute;\n}, function (date) {\n  return date.getUTCMinutes();\n});\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;","import interval from \"./interval\";\nimport { durationHour } from \"./duration\";\nvar utcHour = interval(function (date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getUTCHours();\n});\nexport default utcHour;\nexport var utcHours = utcHour.range;","import interval from \"./interval\";\nimport { durationDay } from \"./duration\";\nvar utcDay = interval(function (date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function (start, end) {\n  return (end - start) / durationDay;\n}, function (date) {\n  return date.getUTCDate() - 1;\n});\nexport default utcDay;\nexport var utcDays = utcDay.range;","import interval from \"./interval\";\nimport { durationWeek } from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function (date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function (start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;","import interval from \"./interval\";\nvar utcMonth = interval(function (date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function (start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function (date) {\n  return date.getUTCMonth();\n});\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;","import interval from \"./interval\";\nvar utcYear = interval(function (date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function (start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function (date) {\n  return date.getUTCFullYear();\n}); // An optimized implementation for this simple case.\n\nutcYear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;","import { timeDay, timeSunday, timeMonday, timeThursday, timeYear, utcDay, utcSunday, utcMonday, utcThursday, utcYear } from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {\n    y: y,\n    m: 0,\n    d: 1,\n    H: 0,\n    M: 0,\n    S: 0,\n    L: 0\n  };\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  }; // These recursive directive definitions must be deferred.\n\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function (date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function (string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week,\n          day;\n      if (i != string.length) return null; // If a UNIX timestamp is specified, return it.\n\n      if (\"Q\" in d) return new Date(d.Q); // The am-pm flag is 0 for AM, and 1 for PM.\n\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12; // Convert day-of-week and week-of-year to day-of-year.\n\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      } // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n\n\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      } // Otherwise, all fields are in local time.\n\n\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || (j = parse(d, string, j)) < 0) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function format(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n\n      f.toString = function () {\n        return specifier;\n      };\n\n      return f;\n    },\n    parse: function parse(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n\n      p.toString = function () {\n        return specifier;\n      };\n\n      return p;\n    },\n    utcFormat: function utcFormat(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n\n      f.toString = function () {\n        return specifier;\n      };\n\n      return f;\n    },\n    utcParse: function utcParse(specifier) {\n      var p = newParse(specifier, utcDate);\n\n      p.toString = function () {\n        return specifier;\n      };\n\n      return p;\n    }\n  };\n}\nvar pads = {\n  \"-\": \"\",\n  \"_\": \" \",\n  \"0\": \"0\"\n},\n    numberRe = /^\\s*\\d+/,\n    // note: ignores next directive\npercentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {},\n      i = -1,\n      n = names.length;\n\n  while (++i < n) {\n    map[names[i].toLowerCase()] = i;\n  }\n\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0] * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = day >= 4 || day === 0 ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\")) + pad(z / 60 | 0, \"0\", 2) + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = day >= 4 || day === 0 ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}","import formatLocale from \"./locale\";\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}","import { utcFormat } from \"./defaultLocale\";\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString ? formatIsoNative : utcFormat(isoSpecifier);\nexport default formatIso;","import { isoSpecifier } from \"./isoFormat\";\nimport { utcParse } from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\") ? parseIsoNative : utcParse(isoSpecifier);\nexport default parseIso;","export default function (specifier) {\n  var n = specifier.length / 6 | 0,\n      colors = new Array(n),\n      i = 0;\n\n  while (i < n) {\n    colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  }\n\n  return colors;\n}","import { interpolateRgbBasis } from \"d3-interpolate\";\nexport default function (scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}","import colors from \"../colors\";\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");","import colors from \"../colors\";\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");","import colors from \"../colors\";\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");","import colors from \"../colors\";\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");","import colors from \"../colors\";\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");","import colors from \"../colors\";\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");","import colors from \"../colors\";\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");","import colors from \"../colors\";\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");","import colors from \"../colors\";\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"d8b365f5f5f55ab4ac\", \"a6611adfc27d80cdc1018571\", \"a6611adfc27df5f5f580cdc1018571\", \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\", \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\", \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\", \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\", \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\", \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"af8dc3f7f7f77fbf7b\", \"7b3294c2a5cfa6dba0008837\", \"7b3294c2a5cff7f7f7a6dba0008837\", \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\", \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\", \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\", \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\", \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\", \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"e9a3c9f7f7f7a1d76a\", \"d01c8bf1b6dab8e1864dac26\", \"d01c8bf1b6daf7f7f7b8e1864dac26\", \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\", \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\", \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\", \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\", \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\", \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"998ec3f7f7f7f1a340\", \"5e3c99b2abd2fdb863e66101\", \"5e3c99b2abd2f7f7f7fdb863e66101\", \"542788998ec3d8daebfee0b6f1a340b35806\", \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\", \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\", \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\", \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\", \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"ef8a62f7f7f767a9cf\", \"ca0020f4a58292c5de0571b0\", \"ca0020f4a582f7f7f792c5de0571b0\", \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\", \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\", \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\", \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\", \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\", \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"ef8a62ffffff999999\", \"ca0020f4a582bababa404040\", \"ca0020f4a582ffffffbababa404040\", \"b2182bef8a62fddbc7e0e0e09999994d4d4d\", \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\", \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\", \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\", \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\", \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fc8d59ffffbf91bfdb\", \"d7191cfdae61abd9e92c7bb6\", \"d7191cfdae61ffffbfabd9e92c7bb6\", \"d73027fc8d59fee090e0f3f891bfdb4575b4\", \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\", \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\", \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\", \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\", \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fc8d59ffffbf91cf60\", \"d7191cfdae61a6d96a1a9641\", \"d7191cfdae61ffffbfa6d96a1a9641\", \"d73027fc8d59fee08bd9ef8b91cf601a9850\", \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\", \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\", \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\", \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\", \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fc8d59ffffbf99d594\", \"d7191cfdae61abdda42b83ba\", \"d7191cfdae61ffffbfabdda42b83ba\", \"d53e4ffc8d59fee08be6f59899d5943288bd\", \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\", \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\", \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\", \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\", \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"e5f5f999d8c92ca25f\", \"edf8fbb2e2e266c2a4238b45\", \"edf8fbb2e2e266c2a42ca25f006d2c\", \"edf8fbccece699d8c966c2a42ca25f006d2c\", \"edf8fbccece699d8c966c2a441ae76238b45005824\", \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\", \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"e0ecf49ebcda8856a7\", \"edf8fbb3cde38c96c688419d\", \"edf8fbb3cde38c96c68856a7810f7c\", \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\", \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\", \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\", \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"e0f3dba8ddb543a2ca\", \"f0f9e8bae4bc7bccc42b8cbe\", \"f0f9e8bae4bc7bccc443a2ca0868ac\", \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\", \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\", \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\", \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fee8c8fdbb84e34a33\", \"fef0d9fdcc8afc8d59d7301f\", \"fef0d9fdcc8afc8d59e34a33b30000\", \"fef0d9fdd49efdbb84fc8d59e34a33b30000\", \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\", \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\", \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"ece2f0a6bddb1c9099\", \"f6eff7bdc9e167a9cf02818a\", \"f6eff7bdc9e167a9cf1c9099016c59\", \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\", \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\", \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\", \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"ece7f2a6bddb2b8cbe\", \"f1eef6bdc9e174a9cf0570b0\", \"f1eef6bdc9e174a9cf2b8cbe045a8d\", \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\", \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\", \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\", \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"e7e1efc994c7dd1c77\", \"f1eef6d7b5d8df65b0ce1256\", \"f1eef6d7b5d8df65b0dd1c77980043\", \"f1eef6d4b9dac994c7df65b0dd1c77980043\", \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\", \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\", \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fde0ddfa9fb5c51b8a\", \"feebe2fbb4b9f768a1ae017e\", \"feebe2fbb4b9f768a1c51b8a7a0177\", \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\", \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\", \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\", \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"edf8b17fcdbb2c7fb8\", \"ffffcca1dab441b6c4225ea8\", \"ffffcca1dab441b6c42c7fb8253494\", \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\", \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\", \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\", \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"f7fcb9addd8e31a354\", \"ffffccc2e69978c679238443\", \"ffffccc2e69978c67931a354006837\", \"ffffccd9f0a3addd8e78c67931a354006837\", \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\", \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\", \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fff7bcfec44fd95f0e\", \"ffffd4fed98efe9929cc4c02\", \"ffffd4fed98efe9929d95f0e993404\", \"ffffd4fee391fec44ffe9929d95f0e993404\", \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\", \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\", \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"ffeda0feb24cf03b20\", \"ffffb2fecc5cfd8d3ce31a1c\", \"ffffb2fecc5cfd8d3cf03b20bd0026\", \"ffffb2fed976feb24cfd8d3cf03b20bd0026\", \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\", \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\", \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"deebf79ecae13182bd\", \"eff3ffbdd7e76baed62171b5\", \"eff3ffbdd7e76baed63182bd08519c\", \"eff3ffc6dbef9ecae16baed63182bd08519c\", \"eff3ffc6dbef9ecae16baed64292c62171b5084594\", \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\", \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"e5f5e0a1d99b31a354\", \"edf8e9bae4b374c476238b45\", \"edf8e9bae4b374c47631a354006d2c\", \"edf8e9c7e9c0a1d99b74c47631a354006d2c\", \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\", \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\", \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"f0f0f0bdbdbd636363\", \"f7f7f7cccccc969696525252\", \"f7f7f7cccccc969696636363252525\", \"f7f7f7d9d9d9bdbdbd969696636363252525\", \"f7f7f7d9d9d9bdbdbd969696737373525252252525\", \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\", \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"efedf5bcbddc756bb1\", \"f2f0f7cbc9e29e9ac86a51a3\", \"f2f0f7cbc9e29e9ac8756bb154278f\", \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\", \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\", \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\", \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fee0d2fc9272de2d26\", \"fee5d9fcae91fb6a4acb181d\", \"fee5d9fcae91fb6a4ade2d26a50f15\", \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\", \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\", \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\", \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\").map(colors);\nexport default ramp(scheme);","import colors from \"../colors\";\nimport ramp from \"../ramp\";\nexport var scheme = new Array(3).concat(\"fee6cefdae6be6550d\", \"feeddefdbe85fd8d3cd94701\", \"feeddefdbe85fd8d3ce6550da63603\", \"feeddefdd0a2fdae6bfd8d3ce6550da63603\", \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\", \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\", \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\").map(colors);\nexport default ramp(scheme);","import { cubehelix } from \"d3-color\";\nimport { interpolateCubehelixLong } from \"d3-interpolate\";\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));","import { cubehelix } from \"d3-color\";\nimport { interpolateCubehelixLong } from \"d3-interpolate\";\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\nvar c = cubehelix();\nexport default function (t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}","import { rgb } from \"d3-color\";\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\nexport default function (t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function (t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));","export default function (x) {\n  return function constant() {\n    return x;\n  };\n}","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}","import { path } from \"d3-path\";\nimport constant from \"./constant\";\nimport { abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau } from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0,\n      y10 = y1 - y0,\n      x32 = x3 - x2,\n      y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n} // Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\n\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00; // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function () {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n    if (!context) context = buffer = path(); // Ensure that the outer radius is always larger than the inner radius.\n\n    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?\n\n    if (!(r1 > epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n        context.moveTo(r1 * cos(a0), r1 * sin(a0));\n        context.arc(0, 0, r1, a0, a1, !cw);\n\n        if (r0 > epsilon) {\n          context.moveTo(r0 * cos(a1), r0 * sin(a1));\n          context.arc(0, 0, r0, a1, a0, cw);\n        }\n      } // Or is it a circular or annular sector?\n      else {\n          var a01 = a0,\n              a11 = a1,\n              a00 = a0,\n              a10 = a1,\n              da0 = da,\n              da1 = da,\n              ap = padAngle.apply(this, arguments) / 2,\n              rp = ap > epsilon && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n              rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n              rc0 = rc,\n              rc1 = rc,\n              t0,\n              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\n          if (rp > epsilon) {\n            var p0 = asin(rp / r0 * sin(ap)),\n                p1 = asin(rp / r1 * sin(ap));\n            if ((da0 -= p0 * 2) > epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n            if ((da1 -= p1 * 2) > epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n          }\n\n          var x01 = r1 * cos(a01),\n              y01 = r1 * sin(a01),\n              x10 = r0 * cos(a10),\n              y10 = r0 * sin(a10); // Apply rounded corners?\n\n          if (rc > epsilon) {\n            var x11 = r1 * cos(a11),\n                y11 = r1 * sin(a11),\n                x00 = r0 * cos(a00),\n                y00 = r0 * sin(a00); // Restrict the corner radius according to the sector angle.\n\n            if (da < pi) {\n              var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n                  ax = x01 - oc[0],\n                  ay = y01 - oc[1],\n                  bx = x11 - oc[0],\n                  by = y11 - oc[1],\n                  kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                  lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n              rc0 = min(rc, (r0 - lc) / (kc - 1));\n              rc1 = min(rc, (r1 - lc) / (kc + 1));\n            }\n          } // Is the sector collapsed to a line?\n\n\n          if (!(da1 > epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?\n          else if (rc1 > epsilon) {\n              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n              else {\n                  context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n                  context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n                  context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n                }\n            } // Or is the outer ring just a circular arc?\n            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?\n          // Or perhaps it’s an annular sector collapsed due to padding?\n\n          if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?\n          else if (rc0 > epsilon) {\n              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n              else {\n                  context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n                  context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n                  context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n                }\n            } // Or is the inner ring just a circular arc?\n            else context.arc(0, 0, r0, a10, a00, cw);\n        }\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function () {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function (_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function (_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function (_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function (_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n}","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n      // proceed\n\n      default:\n        this._context.lineTo(x, y);\n\n        break;\n    }\n  }\n};\nexport default function (context) {\n  return new Linear(context);\n}","export function x(p) {\n  return p[0];\n}\nexport function y(p) {\n  return p[1];\n}","import { path } from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport { x as pointX, y as pointY } from \"./point\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","import curveLinear from \"./linear\";\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function areaStart() {\n    this._curve.areaStart();\n  },\n  areaEnd: function areaEnd() {\n    this._curve.areaEnd();\n  },\n  lineStart: function lineStart() {\n    this._curve.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this._curve.lineEnd();\n  },\n  point: function point(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\nexport default function curveRadial(curve) {\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n  return radial;\n}","export var slice = Array.prototype.slice;","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\nexport default {\n  draw: function draw(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};","import { pi, tau } from \"../math\";\nexport default {\n  draw: function draw(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};","import { pi, tau } from \"../math\";\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\nexport default {\n  draw: function draw(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n\n    context.closePath();\n  }\n};","export default function () {}","var sqrt3 = Math.sqrt(3);\nexport default {\n  draw: function draw(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\nexport default {\n  draw: function draw(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};","function _point(that, x, y) {\n  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);\n}\n\nexport { _point as point };\nexport function Basis(context) {\n  this._context = context;\n}\nBasis.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 3:\n        _point(this, this._x1, this._y1);\n\n      // proceed\n\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n\n        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);\n\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\nexport default function (context) {\n  return new Basis(context);\n}","import noop from \"../noop\";\nimport { point as _point } from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 1:\n        {\n          this._context.moveTo(this._x2, this._y2);\n\n          this._context.closePath();\n\n          break;\n        }\n\n      case 2:\n        {\n          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\n          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\n          this._context.closePath();\n\n          break;\n        }\n\n      case 3:\n        {\n          this.point(this._x2, this._y2);\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          break;\n        }\n    }\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._x2 = x, this._y2 = y;\n        break;\n\n      case 1:\n        this._point = 2;\n        this._x3 = x, this._y3 = y;\n        break;\n\n      case 2:\n        this._point = 3;\n        this._x4 = x, this._y4 = y;\n\n        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);\n\n        break;\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\nexport default function (context) {\n  return new BasisClosed(context);\n}","import { point as _point } from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n        var x0 = (this._x0 + 4 * this._x1 + x) / 6,\n            y0 = (this._y0 + 4 * this._y1 + y) / 6;\n        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);\n        break;\n\n      case 3:\n        this._point = 4;\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\nexport default function (context) {\n  return new BasisOpen(context);\n}","import { Basis } from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function lineStart() {\n    this._x = [];\n    this._y = [];\n\n    this._basis.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n\n        this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));\n      }\n    }\n\n    this._x = this._y = null;\n\n    this._basis.lineEnd();\n  },\n  point: function point(x, y) {\n    this._x.push(+x);\n\n    this._y.push(+y);\n  }\n};\nexport default (function custom(beta) {\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function (beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);","function _point(that, x, y) {\n  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);\n}\n\nexport { _point as point };\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinal.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x2, this._y2);\n\n        break;\n\n      case 3:\n        _point(this, this._x1, this._y1);\n\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        this._x1 = x, this._y1 = y;\n        break;\n\n      case 2:\n        this._point = 3;\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(tension) {\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);","import noop from \"../noop\";\nimport { point as _point } from \"./cardinal\";\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 1:\n        {\n          this._context.moveTo(this._x3, this._y3);\n\n          this._context.closePath();\n\n          break;\n        }\n\n      case 2:\n        {\n          this._context.lineTo(this._x3, this._y3);\n\n          this._context.closePath();\n\n          break;\n        }\n\n      case 3:\n        {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n    }\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._x3 = x, this._y3 = y;\n        break;\n\n      case 1:\n        this._point = 2;\n\n        this._context.moveTo(this._x4 = x, this._y4 = y);\n\n        break;\n\n      case 2:\n        this._point = 3;\n        this._x5 = x, this._y5 = y;\n        break;\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(tension) {\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);","import { point as _point } from \"./cardinal\";\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\nCardinalOpen.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);\n        break;\n\n      case 3:\n        this._point = 4;\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(tension) {\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function (tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);","import { epsilon } from \"../math\";\nimport { Cardinal } from \"./cardinal\";\n\nfunction _point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nexport { _point as point };\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x2, this._y2);\n\n        break;\n\n      case 3:\n        this.point(this._x2, this._y2);\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);","import { CardinalClosed } from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport { point as _point } from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 1:\n        {\n          this._context.moveTo(this._x3, this._y3);\n\n          this._context.closePath();\n\n          break;\n        }\n\n      case 2:\n        {\n          this._context.lineTo(this._x3, this._y3);\n\n          this._context.closePath();\n\n          break;\n        }\n\n      case 3:\n        {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n    }\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._x3 = x, this._y3 = y;\n        break;\n\n      case 1:\n        this._point = 2;\n\n        this._context.moveTo(this._x4 = x, this._y4 = y);\n\n        break;\n\n      case 2:\n        this._point = 3;\n        this._x5 = x, this._y5 = y;\n        break;\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);","import { CardinalOpen } from \"./cardinalOpen\";\nimport { point as _point } from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);\n        break;\n\n      case 3:\n        this._point = 4;\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\nexport default (function custom(alpha) {\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function (alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._point) this._context.closePath();\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);\n  }\n};\nexport default function (context) {\n  return new LinearClosed(context);\n}","function sign(x) {\n  return x < 0 ? -1 : 1;\n} // Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\n\n\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n} // Calculate a one-sided slope.\n\n\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\n\nfunction _point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n\n        break;\n\n      case 3:\n        _point(this, this._t0, slope2(this, this._t0));\n\n        break;\n    }\n\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    var t1 = NaN;\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n\n        _point(this, slope2(this, t1 = slope3(this, x, y)), t1);\n\n        break;\n\n      default:\n        _point(this, this._t0, t1 = slope3(this, x, y));\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function moveTo(x, y) {\n    this._context.moveTo(y, x);\n  },\n  closePath: function closePath() {\n    this._context.closePath();\n  },\n  lineTo: function lineTo(x, y) {\n    this._context.lineTo(y, x);\n  },\n  bezierCurveTo: function bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);\n  }\n};\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function lineEnd() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || this._line !== 0 && n === 1) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function point(x, y) {\n    this._x.push(+x);\n\n    this._y.push(+y);\n  }\n}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\n  for (i = 1; i < n - 1; ++i) {\n    a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  }\n\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\n  for (i = 1; i < n; ++i) {\n    m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  }\n\n  a[n - 1] = r[n - 1] / b[n - 1];\n\n  for (i = n - 2; i >= 0; --i) {\n    a[i] = (r[i] - a[i + 1]) / b[i];\n  }\n\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n\n  for (i = 0; i < n - 1; ++i) {\n    b[i] = 2 * x[i + 1] - a[i + 1];\n  }\n\n  return [a, b];\n}\n\nexport default function (context) {\n  return new Natural(context);\n}","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n\n      case 1:\n        this._point = 2;\n      // proceed\n\n      default:\n        {\n          if (this._t <= 0) {\n            this._context.lineTo(this._x, y);\n\n            this._context.lineTo(x, y);\n          } else {\n            var x1 = this._x * (1 - this._t) + x * this._t;\n\n            this._context.lineTo(x1, this._y);\n\n            this._context.lineTo(x1, y);\n          }\n\n          break;\n        }\n    }\n\n    this._x = x, this._y = y;\n  }\n};\nexport default function (context) {\n  return new Step(context, 0.5);\n}\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n  insert: function insert(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n\n      if (after.R) {\n        after = after.R;\n\n        while (after.L) {\n          after = after.L;\n        }\n\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n    after = node;\n\n    while (parent && parent.C) {\n      grandpa = parent.U;\n\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n\n      parent = after.U;\n    }\n\n    this._.C = false;\n  },\n  remove: function remove(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n\n    if (node && node.C) {\n      node.C = false;\n      return;\n    }\n\n    do {\n      if (node === this._) break;\n\n      if (node === parent.L) {\n        sibling = parent.R;\n\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n\n        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) {\n    node = node.L;\n  }\n\n  return node;\n}\n\nexport default RedBlackTree;","import { cells, edges, epsilon } from \"./Diagram\";\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n} // Liang–Barsky line clipping.\n\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1) || !clipEdge(edge, x0, y0, x1, y1) || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}","import { createBorderEdge } from \"./Edge\";\nimport { cells, edges, epsilon } from \"./Diagram\";\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n\n      for (j = 0; j < m; ++j) {\n        index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      }\n\n      index.sort(function (i, j) {\n        return array[j] - array[i];\n      });\n\n      for (j = 0; j < m; ++j) {\n        array[j] = halfedges[index[j]];\n      }\n\n      for (j = 0; j < m; ++j) {\n        halfedges[j] = array[j];\n      }\n    }\n  }\n}\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length; // Remove any dangling clipped edges.\n\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      } // Insert any border edges as necessary.\n\n\n      iHalfedge = 0, nHalfedges = halfedges.length;\n\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end, Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1] : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1] : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0] : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0] : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  } // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n\n\n  if (cover) {\n    var dx,\n        dy,\n        d2,\n        dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0],\n          v01 = [x0, y1],\n          v11 = [x1, y1],\n          v10 = [x1, y0];\n      cover.halfedges.push(edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1, edges.push(createBorderEdge(site, v01, v11)) - 1, edges.push(createBorderEdge(site, v11, v10)) - 1, edges.push(createBorderEdge(site, v10, v00)) - 1);\n    }\n  } // Lastly delete any cells with no edges; these were entirely clipped.\n\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}","import { RedBlackNode } from \"./RedBlackTree\";\nimport { circles, epsilon2 } from \"./Diagram\";\nvar circlePool = [];\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x = this.y = this.arc = this.site = this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n  if (!lArc || !rArc) return;\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n  if (lSite === rSite) return;\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n  var circle = circlePool.pop() || new Circle();\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n      if (node.L) node = node.L;else {\n        before = node.P;\n        break;\n      }\n    } else {\n      if (node.R) node = node.R;else {\n        before = node;\n        break;\n      }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}","import { RedBlackNode } from \"./RedBlackTree\";\nimport { createCell } from \"./Cell\";\nimport { attachCircle, detachCircle } from \"./Circle\";\nimport { createEdge, setEdgeEnd } from \"./Edge\";\nimport { beaches, epsilon } from \"./Diagram\";\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge = this.site = this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach();\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n  detachBeach(beach);\n  var lArc = previous;\n\n  while (lArc.circle && Math.abs(x - lArc.circle.x) < epsilon && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n  var rArc = next;\n\n  while (rArc.circle && Math.abs(x - rArc.circle.x) < epsilon && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n  var nArcs = disappearing.length,\n      iArc;\n\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L;else {\n      dxr = x - rightBreakPoint(node, directrix);\n\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) {\n    // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  } // else lArc !== rArc\n\n\n  detachCircle(lArc);\n  detachCircle(rArc);\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n  if (!pby2) return rfocx;\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n  if (!plby2) return lfocx;\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}","import { addBeach, removeBeach } from \"./Beach\";\nimport { sortCellHalfedges, cellHalfedgeStart, clipCells } from \"./Cell\";\nimport { firstCircle } from \"./Circle\";\nimport { clipEdges } from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1] || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree();\n  circles = new RedBlackTree();\n\n  while (true) {\n    circle = firstCircle;\n\n    if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n  beaches = circles = edges = cells = null;\n}\nDiagram.prototype = {\n  constructor: Diagram,\n  polygons: function polygons() {\n    var edges = this.edges;\n    return this.cells.map(function (cell) {\n      var polygon = cell.halfedges.map(function (i) {\n        return cellHalfedgeStart(cell, edges[i]);\n      });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n  triangles: function triangles() {\n    var triangles = [],\n        edges = this.edges;\n    this.cells.forEach(function (cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n    return triangles;\n  },\n  links: function links() {\n    return this.edges.filter(function (edge) {\n      return edge.right;\n    }).map(function (edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n  find: function find(x, y, radius) {\n    var that = this,\n        i0,\n        i1 = that._found || 0,\n        n = that.cells.length,\n        cell; // Use the previously-found cell, or start with an arbitrary one.\n\n    while (!(cell = that.cells[i1])) {\n      if (++i1 >= n) return null;\n    }\n\n    var dx = x - cell.site[0],\n        dy = y - cell.site[1],\n        d2 = dx * dx + dy * dy; // Traverse the half-edges to find a closer cell, if any.\n\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function (e) {\n        var edge = that.edges[e],\n            v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0],\n            vy = y - v[1],\n            v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};","import constant from \"./constant\";\nimport { x as pointX, y as pointY } from \"./point\";\nimport Diagram, { epsilon } from \"./Diagram\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function (d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function (data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function (data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function (data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function (_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function (_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\nTransform.prototype = {\n  constructor: Transform,\n  scale: function scale(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function translate(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function apply(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function applyX(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function applyY(y) {\n    return y * this.k + this.y;\n  },\n  invert: function invert(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function invertX(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function invertY(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function rescaleX(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function rescaleY(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function toString() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\nexport var identity = new Transform(1, 0, 0);\ntransform.prototype = Transform.prototype;\nexport default function transform(node) {\n  return node.__zoom || identity;\n}","import { event } from \"d3-selection\";\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\nexport default function () {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}","import { dispatch } from \"d3-dispatch\";\nimport { dragDisable, dragEnable } from \"d3-drag\";\nimport { interpolateZoom } from \"d3-interpolate\";\nimport { event, customEvent, select, mouse, touch } from \"d3-selection\";\nimport { interrupt } from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport { Transform, identity } from \"./transform\";\nimport noevent, { nopropagation } from \"./noevent\"; // Ignore right-click, since that should open the context menu.\n\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this,\n      w,\n      h;\n\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));\n}\n\nexport default function () {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection.property(\"__zoom\", defaultTransform).on(\"wheel.zoom\", wheeled).on(\"mousedown.zoom\", mousedowned).on(\"dblclick.zoom\", dblclicked).filter(touchable).on(\"touchstart.zoom\", touchstarted).on(\"touchmove.zoom\", touchmoved).on(\"touchend.zoom touchcancel.zoom\", touchended).style(\"touch-action\", \"none\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function (collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function () {\n        gesture(this, arguments).start().zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform).end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function (selection, k) {\n    zoom.scaleTo(selection, function () {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function (selection, k) {\n    zoom.transform(selection, function () {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function (selection, x, y) {\n    zoom.transform(selection, function () {\n      return constrain(this.__zoom.translate(typeof x === \"function\" ? x.apply(this, arguments) : x, typeof y === \"function\" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function (selection, x, y) {\n    zoom.transform(selection, function () {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(typeof x === \"function\" ? -x.apply(this, arguments) : -x, typeof y === \"function\" ? -y.apply(this, arguments) : -y), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k,\n        y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition.on(\"start.zoom\", function () {\n      gesture(this, arguments).start();\n    }).on(\"interrupt.zoom end.zoom\", function () {\n      gesture(this, arguments).end();\n    }).tween(\"zoom\", function () {\n      var that = this,\n          args = arguments,\n          g = gesture(that, args),\n          e = extent.apply(that, args),\n          p = center || centroid(e),\n          w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n          a = that.__zoom,\n          b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n          i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n      return function (t) {\n        if (t === 1) t = b; // Avoid rounding error on end.\n        else {\n            var l = i(t),\n                k = w / l[2];\n            t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);\n          }\n        g.zoom(null, t);\n      };\n    });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function start() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n\n      return this;\n    },\n    zoom: function zoom(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function end() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n\n      return this;\n    },\n    emit: function emit(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this); // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n\n      clearTimeout(g.wheel);\n    } // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return; // Otherwise, capture the mouse point and location at the start.\n      else {\n          g.mouse = [p, t.invert(p)];\n          interrupt(this);\n          g.start();\n        }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n\n      if (!g.moved) {\n        var dx = event.clientX - x0,\n            dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length,\n        i,\n        t,\n        p;\n    nopropagation();\n\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;else if (!g.touch1) g.touch1 = p;\n    } // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n\n\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function () {\n        touchstarting = null;\n      }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length,\n        i,\n        t,\n        p,\n        l;\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n\n    t = g.that.__zoom;\n\n    if (g.touch1) {\n      var p0 = g.touch0[0],\n          l0 = g.touch0[1],\n          p1 = g.touch1[0],\n          l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;\n\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length,\n        i,\n        t;\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function () {\n      touchending = null;\n    }, touchDelay);\n\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else g.end();\n  }\n\n  zoom.wheelDelta = function (_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function (_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function (_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function (_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function (_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function (_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function (_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function (_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}","export { version } from \"./dist/package\";\nexport * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-collection\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-voronoi\";\nexport * from \"d3-zoom\";","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function (input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function (input, init) {\n  return fetch(input, init).then(responseText);\n}","import { csvParse, dsvFormat, tsvParse } from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function (input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function (response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function (response) {\n    return format.parse(response, row);\n  });\n}\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function (input, init) {\n  return fetch(input, init).then(responseJson);\n}","import text from \"./text\";\n\nfunction parser(type) {\n  return function (input, init) {\n    return text(input, init).then(function (text) {\n      return new DOMParser().parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\nexport var html = parser(\"text/html\");\nexport var svg = parser(\"image/svg+xml\");","export { default as blob } from \"./blob\";\nexport { default as buffer } from \"./buffer\";\nexport { default as dsv, csv, tsv } from \"./dsv\";\nexport { default as image } from \"./image\";\nexport { default as json } from \"./json\";\nexport { default as text } from \"./text\";\nexport { default as xml, html, svg } from \"./xml\";","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function (name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function (row, i) {\n    return f(object(row), i, columns);\n  };\n} // Compute unique columns in order of discovery.\n\n\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n  rows.forEach(function (row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n  return columns;\n}\n\nexport default function (delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert,\n        columns,\n        rows = parseRows(text, function (row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [],\n        // output rows\n    N = text.length,\n        I = 0,\n        // current character index\n    n = 0,\n        // current line number\n    t,\n        // current token\n    eof = N <= 0,\n        // current token followed by EOF?\n    eol = false; // current token followed by EOL?\n    // Strip the trailing newline.\n\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL; // Unescape quotes.\n\n      var i,\n          j = I,\n          c;\n\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE) {\n          ;\n        }\n\n        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      } // Find next delimiter or newline.\n\n\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {\n          eol = true;\n          if (text.charCodeAt(I) === NEWLINE) ++I;\n        } else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      } // Return last token before EOF.\n\n\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n\n      while (t !== EOL && t !== EOF) {\n        row.push(t), t = token();\n      }\n\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n      return columns.map(function (column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\" : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\" : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}","import dsv from \"./dsv\";\nvar csv = dsv(\",\");\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;","import dsv from \"./dsv\";\nvar tsv = dsv(\"\\t\");\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;","export { default as dsvFormat } from \"./dsv\";\nexport { csvParse, csvParseRows, csvFormat, csvFormatRows } from \"./csv\";\nexport { tsvParse, tsvParseRows, tsvFormat, tsvFormatRows } from \"./tsv\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}"],"sourceRoot":""}