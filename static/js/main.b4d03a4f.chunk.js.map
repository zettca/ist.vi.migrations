{"version":3,"sources":["util/tooltip.js","util/state.js","util/index.js","components/YearSlider.js","components/EventSelect.js","components/CountrySelect.js","idioms/chord.js","components/MigrationSwitch.js","idioms/graph.js","idioms/map.js","index.js"],"names":["util_tooltip","mouseover","html","arguments","length","undefined","tooltip","style","d3","pageX","pageY","mouseout","mousemove","append","attr","SelectionEmitter","EventEmitter","emitter","state","getCountries","setCountries","clearCountries","addCountry","countryId","countries","Set","add","remCountry","delete","getYear","store","get","setYear","value","set","emit","getMigration","setMigration","Array","from","years","stateEmitter","selection","colors","map","slice","dataYear","country","countryName","code","filterNaN","obj","res","key","num","Number","isNaN","byId","id","document","getElementById","createSVG","dims","width","height","margins","svg","concat","left","top","marks","yearChange","params","forEach","year","YearSlider","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","on","setState","react_default","a","createElement","padding","es","min","max","included","step","onChange","defaultValue","handleStyle","border","backgroundColor","React","Component","EventSelect","events","options","event","i","name","push","label","react_select_esm","assign","selected","action","_events$selected$valu","countriesList","split","actualYear","console","log","placeholder","components","makeAnimated","onBlurResetsInput","onSelectResetsInput","onCloseResetsInput","theme","objectSpread","borderRadius","neutral0","neutral5","neutral10","neutral20","primary25","neutral50","neutral80","PureComponent","codeToName","handleChange","option","removedValue","chordSVG","migrationData","outerRadius","innerRadius","CountrySelect","c","countryData","data","keys","sort","b","isMulti","MigrationSwitch","checked","bind","assertThisInitialized","react_switch_default","onColor","offColor","onHandleColor","offHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","chord","draw","el","querySelector","_ref","clientWidth","clientHeight","Math","updateChord","update","getChordMatrix","isEmigration","matrix","c2","val","error","getValue","groupNodes","select","groupArcs","selectAll","remove","chords","padAngle","myChord","ribbon","radius","color","domain","range","arc","isEmi","ms","groups","enter","d","classed","s","p","source","index","target","countryOrder","valueOrder","_countryOrder$map","_countryOrder$map2","slicedToArray","c1","_valueOrder$map","_valueOrder$map2","v1","v2","makeTitle","graphSVG","svgDims","selectedCountries","compareData","populationData","graph","whrData","pop","margin","updateGraph","right","bottom","metrics","loadCompareDataset","dataset","entry","parseNaN","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","migrants","err","return","loadDataset","compareDataset","flatData","values","reduce","acc","axisDomain","fn","yearScale","nice","migrantsScale","metricsScale","metric","xAxis","tickFormat","yAxis1","line","x","y","curve","countriesGroup","_loop","coName","countryGroup","datum","g","preventDefault","metricsGroup","met","defined","metricGroup","mapSVG","idioms_map","topology","population","projection","scale","translate","path","zoom","scaleExtent","transform","features","properties","clickLeft","clickRight","updateMap","includes","getMigrants","countryID","filesPromise","json","tsv","Promise","all","then","dataResults","_data","conversion","migrationDiff","previousYear","dataYears","indexOf","thisValue","prevValue","getMigrationDiff","countryPop","countryWHR","Country","code3","ReactDOM","render","CountrySelect_CountrySelect","EventSelect_EventSelect","MigrationSwitch_MigrationSwitch","YearSlider_YearSlider","handleData"],"mappings":"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","file":"static/js/main.b4d03a4f.chunk.js","sourcesContent":["import * as d3 from 'd3';\nimport './tooltip.css';\n\nexport default {\n  mouseover,\n  mouseout,\n  mousemove,\n  tooltip,\n};\n\nconst tooltip = d3.select('body').append('div')\n  .attr('id', 'tooltip')\n  .style('visibility', 'hidden');\n\nfunction mouseover(html = 'tooltip') {\n  tooltip.style('visibility', 'visible');\n\n  tooltip.html(html)\n    .style('left', d3.event.pageX + 'px')\n    .style('top', d3.event.pageY - 28 + 'px');\n}\n\nfunction mouseout() {\n  tooltip.style('visibility', 'hidden');\n}\n\nfunction mousemove() {\n  tooltip\n    .style('left', d3.event.pageX + 10 + 'px')\n    .style('top', d3.event.pageY + 'px');\n}\n","import store from 'store';\nimport EventEmitter from 'events';\n\nclass SelectionEmitter extends EventEmitter { }\n\nexport default {\n  emitter,\n  state,\n};\n\nexport const emitter = new SelectionEmitter();\n\nexport const state = {\n  getCountries, setCountries, clearCountries,\n  addCountry, remCountry,\n  getYear, setYear,\n  getMigration, setMigration,\n};\n\nfunction getYear() {\n  return store.get('year') || 2010;\n}\n\nfunction setYear(value) {\n  store.set('year', value);\n  emitter.emit('yearChanged');\n}\n\nfunction getMigration() {\n  return store.get('isEmigration') || false;\n}\n\nfunction setMigration(value) {\n  store.set('isEmigration', value);\n  emitter.emit('migrationChanged');\n}\n\nfunction getCountries() {\n  return store.get('selectedCountries') || [];\n}\n\nfunction setCountries(countries) {\n  store.set('selectedCountries', Array.from(countries));\n  emitter.emit('countriesChanged');\n}\n\nfunction clearCountries() {\n  setCountries([]);\n}\n\nfunction addCountry(countryId) {\n  const countries = new Set(getCountries());\n  countries.add(countryId);\n  setCountries(countries);\n}\n\nfunction remCountry(countryId) {\n  const countries = new Set(getCountries());\n  countries.delete(countryId);\n  setCountries(countries);\n}\n","import * as d3 from 'd3';\nimport store from 'store';\n\nimport tooltip from './tooltip';\nimport { emitter, state } from './state';\n\nconst years = [1995, 2000, 2005, 2010, 2015, 2017];\nconst stateEmitter = emitter;\nconst selection = state;\n\nexport {\n  years,\n  stateEmitter,\n  selection,\n  tooltip,\n};\n\nexport function tryNumber(value) {\n  return Number(value) || value;\n}\n\nexport const colors = {\n  map: d3.schemeBlues[9],\n  selection: d3.schemePaired.slice(2),\n};\n\nexport function getMigration(dataYear, country) {\n  const isEmigration = store.get('isEmigration');\n  return isEmigration ? dataYear['WORLD'][country] : dataYear[country]['Total'];\n}\n\nexport function countryName(code) {\n  const codeToName = store.get('codeToName');\n  return codeToName[code];\n}\n\nexport function filterNaN(obj) {\n  const res = {};\n\n  for (const key in obj) {\n    const num = Number(obj[key]);\n    if (!isNaN(num) && num !== 0) {\n      res[key] = num;\n    }\n  }\n\n  return res;\n}\n\nexport function parseNaN(obj) {\n  const res = {};\n\n  for (const key in obj) {\n    const num = Number(obj[key]);\n    res[key] = num || obj[key];\n  }\n\n  return res;\n}\n\nexport function byId(id) {\n  return document.getElementById(id);\n}\n\nexport function createSVG(id, dims = { width: 400, height: 400 }, margins) {\n  const svg = d3.select(id).append('svg')\n    .attr('width', dims.width)\n    .attr('height', dims.height);\n\n  if (margins !== undefined) {\n    const group = svg.append('g')\n      .attr('class', 'main')\n      .attr('transform', `translate(${margins.left || 0},${margins.top || 0})`);\n    return group;\n  }\n\n  return svg;\n}\n\nexport function getMigrationDiff(migrationData) {\n  function previousYear(dataYears, year) {\n    const i = dataYears.indexOf(year);\n    return (i > 0) ? dataYears[i - 1] : dataYears[0];\n  }\n\n  const migrationDiff = {};\n  const dataYears = Object.keys(migrationData);\n\n  for (const year in migrationData) {\n    if (year === dataYears[0]) continue;\n\n    migrationDiff[year] = {};\n    for (const c in migrationData[year]) {\n      migrationDiff[year][c] = {};\n\n      for (const c2 in migrationData[year][c]) {\n        const thisValue = migrationData[year][c];\n        const prevValue = migrationData[previousYear(dataYears, year)][c] || {};\n        migrationDiff[year][c][c2] = thisValue[c2] - (prevValue[c2] || 0);\n      }\n    }\n  }\n\n  return migrationDiff;\n}\n","import React from 'react';\nimport Slider from 'rc-slider';\nimport { stateEmitter, selection, years } from '../util';\n\nimport 'rc-slider/assets/index.css';\nimport './YearSlider.css';\n\nconst marks = {};\nyears.forEach(year => marks[year] = year + '');\n\nfunction yearChange(params) {\n  selection.setYear(params);\n}\n\nexport default class YearSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    stateEmitter.on('yearChanged', () => {\n      const year = selection.getYear();\n      this.setState({ year });\n    });\n  }\n  render() {\n    const style = { padding: '0.4em 2em 0' };\n\n    return (\n      <div style={style}>\n        <Slider\n          value={this.state.year}\n          min={1995}\n          max={2017}\n          included={false}\n          marks={marks}\n          step={null}\n          onChange={yearChange}\n          defaultValue={2010}\n          handleStyle={{ border: 'white', backgroundColor: 'silver' }} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/lib/animated';\n\nimport { selection, years } from '../util';\n\nexport default class EventSelect extends React.PureComponent {\n  render() {\n    const { events } = this.props;\n\n    const options = [];\n\n    events.forEach((event, i) => {\n      const { year, name } = event;\n      options.push({ value: i, label: `${year} ${name}` });\n    });\n\n    return (\n      <Select\n        onChange={(selected, action) => {\n          const { name, year, countries } = events[selected.value];\n          const countriesList = countries.split(',')\n\n          let i = 0;\n          while (years[i] < year) i++;\n\n          const actualYear = years[i - 1] || years[0]\n\n          console.log('EVENT:', actualYear, name, countriesList);\n          selection.setCountries(countriesList);\n          selection.setYear(actualYear);\n        }}\n        placeholder={'Select an event...'}\n        components={makeAnimated}\n        onBlurResetsInput={false}\n        onSelectResetsInput={false}\n        onCloseResetsInput={false}\n        options={options}\n        theme={(theme) => ({\n          ...theme,\n          borderRadius: 0,\n          colors: {\n            ...theme.colors,\n            neutral0: '#333',\n            neutral5: 'orange',\n            neutral10: '#666',\n            neutral20: '#666',\n            primary25: '#666',\n            neutral50: '#eee',\n            neutral80: 'white'\n          }\n        })}\n        {...this.props}\n      />);\n  }\n}\n","import store from 'store';\nimport React from 'react';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/lib/animated';\n\nimport { selection, stateEmitter } from '../util';\n\nconst codeToName = store.get('codeToName');\n\nfunction handleChange(selected, action) {\n  console.log(selected, action);\n\n  switch (action.action) {\n    case 'clear':\n      return selection.clearCountries();\n    case 'select-option':\n      return selection.addCountry(action.option.value)\n    case 'remove-value':\n      return selection.remCountry(action.removedValue.value)\n    default:\n      break;\n  }\n}\n\nexport default class CountrySelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    stateEmitter.on('countriesChanged', () => {\n      const countries = selection.getCountries();\n      const value = countries.map(c => ({ value: c, label: codeToName[c] }));\n      this.setState({ value });\n    });\n  }\n\n  render() {\n    const countryData = this.props.data;\n\n    const countries = [];\n    const year = Object.keys(countryData).slice(-1);\n    Object.keys(countryData[year]).forEach(key => {\n      if (key.length !== 3) return;\n      countries.push({ value: key, label: codeToName[key] });\n    });\n\n    const options = countries.sort((a, b) => a.label < b.label ? -1 : 1);\n\n    return (\n      <Select isMulti\n        placeholder={'Select countries...'}\n        components={makeAnimated}\n        onBlurResetsInput={false}\n        onSelectResetsInput={false}\n        onCloseResetsInput={false}\n        options={options}\n        value={this.state.value}\n        theme={(theme) => ({\n          ...theme,\n          borderRadius: 0,\n          colors: {\n            ...theme.colors,\n            neutral0: '#333',\n            neutral5: 'orange',\n            neutral10: '#666',\n            neutral20: '#666',\n            primary25: '#666',\n            neutral50: '#eee',\n            neutral80: 'white'\n          }\n        })}\n        onChange={handleChange}\n        {...this.props}\n      />);\n  }\n}\n","import * as d3 from 'd3';\nimport store from 'store';\nimport { selection, stateEmitter, createSVG, colors, countryName, tooltip } from '../util';\n\nexport default {\n  draw: drawChord,\n  update: updateChord,\n};\n\nlet chordSVG;\nlet countries, migrationData;\nlet outerRadius, innerRadius;\n\nstateEmitter.on('yearChanged', () => updateChord());\nstateEmitter.on('countriesChanged', () => updateChord());\nstateEmitter.on('migrationChanged', () => updateChord());\n\nfunction getChordMatrix() {\n  countries = selection.getCountries();\n  //countries = Object.keys(migrationData[2010]['WORLD']).slice(200, 230);\n\n  const isEmigration = selection.getMigration();\n  const year = selection.getYear();\n  const matrix = [];\n\n  function getValue(c, c2) {\n    let val;\n    try {\n      val = isEmigration ? migrationData[year][c2][c] : migrationData[year][c][c2];\n    } catch (error) {\n      val = 0;\n    }\n    return val || 0;\n  }\n\n  countries.forEach(c => {\n    matrix.push(countries.map(c2 => getValue(c, c2)));\n  });\n\n  return matrix;\n}\n\nexport function drawChord(id, data) {\n  const el = document.querySelector(id);\n  const [width, height] = [el.clientWidth, el.clientHeight];\n\n  chordSVG = createSVG(id, { width, height });\n  outerRadius = Math.min(width, height) * 0.5;\n  innerRadius = outerRadius - 20;\n\n  migrationData = data;\n\n  chordSVG.attr('viewBox', [-width / 2, -height / 2, width, height]);\n  chordSVG.append('g').attr('class', 'nodes');\n  chordSVG.append('g').attr('class', 'arcs');\n\n  updateChord();\n}\n\nexport function updateChord() {\n  console.log('updating chord...');\n\n  const groupNodes = chordSVG.select('.nodes');\n  const groupArcs = chordSVG.select('.arcs');\n\n  groupNodes.selectAll('.node').remove();\n  groupArcs.selectAll('.arc').remove();\n\n  const myChord = d3.chord().padAngle(0.02);\n\n  const chords = myChord(getChordMatrix());\n  const ribbon = d3.ribbon().radius(innerRadius);\n\n  const color = d3.scaleOrdinal()\n    .domain(d3.range(colors.selection.length))\n    .range(colors.selection);\n\n  const arc = d3.arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\n  if (chords.length === 0) return;\n\n  const isEmi = selection.getMigration();\n  const ms = isEmi ? 'emigration' : 'immigration';\n\n  groupNodes.selectAll('g')\n    .data(chords.groups)\n    .enter().append('g')\n    .attr('class', 'node')\n    .append('path')\n    .attr('fill', (d, i) => color(i))\n    .attr('stroke', (d, i) => color(i))\n    .attr('d', arc)\n    .on('mousemove', tooltip.mousemove)\n    .on('mouseout', mouseout)\n    .on('mouseover', mouseover);\n\n  groupArcs.selectAll('path')\n    .data(chords)\n    .enter().append('path')\n    .attr('class', 'arc')\n    .attr('fill', d => color(d.target.index))\n    .attr('d', ribbon)\n    .on('mouseover', d => tooltip.mouseover(makeTitle(d)))\n    .on('mouseout', tooltip.mouseout)\n    .on('mousemove', tooltip.mousemove);\n\n  function makeTitle(d) {\n    const countryOrder = isEmi ? [d.source, d.target] : [d.target, d.source];\n    const valueOrder = [d.source, d.target];\n    const [c1, c2] = countryOrder.map(el => countryName(countries[el.index]));\n    const [v1, v2] = valueOrder.map(el => d3.format('~s')(el.value));\n    return `${c1} ⟶ ${c2}: ${v1}<br/>${c2} ⟶ ${c1}: ${v2}`;\n  }\n\n  function mouseover(d, i) {\n    //const t = d.value; // threshold\n    const s = groupArcs.selectAll('.arc');\n    s.classed('fade', (p) => p.source.index !== i && p.target.index !== i);\n    s.classed('show', (p) => p.source.index === i);\n\n    tooltip.mouseover(\n      `<strong>${countryName(countries[d.index])}</strong> (${selection.getYear()})<br/>\n      <big>${d3.format('~s')(d.value)}</big> ${ms.slice(0, -4)}nts<br/>`\n    );\n  }\n\n  function mouseout(d, i) {\n    groupArcs.selectAll('.arc.show').classed('show', false);\n    groupArcs.selectAll('.arc.fade').classed('fade', false);\n    tooltip.mouseout();\n  }\n\n}\n","import React from 'react';\nimport store from 'store';\nimport Switch from 'react-switch';\n\nimport { selection } from '../util';\n\nexport default class MigrationSwitch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { checked: false };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { checked } = this.state;\n    store.set('isEmigration', checked);\n  }\n\n  handleChange(checked) {\n    this.setState({ checked });\n    selection.setMigration(checked);\n  }\n\n  render() {\n    const { checked } = this.state;\n\n    return (\n      <div>\n        <Switch\n          onChange={this.handleChange}\n          checked={checked}\n          onColor=\"#FFAB91\"\n          offColor=\"#FFAB91\"\n          onHandleColor=\"#FF8A65\"\n          offHandleColor=\"#FF8A65\"\n          handleDiameter={24}\n          uncheckedIcon={false}\n          checkedIcon={false}\n          boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n          activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n          height={16}\n          width={64}\n          id={'mySwitcherino'}\n        />\n        <span>{checked ? 'Emigration' : 'Immigration'}</span>\n      </div>\n    );\n  }\n}\n","import * as d3 from 'd3';\nimport store from 'store';\nimport {\n  stateEmitter, createSVG, colors, countryName, parseNaN, getMigration, tooltip\n} from '../util';\n\nexport default {\n  draw: drawGraph,\n  update: updateGraph,\n};\n\nconst margin = { top: 10, right: 20, bottom: 20, left: 40 };\n\nlet graphSVG;\nlet svgDims;\nlet selectedCountries;\nlet compareData, migrationData, populationData;\n\nconst metrics = [\n  'GDP per capita',\n  'Social support',\n  'Healthy life expectancy',\n  'Freedom to make life choices',\n  'Perceptions of corruption',\n  // 'Confidence in government',\n];\n\nstateEmitter.on('countriesChanged', () => updateGraph());\nstateEmitter.on('migrationChanged', () => updateGraph());\n\nfunction loadDataset() {\n  const dataset = {};\n  if (!selectedCountries || selectedCountries.length === 0) return [];\n\n  for (let c of selectedCountries) {\n    const country = [];\n    for (let year in migrationData) {\n      const dataYear = migrationData[year];\n      if (dataYear[c] === undefined) continue; // no data\n\n      const migrants = Number(getMigration(dataYear, c));\n      const pop = populationData[c][year] * 1000;\n      const data = migrants /*/ pop*/;\n\n      country.push({ year: Number(year), value: Number(data) });\n    }\n    dataset[c] = country;\n  }\n\n  return dataset;\n}\n\nfunction loadCompareDataset() {\n  const dataset = {};\n  compareData.forEach(entry => {\n    if (dataset[entry.country] === undefined) {\n      dataset[entry.country] = [];\n    }\n    dataset[entry.country].push(parseNaN(entry));\n  });\n  return dataset;\n}\n\nexport function drawGraph(id, data, whrData, pop) {\n  const el = document.querySelector(id);\n  svgDims = { width: el.clientWidth, height: el.clientHeight };\n\n  graphSVG = createSVG(id, svgDims, margin);\n  migrationData = data;\n  populationData = pop;\n  compareData = whrData;\n\n  updateGraph();\n}\n\nexport function updateGraph() {\n  console.log('updating graph...');\n\n  const\n    width = svgDims.width - margin.left - margin.right,\n    height = svgDims.height - margin.top - margin.bottom;\n\n  selectedCountries = store.get('selectedCountries');\n\n  const dataset = loadDataset();\n  const compareDataset = loadCompareDataset();\n\n  const flatData = Object.values(dataset).reduce((acc, d) => acc.concat(d), []);\n\n  const axisDomain = (data, fn) => [d3.min(data, fn), d3.max(data, fn)];\n\n  const yearScale = d3.scaleLinear()\n    .domain(axisDomain(flatData, d => d.year)).nice()\n    .range([0, width]);\n\n  const migrantsScale = d3.scaleLinear()\n    .domain(axisDomain(flatData, d => d.value)).nice()\n    .range([height, 0]);\n\n  // scale for each metric\n  const metricsScale = metrics.map(metric =>\n    d3.scaleLinear()\n      .domain(axisDomain(compareData, d => +d[metric])).nice()\n      .range([height, 0]));\n\n  const xAxis = d3.axisBottom(yearScale).tickFormat(d3.format('d'));\n  const yAxis1 = d3.axisLeft(migrantsScale).tickFormat(d3.format('~s'));\n  //const yAxis2 = d3.axisRight(yScale2).tickFormat(d3.format('~s'));\n\n  const line = d3.line()\n    .x(d => yearScale(d.year))\n    .y(d => migrantsScale(d.value))\n    .curve(d3.curveMonotoneX);\n\n  // CLEAR OLD ELEMENTS\n\n  graphSVG.selectAll('.country').remove();\n  graphSVG.selectAll('.xAxis').remove();\n  graphSVG.selectAll('.yAxis').remove();\n\n  // CREATE NEW ELEMENTS\n\n  graphSVG.append('g')\n    .attr('class', 'xAxis')\n    .attr('transform', `translate(0,${height})`)\n    .call(xAxis);\n\n  graphSVG.append('g')\n    .attr('class', 'yAxis')\n    .call(yAxis1);\n\n  // graphSVG.append('g')\n  //   .attr('class', 'yAxis')\n  //   .attr('transform', `translate(${width},${0})`)\n  //   .call(yAxis2);\n\n  const ms = store.get('isEmigration') ? 'emigration' : 'immigration';\n\n  const countriesGroup = graphSVG.append('g')\n    .attr('class', 'countries');\n\n  function showMetrics(g) {\n    countriesGroup.attr('visibility', 'hidden');\n    g.attr('visibility', 'visible');\n    g.selectAll('.selected').classed('selected', false);\n    g.selectAll('.metrics').classed('selected', true);\n  }\n\n  function hideMetrics(g) {\n    d3.event.preventDefault();\n    countriesGroup.attr('visibility', 'visible');\n    g.attr('visibility', null);\n    g.selectAll('.selected').classed('selected', false);\n    g.selectAll('.metrics').attr('visibility', 'hidden');\n  }\n\n  let i = 0;\n  for (const country in dataset) {\n    const countryData = dataset[country];\n    const color = colors.selection[i++ % colors.selection.length];\n    const coName = countryName(country);\n\n    if (!countryData) break;\n\n    const countryGroup = countriesGroup.append('g')\n      .attr('id', country)\n      .attr('class', 'country')\n      .attr('name', coName);\n\n    countryGroup.append('path')  // line\n      .datum(countryData)\n      .attr('class', 'line')\n      .attr('stroke', color)\n      .attr('d', line)\n      .on('click', () => showMetrics(countryGroup))\n      .on('contextmenu', () => hideMetrics(countryGroup))\n      .on('mousemove', tooltip.mousemove)\n      .on('mouseover', d => {\n        countryGroup.selectAll('.metrics').attr('visibility', 'visible');\n        tooltip.mouseover(`${coName} ${ms}`);\n      })\n      .on('mouseout', d => {\n        countryGroup.selectAll('.metrics').attr('visibility', 'hidden');\n      });\n\n    countryGroup.append('g')    // line dots\n      .attr('class', 'dots')\n      .attr('fill', color)\n      .attr('stroke', color)\n      .selectAll().data(countryData)\n      .enter().append('circle')\n      .attr('cx', (d) => yearScale(d.year))\n      .attr('cy', (d) => migrantsScale(d.value))\n      .attr('r', 3)\n      .on('mouseout', tooltip.mouseout)\n      .on('mousemove', tooltip.mousemove)\n      .on('mouseover', d => tooltip.mouseover(\n        `<strong>${coName}</strong> (${d.year})<br/>\n        ${d3.format('~s')(d.value)} ${ms.slice(0, -4)}nts`\n      ));\n\n    // correlation data\n\n\n    if (!compareDataset[country]) break;\n\n    const metricsGroup = countryGroup.append('g')\n      .attr('class', 'metrics')\n      .attr('visibility', 'hidden');\n\n    metrics.forEach((met, i) => {\n      const color = d3.interpolateRainbow(i / metrics.length);\n\n      const line = d3.line()\n        .x(d => yearScale(d.year))\n        .y(d => metricsScale[i](d[met]))\n        .defined(d => d[met])\n        .curve(d3.curveMonotoneX);\n\n      const metricGroup = metricsGroup.append('g')\n        .attr('class', 'metric');\n\n      metricGroup.append('path')  // line\n        .datum(compareDataset[country])\n        .attr('stroke', color)\n        .attr('fill', 'none')\n        .attr('opacity', 0.8)\n        .attr('d', line)\n        .on('mouseout', tooltip.mouseout)\n        .on('mousemove', tooltip.mousemove)\n        .on('mouseover', d => tooltip.mouseover(`<strong>${coName}:</strong> ${met}`));\n\n      metricGroup.append('g')    // correlation circles\n        .attr('fill', color)\n        .attr('stroke', color)\n        .selectAll('circle')\n        .data(compareDataset[country])\n        .enter().append('circle')\n        .attr('class', 'circle')\n        .attr('cx', d => yearScale(d.year))\n        .attr('cy', d => metricsScale[i](d[met]))\n        .attr('r', d => d[met] === '' ? 0 : 3)\n        .on('mouseout', tooltip.mouseout)\n        .on('mousemove', tooltip.mousemove)\n        .on('mouseover', d => tooltip.mouseover(\n          `<strong>${coName}</strong> (${d.year})<br/>\n          <small>${met}</small><br/>\n          ${d[met]}`));\n    });\n  }\n}\n","import * as d3 from 'd3';\nimport store from 'store';\nimport {\n  tooltip, selection, stateEmitter, createSVG, colors, countryName, getMigration\n} from '../util';\n\nexport default {\n  draw: drawMap,\n  update: updateMap,\n};\n\nlet mapSVG;\nlet migrationData, populationData;\n\nstateEmitter.on('yearChanged', () => updateMap());\nstateEmitter.on('countriesChanged', () => updateMap());\nstateEmitter.on('migrationChanged', () => updateMap());\n\nfunction clickRight(d) {\n  d3.event.preventDefault();\n  selection.remCountry(d.id);\n}\n\nfunction clickLeft(d) {\n  const forbidden = ['UNK', 'TWN', 'ATA'];\n  if (forbidden.includes(d.id)) return;\n  selection.addCountry(d.id);\n}\n\nexport function drawMap(id, topology, data, population) {\n  const el = document.querySelector(id);\n  const [width, height] = [el.clientWidth, el.clientHeight];\n\n  mapSVG = createSVG(id, { width, height });\n\n  migrationData = data;\n  populationData = population;\n\n  const projection = d3.geoEquirectangular()\n    .scale(width / 5)\n    .translate([width / 2, height / 0.8]);\n\n  const path = d3.geoPath().projection(projection);\n  const zoom = d3.zoom()\n    .scaleExtent([0.6, 7])\n    .on('zoom', zoomed);\n\n  mapSVG.call(zoom);\n\n  const map = mapSVG.append('g').attr('class', 'countries');\n\n  map\n    .selectAll('path')\n    .data(topology.features)\n    .enter().append('path')\n    .attr('id', (d) => d.id)\n    .attr('name', (d) => d.properties.name)\n    .attr('d', path)\n    .on('click', clickLeft)\n    .on('contextmenu', clickRight)\n    .on('mouseover', tooltip.mouseover)\n    .on('mouseout', tooltip.mouseout)\n    .on('mousemove', tooltip.mousemove);\n\n  function zoomed() {\n    map.selectAll('path')\n      .attr('transform', d3.event.transform);\n  }\n\n  updateMap();\n}\n\nexport function updateMap() {\n  console.log('updating map...');\n\n  const selectedCountries = store.get('selectedCountries') || [];\n  const year = store.get('year') || 2010;\n  const dataYear = migrationData[year];\n\n  function getMigrants(d) {\n    if (dataYear[d.id] === undefined) return 0; // no data\n    const migrants = getMigration(dataYear, d.id);\n    const pop = populationData[d.id][year];\n\n    return migrants / pop || 0;\n  }\n\n  const color = d3.scaleThreshold()\n    .domain([-20, -10, -5, -2.5, 0, 2.5, 5, 10, 20])\n    .range(colors.map);\n\n  mapSVG.selectAll('path')\n    // .transition().duration(600)\n    .style('fill', (d) => color(getMigrants(d)))\n    .on('mouseover', (d) => tooltip.mouseover(\n      `<strong>${countryName(d.id)}</strong> (${year})<br/>\n      <big>${d3.format('.1f')(getMigrants(d))}</big> migrants<br/>\n      <small>/1000 population</small>`\n    ));\n\n  d3.selectAll('.selected').classed('selected', false);\n  selectedCountries.forEach((countryID, i) => {\n    d3.select('path#' + countryID)\n      .style('fill', colors.selection[i % colors.selection.length])\n      .classed('selected', true);\n  });\n}\n","import store from 'store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { tsv, json } from 'd3-fetch';\n\nimport YearSlider from './components/YearSlider';\nimport EventSelect from './components/EventSelect';\nimport CountrySelect from './components/CountrySelect';\nimport MigrationSwitch from './components/MigrationSwitch';\nimport { chord, graph, map } from './idioms';\nimport { selection, byId, filterNaN, getMigrationDiff } from './util';\n\nimport './index.css';\n\n// STARTUP\n\nstore.remove('selectedCountries');\nstore.remove('isEmigration');\nstore.set('year', 2010);\nstore.set('selectedCountries', ['PRT']);\n\n// DYNAMIC REAL DATA\n\nconst filesPromise = [\n  json('./data/topology.json'),\n  json('./data/migrations.json'),\n  tsv('./data/conversion.tsv'),\n  tsv('./data/population.tsv'),\n  tsv('./data/events.tsv'),\n  tsv('./data/whr2018.tsv'),\n];\n\nPromise.all(filesPromise).then((dataResults) => handleData(dataResults));\n\nfunction handleData(data) {\n  const [topology, migrationData, conversion, population, events, whrData] = data;\n  const migrationDiff = getMigrationDiff(migrationData);\n\n  const codeToName = {}, countryPop = {}, countryWHR = {};\n  population.forEach((c) => countryPop[c.Country] = filterNaN(c));\n  whrData.forEach((c) => countryWHR[c.country] = filterNaN(c));\n  conversion.forEach(c => codeToName[c.code3] = c.name);\n  store.set('codeToName', codeToName);\n\n  map.draw('#map', topology, migrationDiff, countryPop);\n  graph.draw('#graph', migrationDiff, whrData, countryPop);\n  chord.draw('#chord', migrationData);\n\n  ReactDOM.render(<CountrySelect data={migrationData} />, byId('countrySelect'));\n  ReactDOM.render(<EventSelect events={events} />, byId('eventList'));\n  ReactDOM.render(<MigrationSwitch />, byId('migrationSwitch'));\n  ReactDOM.render(<YearSlider />, byId('yearSlider'));\n\n  selection.setCountries(['PRT', 'FRA', 'GBR']);\n}\n"],"sourceRoot":""}