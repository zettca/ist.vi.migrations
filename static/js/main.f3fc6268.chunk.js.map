{"version":3,"sources":["helpers.js","idioms.js","index.js"],"names":["makeSVG","id","width","height","select","append","attr","plotSVG","linesSVG","mapSVG","chordSVG","idioms","drawMap","data","population","countryPop","forEach","d","color","d3","domain","map","n","range","projection","scale","translate","path","zoom","scaleExtent","on","selectAll","transform","call","features","enter","properties","name","style","selected","console","log","drawPlot","margin","top","right","bottom","left","x","nice","y","g","concat","remove","clone","text","iterations","arguments","length","undefined","nodes","points","node","fx","getAttribute","fy","labels","_ref","links","source","i","target","simulation","force","distanceMax","distance","stop","tick","_","each","a","Math","atan2","this","PI","drawChord","outerRadius","min","innerRadius","chords","padAngle","sortSubgroups","myChord","ribbon","radius","formatValue","arc","group","groups","index","darker","groupTick","step","k","endAngle","startAngle","value","angle","groupTicks","filter","drawLines","widthMain","heightMain","dataYears","dataset","selectedCountry","year","yearData","push","Date","Number","xScale","yScale","line","curve","tickFormat","datum","classed","transition","duration","updateLines","chordData","plotData","years","Promise","all","tsv","then","dataYearsList","countryData","Country","json","dataResults","_dataResults","Object","slicedToArray","mapData"],"mappings":"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","file":"static/js/main.f3fc6268.chunk.js","sourcesContent":["import { select } from 'd3';\n\nexport function makeSVG(id, width, height) {\n  return select(id).append('svg')\n    .attr('width', width)\n    .attr('height', height);\n}\n","import * as d3 from 'd3';\nimport { makeSVG } from './helpers';\n\nexport default {\n  drawMap: drawMap,\n  drawPlot: drawPlot,\n  drawChord: drawChord,\n  drawLines: drawLines,\n};\n\nlet plotSVG, linesSVG, mapSVG, chordSVG;\n\nlet selectedCountry = 'SWE';\nlet dataYears = null;\n\nfunction selected(d) {\n  d3.select('.selected').classed('selected', false);\n  d3.select(this).classed('selected', true);\n  selectedCountry = d.id;\n  updateLines();\n}\n\nexport function drawPlot(id, width, height, data) {\n  plotSVG = makeSVG(id, width, height);\n  const margin = { top: 20, right: 20, bottom: 30, left: 40 };\n\n  const x = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.x)).nice()\n    .range([margin.left, width - margin.right]);\n\n  const y = d3.scaleLinear()\n    .domain(d3.extent(data, d => d.y)).nice()\n    .range([height - margin.bottom, margin.top]);\n\n  function xAxis(g) {\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x))\n      .call(g => g.select('.domain').remove());\n  }\n\n  function yAxis(g) {\n    g\n      .attr('transform', `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y))\n      .call(g => g.select('.domain').remove())\n      .call(g => g.select('.tick:last-of-type text').clone());\n  }\n\n  function dodge(text, iterations = 300) {\n    const nodes = text.nodes();\n    const left = text => text.attr('text-anchor', 'start').attr('dy', '0.32em');\n    const right = text => text.attr('text-anchor', 'end').attr('dy', '0.32em');\n    const top = text => text.attr('text-anchor', 'middle').attr('dy', '0.0em');\n    const bottom = text => text.attr('text-anchor', 'middle').attr('dy', '0.8em');\n    const points = nodes.map(node => ({ fx: +node.getAttribute('x'), fy: +node.getAttribute('y') }));\n    const labels = points.map(({ fx, fy }) => ({ x: fx, y: fy }));\n    const links = points.map((source, i) => ({ source, target: labels[i] }));\n\n    const simulation = d3.forceSimulation(points.concat(labels))\n      .force('charge', d3.forceManyBody().distanceMax(80))\n      .force('link', d3.forceLink(links).distance(4).iterations(4))\n      .stop();\n\n    for (let i = 0; i < iterations; ++i) simulation.tick();\n\n    text\n      .attr('x', (_, i) => labels[i].x)\n      .attr('y', (_, i) => labels[i].y)\n      .each(function (_, i) {\n        const a = Math.atan2(labels[i].y - points[i].fy, labels[i].x - points[i].fx);\n        d3.select(this).call(\n          a > Math.PI / 4 && a <= Math.PI * 3 / 4 ? bottom\n            : a > -Math.PI / 4 && a <= Math.PI / 4 ? left\n              : a > -Math.PI * 3 / 4 && a <= Math.PI * 3 / 4 ? top\n                : right);\n      });\n  }\n\n  plotSVG.append('g').attr('class', 'axis-x').call(xAxis);\n  plotSVG.append('g').attr('class', 'axis-y').call(yAxis);\n\n  plotSVG.append('g')\n    .attr('class', 'circles')\n    .selectAll('circle')\n    .data(data)\n    .enter().append('circle')\n    .attr('cx', d => x(d.x))\n    .attr('cy', d => y(d.y))\n    .attr('r', 4);\n\n  plotSVG.append('g')\n    .attr('class', 'text')\n    .selectAll('text')\n    .data(data)\n    .enter().append('text')\n    .attr('x', d => x(d.x))\n    .attr('y', d => y(d.y))\n    .text(d => d.name)\n    .call(dodge);\n}\n\nfunction updateLines() {\n  const group = linesSVG.selectAll('g');\n\n  const\n    margin = { top: 50, right: 50, bottom: 50, left: 100 },\n    width = linesSVG.attr('width') - margin.left - margin.right,\n    height = linesSVG.attr('height') - margin.top - margin.bottom;\n\n  let dataset = [];\n  if (selectedCountry) {\n    for (let year in dataYears) {\n      const yearData = dataYears[year]['WORLD'][selectedCountry];\n      dataset.push({ year: new Date(year), value: Number(yearData) });\n    }\n  }\n  console.log(dataset);\n\n  const xScale = d3.scaleLinear()\n    .domain([d3.min(dataset, d => d.year), d3.max(dataset, d => d.year)]).nice()\n    .range([0, width]);\n\n  const yScale = d3.scaleLinear()\n    .domain([d3.min(dataset, d => d.value), d3.max(dataset, d => d.value)]).nice()\n    .range([height, 0]);\n\n  group.select('.y-axis').call(d3.axisLeft(yScale));\n\n  const line = d3.line()\n    .x(d => xScale(d.year))\n    .y(d => yScale(d.value))\n    .curve(d3.curveMonotoneX);\n\n  group.select('.line')\n    .datum(dataset)\n    .transition().duration(1000)\n    .attr('d', line);\n\n  group.selectAll('.dots circle').data(dataset)\n    .transition().duration(1000)\n    .attr('cx', (d) => xScale(d.year))\n    .attr('cy', (d) => yScale(d.value))\n    .attr('r', 5);\n}\n\nexport function drawLines(id, widthMain, heightMain, data) {\n  linesSVG = makeSVG(id, widthMain, heightMain);\n\n  const\n    margin = { top: 50, right: 50, bottom: 50, left: 100 },\n    width = widthMain - margin.left - margin.right,\n    height = heightMain - margin.top - margin.bottom;\n\n  const group = linesSVG\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', `translate(${margin.left},${margin.top})`);\n\n  dataYears = data;\n\n  let dataset = [];\n  if (selectedCountry) {\n    for (let year in dataYears) {\n      const yearData = dataYears[year]['WORLD'][selectedCountry];\n      dataset.push({ year: new Date(year), value: Number(yearData) });\n    }\n  }\n  console.log(dataset);\n\n  const xScale = d3.scaleLinear()\n    .domain([d3.min(dataset, d => d.year), d3.max(dataset, d => d.year)]).nice()\n    .range([0, width]);\n\n  const yScale = d3.scaleLinear()\n    .domain([d3.min(dataset, d => d.value), d3.max(dataset, d => d.value)]).nice()\n    .range([height, 0]);\n\n  const line = d3.line()\n    .x(d => xScale(d.year))\n    .y(d => yScale(d.value))\n    .curve(d3.curveMonotoneX);\n\n  group.append('g')\n    .attr('class', 'x-axis')\n    .attr('transform', `translate(0,${height})`)\n    .call(d3.axisBottom(xScale).tickFormat(d3.timeFormat('%Y')));\n\n  group.append('g')\n    .attr('class', 'y-axis')\n    .call(d3.axisLeft(yScale));\n\n  group.append('path')\n    .datum(dataset)\n    .attr('class', 'line')\n    .attr('d', line);\n\n  group.append('g').attr('class', 'dots').selectAll()\n    .data(dataset)\n    .enter().append('circle')\n    .attr('cx', (d) => xScale(d.year))\n    .attr('cy', (d) => yScale(d.value))\n    .attr('r', 5);\n}\n\nexport function drawMap(id, width, height, data, population) {\n  mapSVG = makeSVG(id, width, height);\n  const countryPop = {};\n\n  population.forEach((d) => countryPop[d.id] = +d.population);\n\n  const color = d3.scaleThreshold()\n    .domain([10, 100, 500, 1000, 5000, 10000, 50000, 100000, 500000, 1500000].map(n => n * 1000))\n    .range(['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b', '#03132b']);\n\n  const projection = d3.geoMercator()\n    .scale(width / 4)\n    .translate([width / 2, height / 1.2]);\n\n  const path = d3.geoPath().projection(projection);\n  const zoom = d3.zoom()\n    .scaleExtent([1, 6])\n    .on('zoom', zoomed);\n\n  mapSVG.call(zoom);\n\n  const map = mapSVG.append('g').attr('class', 'countries');\n  map\n    .selectAll('path')\n    .data(data.features)\n    .enter().append('path')\n    .attr('id', (d) => d.id)\n    .attr('name', (d) => d.properties.name)\n    .attr('d', path)\n    .style('fill', (d) => color(countryPop[d.id]))\n    .on('click', selected)\n    .on('mouseover', mouseIn)\n    .on('mouseout', mouseOut)\n    .on('contextmenu', contextMenu);\n\n  function mouseIn() { }\n\n  function mouseOut() { }\n\n  function contextMenu() {\n    console.log('right clicked...');\n  }\n\n  function zoomed() {\n    map.selectAll('path')\n      .attr('transform', d3.event.transform);\n  }\n\n}\n\nexport function drawChord(id, width, height, data) {\n  chordSVG = makeSVG(id, width, height);\n\n  function groupTicks(d, step) {\n    const k = (d.endAngle - d.startAngle) / d.value;\n    return d3.range(0, d.value, step).map(value => {\n      return { value: value, angle: value * k + d.startAngle };\n    });\n  }\n\n  const\n    outerRadius = Math.min(width, height) * 0.5 - 30,\n    innerRadius = outerRadius - 20;\n\n  chordSVG\n    .attr('viewBox', [-width / 2, -height / 2, width, height])\n    .attr('font-size', 10)\n    .attr('font-family', 'sans-serif');\n\n  const myChord = d3.chord().padAngle(0.05).sortSubgroups(d3.descending);\n\n  const chords = myChord(data);\n  const ribbon = d3.ribbon().radius(innerRadius);\n\n  const formatValue = d3.formatPrefix(',.0', 1e3);\n  const color = d3.scaleOrdinal()\n    .domain(d3.range(4))\n    .range(['#c6dbef', '#6baed6', '#2171b5', '#08306b']);\n\n  const arc = d3.arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\n\n  const group = chordSVG.append('g')\n    .selectAll('g')\n    .data(chords.groups)\n    .enter().append('g');\n\n  group.append('path')\n    .attr('fill', d => color(d.index))\n    .attr('stroke', d => d3.rgb(color(d.index)).darker())\n    .attr('d', arc);\n\n  const groupTick = group.append('g')\n    .selectAll('g')\n    .data(d => groupTicks(d, 1e3))\n    .enter().append('g')\n    .attr('transform', d => `rotate(${d.angle * 180 / Math.PI - 90}) translate(${outerRadius},0)`);\n\n  groupTick.append('line')\n    .attr('stroke', '#000')\n    .attr('x2', 6);\n\n  groupTick\n    .filter(d => d.value % 5e3 === 0)\n    .append('text')\n    .attr('x', 8)\n    .attr('dy', '.35em')\n    .attr('transform', d => d.angle > Math.PI ? 'rotate(180) translate(-16)' : null)\n    .attr('text-anchor', d => d.angle > Math.PI ? 'end' : null)\n    .text(d => formatValue(d.value));\n\n  chordSVG.append('g')\n    .attr('fill-opacity', 0.67)\n    .selectAll('path')\n    .data(chords)\n    .enter().append('path')\n    .attr('d', ribbon)\n    .attr('fill', d => color(d.target.index))\n    .attr('stroke', d => d3.rgb(color(d.target.index)).darker());\n\n}\n","/*\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nReactDOM.render(<App />, document.getElementById('root'));\n*/\n\nimport { tsv, json } from 'd3-fetch';\nimport idioms from './idioms';\nimport './index.css';\nimport './idioms.css';\n\n// FETCH DATA AND DRAW\n\nconst chordData = [\n  [16, 16, 13, 12, 0, 6],\n  [1, 0, 12, 10, 6, 1],\n  [9, 10, 13, 0, 5, 5],\n  [15, 1, 14, 16, 9, 16],\n  [5, 10, 16, 16, 10, 0],\n  [9, 8, 2, 13, 13, 9]\n];\n\nconst plotData = [\n  { 'name': 'A', 'x': 21, 'y': 110 },\n  { 'name': 'B', 'x': 22.8, 'y': 93 },\n  { 'name': 'C', 'x': 18.7, 'y': 175 },\n  { 'name': 'D', 'x': 14.3, 'y': 245 },\n  { 'name': 'E', 'x': 24.4, 'y': 62 },\n  { 'name': 'F', 'x': 14.7, 'y': 230 },\n  { 'name': 'G', 'x': 32.4, 'y': 66 },\n  { 'name': 'H', 'x': 30.4, 'y': 52 },\n  { 'name': 'I', 'x': 33.9, 'y': 65 },\n  { 'name': 'J', 'x': 15.5, 'y': 150 },\n  { 'name': 'K', 'x': 15.2, 'y': 150 },\n  { 'name': 'L', 'x': 13.3, 'y': 245 },\n  { 'name': 'M', 'x': 19.2, 'y': 175 },\n  { 'name': 'N', 'x': 27.3, 'y': 66 },\n  { 'name': 'O', 'x': 26, 'y': 91 },\n  { 'name': 'P', 'x': 30.4, 'y': 113 },\n  { 'name': 'Q', 'x': 15.8, 'y': 264 },\n  { 'name': 'R', 'x': 19.7, 'y': 175 },\n  { 'name': 'S', 'x': 15, 'y': 335 },\n  { 'name': 'T', 'x': 21.4, 'y': 109 }\n];\n\nconst years = [1990, 1995, 2000, 2005, 2010, 2015, 2017];\nPromise.all(years.map(year => tsv(`./data/migration_flows/${year}f.tsv`)))\n  .then(dataYearsList => {\n    const dataYears = {};\n    dataYearsList.forEach((yearData, i) => {\n      dataYears[years[i]] = {};\n      yearData.forEach(countryData => dataYears[years[i]][countryData.Country] = countryData);\n    });\n\n    console.log(dataYears);\n\n    Promise.all([\n      json('./data/countries.json'),\n      //tsv('./data/conversion.tsv'),\n      tsv('./data/population.tsv'),\n    ]).then((dataResults) => {\n      const [mapData, /*conversion,*/ population] = dataResults;\n      idioms.drawPlot('#plot', 600, 420, plotData);\n      idioms.drawLines('#lines', 800, 420, dataYears);\n      idioms.drawMap('#map', 800, 420, mapData, population);\n      idioms.drawChord('#chord', 600, 420, chordData);\n\n    });\n  });\n\n\n\n// UPDATE DATA HANDLERS\n"],"sourceRoot":""}